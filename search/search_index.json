{
    "docs": [
        {
            "location": "/",
            "text": "Introductions\n#\n\n\nMy name is Pham Huu Toan. I live in Ha Noi, Viet Nam.\nI work for an IT company. I love football, music and share knowledge for everybody.",
            "title": "ABOUT ME"
        },
        {
            "location": "/#introductions",
            "text": "My name is Pham Huu Toan. I live in Ha Noi, Viet Nam.\nI work for an IT company. I love football, music and share knowledge for everybody.",
            "title": "Introductions"
        },
        {
            "location": "/background/tech_web/internet_work/",
            "text": "This article discusses what the Internet is and how it works.\n\n\nSummary\n#\n\n\nThe Internet is the backbone of the Web, the technical infrastructure that makes the Web possible. At its most basic, the Internet is a large network of computers which communicate all together.\n\n\nThe history of the Internet is somewhat obscure. It began in the 1960s as a US-army-funded research project, then evolved into a public infrastructure in the 1980s with the support of many public universities and private companies. The various technologies that support the Internet have evolved over time, but the way it works hasn't changed that much: Internet is a way to connect computers all together and ensure that, whatever happens, they find a way to stay connected.\n\n\nDeeper dive\n#\n\n\nA simple network\n#\n\n\nWhen two computers need to communicate, you have to link them, either physically (usually with an Ethernet cable) or wirelessly (for example with WiFi or Bluetooth systems). All modern computers can sustain any of those connections.\n\n\n\n\nNote\n\n\nFor the rest of this article, we will only talk about physical cables, but wireless networks work the same.\n\n\n\n\n\n\nSuch a network is not limited to two computers. You can connect as many computers as you wish. But it gets complicated quickly. If you're trying to connect, say, ten computers, you need 45 cables, with nine plugs per computer!\n\n\n\n\nTo solve this problem, each computer on a network is connected to a special tiny computer called a router. This router has only one job: like a signaler at a railway station, it makes sure that a message sent from a given computer arrives at the right destination computer. To send a message to computer B, computer A must send the message to the router, which in turn forwards the message to computer B and makes sure the message is not delivered to computer C.\n\n\nOnce we add a router to the system, our network of 10 computers only requires 10 cables: a single plug for each computer and a router with 10 plugs.\n\n\n\n\nA network of networks\n#\n\n\nSo far so good. But what about connecting hundreds, thousands, billions of computers? Of course a single router can't scale that far, but, if you read carefully, we said that a router is a computer like any other, so what keeps us from connecting two routers together? Nothing, so let's do that.\n\n\n\n\nBy connecting computers to routers, then routers to routers, we are able to scale infinitely.\n\n\n\n\nSuch a network comes very close to what we call the Internet, but we're missing something. We built that network for our own purposes. There are other networks out there: your friends, your neighbors, anyone can have their own network of computers. But it's not really possible to set cables up between your house and the rest of the world, so how can you handle this? Well, there are already cables linked to your house, for example, electric power and telephone. The telephone infrastructure already connects your house with anyone in the world so it is the perfect wire we need. To connect our network to the telephone infrastructure, we need a special piece of equipment called a modem. This modem turns the information from our network into information manageable by the telephone infrastructure and vice versa.\n\n\n\n\nSo we are connected to the telephone infrastructure. The next step is to send the messages from our network to the network we want to reach. To do that, we will connect our network to an Internet Service Provider (ISP). An ISP is a company that manages some special routers that link all together and can also access other ISPs' routers. So the message from our network is carried through the network of ISP networks to the destination network. The Internet consists of this whole infrastructure of networks.\n\n\n\n\nFinding computers\n#\n\n\nIf you want to send a message to a computer, you have to specify which one. Thus any computer linked to a network has a unique address to identify it, called an \"IP address\" (where IP stands for Internet Protocol). It's an address made of a series of four numbers separated by dots, for example: \n192.168.2.10\n.\n\n\nThat's perfectly fine for computers, but we human beings have a hard time remembering that sort of address. To make things easier, we can alias an IP address with a human readable name called a domain name. For example, \ngoogle.com\n is the domain name used on top of the IP address \n173.194.121.32\n. So using the domain name is the easiest way for us to reach a computer over the Internet.\n\n\nInternet and the web\n#\n\n\nAs you might notice, when we browse the Web with a Web browser, we usually use the domain name to reach a website. Does that mean the Internet and the Web are the same thing? It's not that simple. As we saw, the Internet is a technical infrastructure which allows billions of computers to be connected all together. Among those computers, some computers (called Web servers) can send messages intelligible to web browsers. The Internet is an infrastructure, whereas the Web is a service built on top of the infrastructure. It is worth noting there are several other services built on top of the Internet, such as email and IRC.",
            "title": "How the Internet work"
        },
        {
            "location": "/background/tech_web/internet_work/#summary",
            "text": "The Internet is the backbone of the Web, the technical infrastructure that makes the Web possible. At its most basic, the Internet is a large network of computers which communicate all together.  The history of the Internet is somewhat obscure. It began in the 1960s as a US-army-funded research project, then evolved into a public infrastructure in the 1980s with the support of many public universities and private companies. The various technologies that support the Internet have evolved over time, but the way it works hasn't changed that much: Internet is a way to connect computers all together and ensure that, whatever happens, they find a way to stay connected.",
            "title": "Summary"
        },
        {
            "location": "/background/tech_web/internet_work/#deeper-dive",
            "text": "",
            "title": "Deeper dive"
        },
        {
            "location": "/background/tech_web/internet_work/#a-simple-network",
            "text": "When two computers need to communicate, you have to link them, either physically (usually with an Ethernet cable) or wirelessly (for example with WiFi or Bluetooth systems). All modern computers can sustain any of those connections.   Note  For the rest of this article, we will only talk about physical cables, but wireless networks work the same.    Such a network is not limited to two computers. You can connect as many computers as you wish. But it gets complicated quickly. If you're trying to connect, say, ten computers, you need 45 cables, with nine plugs per computer!   To solve this problem, each computer on a network is connected to a special tiny computer called a router. This router has only one job: like a signaler at a railway station, it makes sure that a message sent from a given computer arrives at the right destination computer. To send a message to computer B, computer A must send the message to the router, which in turn forwards the message to computer B and makes sure the message is not delivered to computer C.  Once we add a router to the system, our network of 10 computers only requires 10 cables: a single plug for each computer and a router with 10 plugs.",
            "title": "A simple network"
        },
        {
            "location": "/background/tech_web/internet_work/#a-network-of-networks",
            "text": "So far so good. But what about connecting hundreds, thousands, billions of computers? Of course a single router can't scale that far, but, if you read carefully, we said that a router is a computer like any other, so what keeps us from connecting two routers together? Nothing, so let's do that.   By connecting computers to routers, then routers to routers, we are able to scale infinitely.   Such a network comes very close to what we call the Internet, but we're missing something. We built that network for our own purposes. There are other networks out there: your friends, your neighbors, anyone can have their own network of computers. But it's not really possible to set cables up between your house and the rest of the world, so how can you handle this? Well, there are already cables linked to your house, for example, electric power and telephone. The telephone infrastructure already connects your house with anyone in the world so it is the perfect wire we need. To connect our network to the telephone infrastructure, we need a special piece of equipment called a modem. This modem turns the information from our network into information manageable by the telephone infrastructure and vice versa.   So we are connected to the telephone infrastructure. The next step is to send the messages from our network to the network we want to reach. To do that, we will connect our network to an Internet Service Provider (ISP). An ISP is a company that manages some special routers that link all together and can also access other ISPs' routers. So the message from our network is carried through the network of ISP networks to the destination network. The Internet consists of this whole infrastructure of networks.",
            "title": "A network of networks"
        },
        {
            "location": "/background/tech_web/internet_work/#finding-computers",
            "text": "If you want to send a message to a computer, you have to specify which one. Thus any computer linked to a network has a unique address to identify it, called an \"IP address\" (where IP stands for Internet Protocol). It's an address made of a series of four numbers separated by dots, for example:  192.168.2.10 .  That's perfectly fine for computers, but we human beings have a hard time remembering that sort of address. To make things easier, we can alias an IP address with a human readable name called a domain name. For example,  google.com  is the domain name used on top of the IP address  173.194.121.32 . So using the domain name is the easiest way for us to reach a computer over the Internet.",
            "title": "Finding computers"
        },
        {
            "location": "/background/tech_web/internet_work/#internet-and-the-web",
            "text": "As you might notice, when we browse the Web with a Web browser, we usually use the domain name to reach a website. Does that mean the Internet and the Web are the same thing? It's not that simple. As we saw, the Internet is a technical infrastructure which allows billions of computers to be connected all together. Among those computers, some computers (called Web servers) can send messages intelligible to web browsers. The Internet is an infrastructure, whereas the Web is a service built on top of the infrastructure. It is worth noting there are several other services built on top of the Internet, such as email and IRC.",
            "title": "Internet and the web"
        },
        {
            "location": "/background/tech_web/web_works/",
            "text": "How the web works provides a simplified view of what happens when you view a webpage in a web browser on your computer or phone.\n\n\nClients and servers\n#\n\n\n\n\n\n\n\n\nClients are the typical web user's internet-connected devices (for example, your computer connected to your Wi-Fi, or your phone connected to your mobile network) and web-accessing software available on those devices (usually a web browser like Firefox or Chrome).\n\n\n\n\n\n\nServers are computers that store webpages, sites, or apps. When a client device wants to access a webpage, a copy of the webpage is downloaded from the server onto the client machine to be displayed in the user's web browser.\n\n\n\n\n\n\nThe other parts of the toolbox\n#\n\n\nThe client and server we've described above don't tell the whole story. There are many other parts involved, and we'll describe them below.\n\n\nFor now, let's imagine that the web is a road. On one end of the road is the client, which is like your house. On the other end of the road is the server, which is a shop you want to buy something from.\n\n\n\n\nIn addition to the client and the server, we also need to say hello to:\n\n\n\n\n\n\nYour internet connection:\n Allows you to send and receive data on the web. It's basically like the street between your house and the shop.\n\n\n\n\n\n\nTCP/IP:\n Transmission Control Protocol and Internet Protocol are communication protocols that define how data should travel across the web. This is like the transport mechanisms that let you place an order, go to the shop, and buy your goods. In our example, this is like a car or a bike (or however else you might get around).\n\n\n\n\n\n\nDNS:\n Domain Name Servers are like an address book for websites. When you type a web address in your browser, the browser looks at the DNS to find the web site's real address before it can retrieve the website. The browser needs to find out which server the website lives on, so it can send HTTP messages to the right place (see below). This is like looking up the address of the shop so you can access it.\n\n\n\n\n\n\nHTTP:\n Hypertext Transfer Protocol is an application protocol that defines a language for clients and servers to speak to each other. This is like the language you use to order your goods.\n\n\n\n\n\n\nComponent files:\n A website is made up of many different files, which are like the different parts of the goods you buy from the shop. These files come in two main types:\n\n\n\n\nCode files:\n Websites are built primarily from HTML, CSS, and JavaScript, though you'll meet other technologies a bit later.\n\n\nAssets:\n This is a collective name for all the other stuff that makes up a website, such as images, music, video, Word documents, and PDFs.\n\n\n\n\n\n\n\n\nSo what happens, exactly?\n#\n\n\nWhen you type a web address into your browser (for our analogy that's like walking to the shop):\n\n\n\n\n\n\nThe browser goes to the DNS server, and finds the real address of the server that the website lives on (you find the address of the shop).\n\n\n\n\n\n\nThe browser sends an HTTP request message to the server, asking it to send a copy of the website to the client (you go to the shop and order your goods). This message, and all other data sent between the client and the server, is sent across your internet connection using TCP/IP.\n\n\n\n\n\n\nProvided the server approves the client's request, the server sends the client a \"200 OK\" message, which means \"Of course you can look at that website! Here it is\", and then starts sending the website's files to the browser as a series of small chunks called data packets (the shop gives you your goods, and you bring them back to your house).\n\n\n\n\n\n\nThe browser assembles the small chunks into a complete website and displays it to you (the goods arrive at your door \u2014 new shiny stuff, awesome!).\n\n\n\n\n\n\nDNS explained\n#\n\n\nReal web addresses aren't the nice, memorable strings you type into your address bar to find your favorite websites. They are special numbers that look like this: 63.245.215.20.\n\n\nThis is called an \nIP address\n, and it represents a unique location on the Web. However, it's not very easy to remember, is it? That's why \nDomain Name Servers\n were invented. These are special servers that match up a web address you type into your browser (like \"mozilla.org\") to the website's real (IP) address.\n\n\nWebsites can be reached directly via their IP addresses. Try going to the Mozilla website by typing 63.245.215.20 into the address bar on a new browser tab.\n\n\n\n\nPackets explained\n#\n\n\nEarlier we used the term \"packets\" to describe the format in which the data is sent from server to client. What do we mean here? Basically, when data is sent across the web, it is sent as thousands of small chunks, so that many different web users can download the same website at the same time. If web sites were sent as single big chunks, only one user could download one at a time, which obviously would make the web very inefficient and not much fun to use.",
            "title": "How the Web works"
        },
        {
            "location": "/background/tech_web/web_works/#clients-and-servers",
            "text": "Clients are the typical web user's internet-connected devices (for example, your computer connected to your Wi-Fi, or your phone connected to your mobile network) and web-accessing software available on those devices (usually a web browser like Firefox or Chrome).    Servers are computers that store webpages, sites, or apps. When a client device wants to access a webpage, a copy of the webpage is downloaded from the server onto the client machine to be displayed in the user's web browser.",
            "title": "Clients and servers"
        },
        {
            "location": "/background/tech_web/web_works/#the-other-parts-of-the-toolbox",
            "text": "The client and server we've described above don't tell the whole story. There are many other parts involved, and we'll describe them below.  For now, let's imagine that the web is a road. On one end of the road is the client, which is like your house. On the other end of the road is the server, which is a shop you want to buy something from.   In addition to the client and the server, we also need to say hello to:    Your internet connection:  Allows you to send and receive data on the web. It's basically like the street between your house and the shop.    TCP/IP:  Transmission Control Protocol and Internet Protocol are communication protocols that define how data should travel across the web. This is like the transport mechanisms that let you place an order, go to the shop, and buy your goods. In our example, this is like a car or a bike (or however else you might get around).    DNS:  Domain Name Servers are like an address book for websites. When you type a web address in your browser, the browser looks at the DNS to find the web site's real address before it can retrieve the website. The browser needs to find out which server the website lives on, so it can send HTTP messages to the right place (see below). This is like looking up the address of the shop so you can access it.    HTTP:  Hypertext Transfer Protocol is an application protocol that defines a language for clients and servers to speak to each other. This is like the language you use to order your goods.    Component files:  A website is made up of many different files, which are like the different parts of the goods you buy from the shop. These files come in two main types:   Code files:  Websites are built primarily from HTML, CSS, and JavaScript, though you'll meet other technologies a bit later.  Assets:  This is a collective name for all the other stuff that makes up a website, such as images, music, video, Word documents, and PDFs.",
            "title": "The other parts of the toolbox"
        },
        {
            "location": "/background/tech_web/web_works/#so-what-happens-exactly",
            "text": "When you type a web address into your browser (for our analogy that's like walking to the shop):    The browser goes to the DNS server, and finds the real address of the server that the website lives on (you find the address of the shop).    The browser sends an HTTP request message to the server, asking it to send a copy of the website to the client (you go to the shop and order your goods). This message, and all other data sent between the client and the server, is sent across your internet connection using TCP/IP.    Provided the server approves the client's request, the server sends the client a \"200 OK\" message, which means \"Of course you can look at that website! Here it is\", and then starts sending the website's files to the browser as a series of small chunks called data packets (the shop gives you your goods, and you bring them back to your house).    The browser assembles the small chunks into a complete website and displays it to you (the goods arrive at your door \u2014 new shiny stuff, awesome!).",
            "title": "So what happens, exactly?"
        },
        {
            "location": "/background/tech_web/web_works/#dns-explained",
            "text": "Real web addresses aren't the nice, memorable strings you type into your address bar to find your favorite websites. They are special numbers that look like this: 63.245.215.20.  This is called an  IP address , and it represents a unique location on the Web. However, it's not very easy to remember, is it? That's why  Domain Name Servers  were invented. These are special servers that match up a web address you type into your browser (like \"mozilla.org\") to the website's real (IP) address.  Websites can be reached directly via their IP addresses. Try going to the Mozilla website by typing 63.245.215.20 into the address bar on a new browser tab.",
            "title": "DNS explained"
        },
        {
            "location": "/background/tech_web/web_works/#packets-explained",
            "text": "Earlier we used the term \"packets\" to describe the format in which the data is sent from server to client. What do we mean here? Basically, when data is sent across the web, it is sent as thousands of small chunks, so that many different web users can download the same website at the same time. If web sites were sent as single big chunks, only one user could download one at a time, which obviously would make the web very inefficient and not much fun to use.",
            "title": "Packets explained"
        },
        {
            "location": "/background/oop/",
            "text": "Object Oriented Concepts\n#\n\n\nBefore we go in detail, lets define important terms related to Object Oriented Programming.\n\n\n\n\n\n\nClass\n \u2212 This is a programmer-defined data type, which includes local functions as well as local data. You can think of a class as a template for making many instances of the same kind (or class) of object.\n\n\n\n\n\n\nObject\n \u2212 An individual instance of the data structure defined by a class. You define a class once and then make many objects that belong to it. Objects are also known as instance.\n\n\n\n\n\n\nMember Variable\n \u2212 These are the variables defined inside a class. This data will be invisible to the outside of the class and can be accessed via member functions. These variables are called attribute of the object once an object is created.\n\n\n\n\n\n\nMember function\n \u2212 These are the function defined inside a class and are used to access object data.\n\n\n\n\n\n\nInheritance\n \u2212 When a class is defined by inheriting existing function of a parent class then it is called inheritance. Here child class will inherit all or few member functions and variables of a parent class.\n\n\n\n\n\n\nParent class\n \u2212 A class that is inherited from by another class. This is also called a base class or super class.\n\n\n\n\n\n\nChild Class\n \u2212 A class that inherits from another class. This is also called a subclass or derived class.\n\n\n\n\n\n\nPolymorphism\n \u2212 This is an object oriented concept where same function can be used for different purposes. For example function name will remain same but it make take different number of arguments and can do different task.\n\n\n\n\n\n\nOverloading\n \u2212 a type of polymorphism in which some or all of operators have different implementations depending on the types of their arguments. Similarly functions can also be overloaded with different implementation.\n\n\n\n\n\n\nData Abstraction\n \u2212 Any representation of data in which the implementation details are hidden (abstracted).\n\n\n\n\n\n\nEncapsulation\n \u2212 refers to a concept where we encapsulate all the data and member functions together to form an object.\n\n\n\n\n\n\nConstructor\n \u2212 refers to a special type of function which will be called automatically whenever there is an object formation from a class.\n\n\n\n\n\n\nDestructor\n \u2212 refers to a special type of function which will be called automatically whenever an object is deleted or goes out of scope.\n\n\n\n\n\n\nConstructor Functions\n#\n\n\nConstructor Functions are special type of functions which are called automatically whenever an object is created. So we take full advantage of this behaviour, by initializing many things through constructor functions.\n\n\nPHP provides a special function called __construct() to define a constructor. You can pass as many as arguments you like into the constructor function.\n\n\nFollowing example will create one constructor for Books class and it will initialize price and title for the book at the time of object creation.\n\n\n1\n2\n3\n4\n5\n<?php\n\n\nfunction\n \n__construct\n(\n \n$par1\n,\n \n$par2\n \n)\n \n{\n\n   \n$this\n->\ntitle\n \n=\n \n$par1\n;\n\n   \n$this\n->\nprice\n \n=\n \n$par2\n;\n\n\n}\n\n\n\n\n\n\n\nDestructor\n#\n\n\nLike a constructor function you can define a destructor function using function __destruct(). You can release all the resources with-in a destructor.\n\n\nInheritance\n#\n\n\nPHP class definitions can optionally inherit from a parent class definition by using the extends clause. The syntax is as follows \u2212\n\n\n1\n2\n3\n4\n<?php\n\n\nclass\n \nChild\n \nextends\n \nParent\n \n{\n\n   \n<\ndefinition\n \nbody\n>\n\n\n}\n\n\n\n\n\n\n\nThe effect of inheritance is that the child class (or subclass or derived class) has the following characteristics \u2212\n\n\n\n\n\n\nAutomatically has all the member variable declarations of the parent class.\n\n\n\n\n\n\nAutomatically has all the same member functions as the parent, which (by default) will work the same way as those functions do in the parent.\n\n\n\n\n\n\nFollowing example inherit Books class and adds more functionality based on the requirement.\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n<?php\n\n\nclass\n \nNovel\n \nextends\n \nBooks\n \n{\n\n   \nvar\n \n$publisher\n;\n\n\n   \nfunction\n \nsetPublisher\n(\n$par\n){\n\n      \n$this\n->\npublisher\n \n=\n \n$par\n;\n\n   \n}\n\n\n   \nfunction\n \ngetPublisher\n(){\n\n      \necho\n \n$this\n->\npublisher\n.\n \n\"<br />\"\n;\n\n   \n}\n\n\n}\n\n\n\n\n\n\n\nNow apart from inherited functions, class Novel keeps two additional member functions.\n\n\nFunction Overriding\n#\n\n\nFunction definitions in child classes override definitions with the same name in parent classes. In a child class, we can modify the definition of a function inherited from parent class.\n\n\nIn the following example getPrice and getTitle functions are overridden to return some values.\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n<?php\n\n\nfunction\n \ngetPrice\n()\n \n{\n\n   \necho\n \n$this\n->\nprice\n \n.\n \n\"<br/>\"\n;\n\n   \nreturn\n \n$this\n->\nprice\n;\n\n\n}\n\n\n\nfunction\n \ngetTitle\n(){\n\n   \necho\n \n$this\n->\ntitle\n \n.\n \n\"<br/>\"\n;\n\n   \nreturn\n \n$this\n->\ntitle\n;\n\n\n}\n\n\n\n\n\n\n\nAccess Modifier\n#\n\n\nPublic Members\n#\n\n\nUnless you specify otherwise, properties and methods of a class are public. That is to say, they may be accessed in three possible situations \u2212\n\n\n\n\n\n\nFrom outside the class in which it is declared\n\n\n\n\n\n\nFrom within the class in which it is declared\n\n\n\n\n\n\nFrom within another class that implements the class in which it is declared\n\n\n\n\n\n\nTill now we have seen all members as public members. If you wish to limit the accessibility of the members of a class then you define class members as private or protected.\n\n\nPrivate members\n#\n\n\nBy designating a member private, you limit its accessibility to the class in which it is declared. The private member cannot be referred to from classes that inherit the class in which it is declared and cannot be accessed from outside the class.\n\n\nA class member can be made private by using private keyword infront of the member.\n\n\nProtected members\n#\n\n\nA protected property or method is accessible in the class in which it is declared, as well as in classes that extend that class. Protected members are not available outside of those two kinds of classes. A class member can be made protected by using protected keyword in front of the member.\n\n\nInterfaces\n#\n\n\nInterfaces are defined to provide a common function names to the implementers. Different implementors can implement those interfaces according to their requirements. You can say, interfaces are skeletons which are implemented by developers.\n\n\nAs of PHP5, it is possible to define an interface, like this \u2212\n\n\n1\n2\n3\n4\n<?php\n\n\ninterface\n \nMail\n \n{\n\n   \npublic\n \nfunction\n \nsendMail\n();\n\n\n}\n\n\n\n\n\n\n\nThen, if another class implemented that interface, like this \u2212\n\n\n1\n2\n3\n4\n<?php\n\n\nclass\n \nReport\n \nimplements\n \nMail\n \n{\n\n   \n// sendMail() Definition goes here\n\n\n}\n\n\n\n\n\n\n\nConstants\n#\n\n\nA constant is somewhat like a variable, in that it holds a value, but is really more like a function because a constant is immutable. Once you declare a constant, it does not change.\n\n\nDeclaring one constant is easy, as is done in this version of MyClass \u2212\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\nclass MyClass {\n   const requiredMargin = 1.7;\n\n   function __construct($incomingValue) {\n      // Statements here run every time\n      // an instance of the class\n      // is created.\n   }\n}\n\n\n\n\n\n\nIn this class, requiredMargin is a constant. It is declared with the keyword const, and under no circumstances can it be changed to anything other than 1.7. Note that the constant's name does not have a leading $, as variable names do.\n\n\nAbstract Classes\n#\n\n\nAn abstract class is one that cannot be instantiated, only inherited. You declare an abstract class with the keyword abstract, like this \u2212\n\n\nWhen inheriting from an abstract class, all methods marked abstract in the parent's class declaration must be defined by the child; additionally, these methods must be defined with the same visibility.\n\n\n1\n2\n3\n4\nabstract class MyAbstractClass {\n   abstract function myAbstractFunction() {\n   }\n}\n\n\n\n\n\n\nNote that function definitions inside an abstract class must also be preceded by the keyword abstract. It is not legal to have abstract function definitions inside a non-abstract class.\n\n\nStatic Keyword\n#\n\n\nDeclaring class members or methods as static makes them accessible without needing an instantiation of the class. A member declared as static can not be accessed with an instantiated class object (though a static method can).\n\n\nTry out following example\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n<?php\n\n   \nclass\n \nFoo\n \n{\n\n      \npublic\n \nstatic\n \n$my_static\n \n=\n \n'foo'\n;\n\n\n      \npublic\n \nfunction\n \nstaticValue\n()\n \n{\n\n         \nreturn\n \nself\n::\n$my_static\n;\n\n      \n}\n\n   \n}\n\n\n   \nprint\n \nFoo\n::\n$my_static\n \n.\n \n\"\n\\n\n\"\n;\n\n   \n$foo\n \n=\n \nnew\n \nFoo\n();\n\n\n   \nprint\n \n$foo\n->\nstaticValue\n()\n \n.\n \n\"\n\\n\n\"\n;\n\n\n?>\n  \n\n\n\n\n\n\n\nFinal Keyword\n#\n\n\nPHP 5 introduces the final keyword, which prevents child classes from overriding a method by prefixing the definition with final. If the class itself is being defined final then it cannot be extended.\n\n\nFollowing example results in Fatal error: Cannot override final method BaseClass::moreTesting()\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n<?php\n\n\n   \nclass\n \nBaseClass\n \n{\n\n      \npublic\n \nfunction\n \ntest\n()\n \n{\n\n         \necho\n \n\"BaseClass::test() called<br>\"\n;\n\n      \n}\n\n\n      \nfinal\n \npublic\n \nfunction\n \nmoreTesting\n()\n \n{\n\n         \necho\n \n\"BaseClass::moreTesting() called<br>\"\n;\n\n      \n}\n\n   \n}\n\n\n   \nclass\n \nChildClass\n \nextends\n \nBaseClass\n \n{\n\n      \npublic\n \nfunction\n \nmoreTesting\n()\n \n{\n\n         \necho\n \n\"ChildClass::moreTesting() called<br>\"\n;\n\n      \n}\n\n   \n}\n\n\n?>\n\n\n\n\n\n\n\nCalling parent constructors\n#\n\n\nInstead of writing an entirely new constructor for the subclass, let's write it by calling the parent's constructor explicitly and then doing whatever is necessary in addition for instantiation of the subclass. Here's a simple example\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n<?php\n\n\nclass\n \nName\n \n{\n\n   \nvar\n \n$_firstName\n;\n\n   \nvar\n \n$_lastName\n;\n\n\n   \nfunction\n \nName\n(\n$first_name\n,\n \n$last_name\n)\n \n{\n\n      \n$this\n->\n_firstName\n \n=\n \n$first_name\n;\n\n      \n$this\n->\n_lastName\n \n=\n \n$last_name\n;\n\n   \n}\n\n\n   \nfunction\n \ntoString\n()\n \n{\n\n      \nreturn\n(\n$this\n->\n_lastName\n \n.\n\", \"\n \n.\n$this\n->\n_firstName\n);\n\n   \n}\n\n\n}\n\n\nclass\n \nNameSub1\n \nextends\n \nName\n \n{\n\n   \nvar\n \n$_middleInitial\n;\n\n\n   \nfunction\n \nNameSub1\n(\n$first_name\n,\n \n$middle_initial\n,\n \n$last_name\n)\n \n{\n\n      \nName\n::\nName\n(\n$first_name\n,\n \n$last_name\n);\n\n      \n$this\n->\n_middleInitial\n \n=\n \n$middle_initial\n;\n\n   \n}\n\n\n   \nfunction\n \ntoString\n()\n \n{\n\n      \nreturn\n(\nName\n::\ntoString\n()\n \n.\n \n\" \"\n \n.\n \n$this\n->\n_middleInitial\n);\n\n   \n}\n\n\n}\n\n\n\n\n\n\n\nIn this example, we have a parent class (Name), which has a two-argument constructor, and a subclass (NameSub1), which has a three-argument constructor. The constructor of NameSub1 functions by calling its parent constructor explicitly using the :: syntax (passing two of its arguments along) and then setting an additional field. Similarly, NameSub1 defines its non constructor toString() function in terms of the parent function that it overrides.\n\n\nNOTE\n \u2212 A constructor can be defined with the same name as the name of a class. It is defined in above example.",
            "title": "Object Oriented"
        },
        {
            "location": "/background/oop/#object-oriented-concepts",
            "text": "Before we go in detail, lets define important terms related to Object Oriented Programming.    Class  \u2212 This is a programmer-defined data type, which includes local functions as well as local data. You can think of a class as a template for making many instances of the same kind (or class) of object.    Object  \u2212 An individual instance of the data structure defined by a class. You define a class once and then make many objects that belong to it. Objects are also known as instance.    Member Variable  \u2212 These are the variables defined inside a class. This data will be invisible to the outside of the class and can be accessed via member functions. These variables are called attribute of the object once an object is created.    Member function  \u2212 These are the function defined inside a class and are used to access object data.    Inheritance  \u2212 When a class is defined by inheriting existing function of a parent class then it is called inheritance. Here child class will inherit all or few member functions and variables of a parent class.    Parent class  \u2212 A class that is inherited from by another class. This is also called a base class or super class.    Child Class  \u2212 A class that inherits from another class. This is also called a subclass or derived class.    Polymorphism  \u2212 This is an object oriented concept where same function can be used for different purposes. For example function name will remain same but it make take different number of arguments and can do different task.    Overloading  \u2212 a type of polymorphism in which some or all of operators have different implementations depending on the types of their arguments. Similarly functions can also be overloaded with different implementation.    Data Abstraction  \u2212 Any representation of data in which the implementation details are hidden (abstracted).    Encapsulation  \u2212 refers to a concept where we encapsulate all the data and member functions together to form an object.    Constructor  \u2212 refers to a special type of function which will be called automatically whenever there is an object formation from a class.    Destructor  \u2212 refers to a special type of function which will be called automatically whenever an object is deleted or goes out of scope.",
            "title": "Object Oriented Concepts"
        },
        {
            "location": "/background/oop/#constructor-functions",
            "text": "Constructor Functions are special type of functions which are called automatically whenever an object is created. So we take full advantage of this behaviour, by initializing many things through constructor functions.  PHP provides a special function called __construct() to define a constructor. You can pass as many as arguments you like into the constructor function.  Following example will create one constructor for Books class and it will initialize price and title for the book at the time of object creation.  1\n2\n3\n4\n5 <?php  function   __construct (   $par1 ,   $par2   )   { \n    $this -> title   =   $par1 ; \n    $this -> price   =   $par2 ;  }",
            "title": "Constructor Functions"
        },
        {
            "location": "/background/oop/#destructor",
            "text": "Like a constructor function you can define a destructor function using function __destruct(). You can release all the resources with-in a destructor.",
            "title": "Destructor"
        },
        {
            "location": "/background/oop/#inheritance",
            "text": "PHP class definitions can optionally inherit from a parent class definition by using the extends clause. The syntax is as follows \u2212  1\n2\n3\n4 <?php  class   Child   extends   Parent   { \n    < definition   body >  }    The effect of inheritance is that the child class (or subclass or derived class) has the following characteristics \u2212    Automatically has all the member variable declarations of the parent class.    Automatically has all the same member functions as the parent, which (by default) will work the same way as those functions do in the parent.    Following example inherit Books class and adds more functionality based on the requirement.   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12 <?php  class   Novel   extends   Books   { \n    var   $publisher ; \n\n    function   setPublisher ( $par ){ \n       $this -> publisher   =   $par ; \n    } \n\n    function   getPublisher (){ \n       echo   $this -> publisher .   \"<br />\" ; \n    }  }    Now apart from inherited functions, class Novel keeps two additional member functions.",
            "title": "Inheritance"
        },
        {
            "location": "/background/oop/#function-overriding",
            "text": "Function definitions in child classes override definitions with the same name in parent classes. In a child class, we can modify the definition of a function inherited from parent class.  In the following example getPrice and getTitle functions are overridden to return some values.   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10 <?php  function   getPrice ()   { \n    echo   $this -> price   .   \"<br/>\" ; \n    return   $this -> price ;  }  function   getTitle (){ \n    echo   $this -> title   .   \"<br/>\" ; \n    return   $this -> title ;  }",
            "title": "Function Overriding"
        },
        {
            "location": "/background/oop/#access-modifier",
            "text": "",
            "title": "Access Modifier"
        },
        {
            "location": "/background/oop/#public-members",
            "text": "Unless you specify otherwise, properties and methods of a class are public. That is to say, they may be accessed in three possible situations \u2212    From outside the class in which it is declared    From within the class in which it is declared    From within another class that implements the class in which it is declared    Till now we have seen all members as public members. If you wish to limit the accessibility of the members of a class then you define class members as private or protected.",
            "title": "Public Members"
        },
        {
            "location": "/background/oop/#private-members",
            "text": "By designating a member private, you limit its accessibility to the class in which it is declared. The private member cannot be referred to from classes that inherit the class in which it is declared and cannot be accessed from outside the class.  A class member can be made private by using private keyword infront of the member.",
            "title": "Private members"
        },
        {
            "location": "/background/oop/#protected-members",
            "text": "A protected property or method is accessible in the class in which it is declared, as well as in classes that extend that class. Protected members are not available outside of those two kinds of classes. A class member can be made protected by using protected keyword in front of the member.",
            "title": "Protected members"
        },
        {
            "location": "/background/oop/#interfaces",
            "text": "Interfaces are defined to provide a common function names to the implementers. Different implementors can implement those interfaces according to their requirements. You can say, interfaces are skeletons which are implemented by developers.  As of PHP5, it is possible to define an interface, like this \u2212  1\n2\n3\n4 <?php  interface   Mail   { \n    public   function   sendMail ();  }    Then, if another class implemented that interface, like this \u2212  1\n2\n3\n4 <?php  class   Report   implements   Mail   { \n    // sendMail() Definition goes here  }",
            "title": "Interfaces"
        },
        {
            "location": "/background/oop/#constants",
            "text": "A constant is somewhat like a variable, in that it holds a value, but is really more like a function because a constant is immutable. Once you declare a constant, it does not change.  Declaring one constant is easy, as is done in this version of MyClass \u2212  1\n2\n3\n4\n5\n6\n7\n8\n9 class MyClass {\n   const requiredMargin = 1.7;\n\n   function __construct($incomingValue) {\n      // Statements here run every time\n      // an instance of the class\n      // is created.\n   }\n}   In this class, requiredMargin is a constant. It is declared with the keyword const, and under no circumstances can it be changed to anything other than 1.7. Note that the constant's name does not have a leading $, as variable names do.",
            "title": "Constants"
        },
        {
            "location": "/background/oop/#abstract-classes",
            "text": "An abstract class is one that cannot be instantiated, only inherited. You declare an abstract class with the keyword abstract, like this \u2212  When inheriting from an abstract class, all methods marked abstract in the parent's class declaration must be defined by the child; additionally, these methods must be defined with the same visibility.  1\n2\n3\n4 abstract class MyAbstractClass {\n   abstract function myAbstractFunction() {\n   }\n}   Note that function definitions inside an abstract class must also be preceded by the keyword abstract. It is not legal to have abstract function definitions inside a non-abstract class.",
            "title": "Abstract Classes"
        },
        {
            "location": "/background/oop/#static-keyword",
            "text": "Declaring class members or methods as static makes them accessible without needing an instantiation of the class. A member declared as static can not be accessed with an instantiated class object (though a static method can).  Try out following example   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14 <?php \n    class   Foo   { \n       public   static   $my_static   =   'foo' ; \n\n       public   function   staticValue ()   { \n          return   self :: $my_static ; \n       } \n    } \n\n    print   Foo :: $my_static   .   \" \\n \" ; \n    $foo   =   new   Foo (); \n\n    print   $foo -> staticValue ()   .   \" \\n \" ;  ?>",
            "title": "Static Keyword"
        },
        {
            "location": "/background/oop/#final-keyword",
            "text": "PHP 5 introduces the final keyword, which prevents child classes from overriding a method by prefixing the definition with final. If the class itself is being defined final then it cannot be extended.  Following example results in Fatal error: Cannot override final method BaseClass::moreTesting()   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18 <?php \n\n    class   BaseClass   { \n       public   function   test ()   { \n          echo   \"BaseClass::test() called<br>\" ; \n       } \n\n       final   public   function   moreTesting ()   { \n          echo   \"BaseClass::moreTesting() called<br>\" ; \n       } \n    } \n\n    class   ChildClass   extends   BaseClass   { \n       public   function   moreTesting ()   { \n          echo   \"ChildClass::moreTesting() called<br>\" ; \n       } \n    }  ?>",
            "title": "Final Keyword"
        },
        {
            "location": "/background/oop/#calling-parent-constructors",
            "text": "Instead of writing an entirely new constructor for the subclass, let's write it by calling the parent's constructor explicitly and then doing whatever is necessary in addition for instantiation of the subclass. Here's a simple example   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26 <?php  class   Name   { \n    var   $_firstName ; \n    var   $_lastName ; \n\n    function   Name ( $first_name ,   $last_name )   { \n       $this -> _firstName   =   $first_name ; \n       $this -> _lastName   =   $last_name ; \n    } \n\n    function   toString ()   { \n       return ( $this -> _lastName   . \", \"   . $this -> _firstName ); \n    }  }  class   NameSub1   extends   Name   { \n    var   $_middleInitial ; \n\n    function   NameSub1 ( $first_name ,   $middle_initial ,   $last_name )   { \n       Name :: Name ( $first_name ,   $last_name ); \n       $this -> _middleInitial   =   $middle_initial ; \n    } \n\n    function   toString ()   { \n       return ( Name :: toString ()   .   \" \"   .   $this -> _middleInitial ); \n    }  }    In this example, we have a parent class (Name), which has a two-argument constructor, and a subclass (NameSub1), which has a three-argument constructor. The constructor of NameSub1 functions by calling its parent constructor explicitly using the :: syntax (passing two of its arguments along) and then setting an additional field. Similarly, NameSub1 defines its non constructor toString() function in terms of the parent function that it overrides.  NOTE  \u2212 A constructor can be defined with the same name as the name of a class. It is defined in above example.",
            "title": "Calling parent constructors"
        },
        {
            "location": "/background/design_pattern/creational/1_abstract_fatory/",
            "text": "Purpose\n#\n\n\nTo create series of related or dependent objects without specifying their concrete classes. Usually the created classes all implement the same interface. The client of the abstract factory does not care about how these objects are created, he just knows how they go together.\n\n\nUML Diagram\n#\n\n\n\n\nCode\n#\n\n\nAbstractFactory.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\AbstractFactory\n;\n\n\n\n/**\n\n\n * In this case, the abstract factory is a contract for creating some components\n\n\n * for the web. There are two ways of rendering text: HTML and JSON\n\n\n */\n\n\nabstract\n \nclass\n \nAbstractFactory\n\n\n{\n\n    \nabstract\n \npublic\n \nfunction\n \ncreateText\n(\nstring\n \n$content\n)\n:\n \nText\n;\n\n\n}\n\n\n\n\n\n\n\nJsonFactory.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\AbstractFactory\n;\n\n\n\nclass\n \nJsonFactory\n \nextends\n \nAbstractFactory\n\n\n{\n\n    \npublic\n \nfunction\n \ncreateText\n(\nstring\n \n$content\n)\n:\n \nText\n\n    \n{\n\n        \nreturn\n \nnew\n \nJsonText\n(\n$content\n);\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\nHtmlFactory.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\AbstractFactory\n;\n\n\n\nclass\n \nHtmlFactory\n \nextends\n \nAbstractFactory\n\n\n{\n\n    \npublic\n \nfunction\n \ncreateText\n(\nstring\n \n$content\n)\n:\n \nText\n\n    \n{\n\n        \nreturn\n \nnew\n \nHtmlText\n(\n$content\n);\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\nText.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\AbstractFactory\n;\n\n\n\nabstract\n \nclass\n \nText\n\n\n{\n\n    \n/**\n\n\n     * @var string\n\n\n     */\n\n    \nprivate\n \n$text\n;\n\n\n    \npublic\n \nfunction\n \n__construct\n(\nstring\n \n$text\n)\n\n    \n{\n\n        \n$this\n->\ntext\n \n=\n \n$text\n;\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\nJsonText.php\n#\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\AbstractFactory\n;\n\n\n\nclass\n \nJsonText\n \nextends\n \nText\n\n\n{\n\n    \n// do something here\n\n\n}\n\n\n\n\n\n\n\nHtmlText.php\n#\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\AbstractFactory\n;\n\n\n\nclass\n \nHtmlText\n \nextends\n \nText\n\n\n{\n\n    \n// do something here\n\n\n}\n\n\n\n\n\n\n\nTest\n#\n\n\nTests/AbstractFactoryTest.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\AbstractFactory\\Tests\n;\n\n\n\nuse\n \nDesignPatterns\\Creational\\AbstractFactory\\HtmlFactory\n;\n\n\nuse\n \nDesignPatterns\\Creational\\AbstractFactory\\HtmlText\n;\n\n\nuse\n \nDesignPatterns\\Creational\\AbstractFactory\\JsonFactory\n;\n\n\nuse\n \nDesignPatterns\\Creational\\AbstractFactory\\JsonText\n;\n\n\nuse\n \nPHPUnit\\Framework\\TestCase\n;\n\n\n\nclass\n \nAbstractFactoryTest\n \nextends\n \nTestCase\n\n\n{\n\n    \npublic\n \nfunction\n \ntestCanCreateHtmlText\n()\n\n    \n{\n\n        \n$factory\n \n=\n \nnew\n \nHtmlFactory\n();\n\n        \n$text\n \n=\n \n$factory\n->\ncreateText\n(\n'foobar'\n);\n\n\n        \n$this\n->\nassertInstanceOf\n(\nHtmlText\n::\nclass\n,\n \n$text\n);\n\n    \n}\n\n\n    \npublic\n \nfunction\n \ntestCanCreateJsonText\n()\n\n    \n{\n\n        \n$factory\n \n=\n \nnew\n \nJsonFactory\n();\n\n        \n$text\n \n=\n \n$factory\n->\ncreateText\n(\n'foobar'\n);\n\n\n        \n$this\n->\nassertInstanceOf\n(\nJsonText\n::\nclass\n,\n \n$text\n);\n\n    \n}\n\n\n}",
            "title": "Abstract Factory"
        },
        {
            "location": "/background/design_pattern/creational/1_abstract_fatory/#purpose",
            "text": "To create series of related or dependent objects without specifying their concrete classes. Usually the created classes all implement the same interface. The client of the abstract factory does not care about how these objects are created, he just knows how they go together.",
            "title": "Purpose"
        },
        {
            "location": "/background/design_pattern/creational/1_abstract_fatory/#uml-diagram",
            "text": "",
            "title": "UML Diagram"
        },
        {
            "location": "/background/design_pattern/creational/1_abstract_fatory/#code",
            "text": "",
            "title": "Code"
        },
        {
            "location": "/background/design_pattern/creational/1_abstract_fatory/#abstractfactoryphp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12 <?php  namespace   DesignPatterns\\Creational\\AbstractFactory ;  /**   * In this case, the abstract factory is a contract for creating some components   * for the web. There are two ways of rendering text: HTML and JSON   */  abstract   class   AbstractFactory  { \n     abstract   public   function   createText ( string   $content ) :   Text ;  }",
            "title": "AbstractFactory.php"
        },
        {
            "location": "/background/design_pattern/creational/1_abstract_fatory/#jsonfactoryphp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11 <?php  namespace   DesignPatterns\\Creational\\AbstractFactory ;  class   JsonFactory   extends   AbstractFactory  { \n     public   function   createText ( string   $content ) :   Text \n     { \n         return   new   JsonText ( $content ); \n     }  }",
            "title": "JsonFactory.php"
        },
        {
            "location": "/background/design_pattern/creational/1_abstract_fatory/#htmlfactoryphp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11 <?php  namespace   DesignPatterns\\Creational\\AbstractFactory ;  class   HtmlFactory   extends   AbstractFactory  { \n     public   function   createText ( string   $content ) :   Text \n     { \n         return   new   HtmlText ( $content ); \n     }  }",
            "title": "HtmlFactory.php"
        },
        {
            "location": "/background/design_pattern/creational/1_abstract_fatory/#textphp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16 <?php  namespace   DesignPatterns\\Creational\\AbstractFactory ;  abstract   class   Text  { \n     /**       * @var string       */ \n     private   $text ; \n\n     public   function   __construct ( string   $text ) \n     { \n         $this -> text   =   $text ; \n     }  }",
            "title": "Text.php"
        },
        {
            "location": "/background/design_pattern/creational/1_abstract_fatory/#jsontextphp",
            "text": "1\n2\n3\n4\n5\n6\n7\n8 <?php  namespace   DesignPatterns\\Creational\\AbstractFactory ;  class   JsonText   extends   Text  { \n     // do something here  }",
            "title": "JsonText.php"
        },
        {
            "location": "/background/design_pattern/creational/1_abstract_fatory/#htmltextphp",
            "text": "1\n2\n3\n4\n5\n6\n7\n8 <?php  namespace   DesignPatterns\\Creational\\AbstractFactory ;  class   HtmlText   extends   Text  { \n     // do something here  }",
            "title": "HtmlText.php"
        },
        {
            "location": "/background/design_pattern/creational/1_abstract_fatory/#test",
            "text": "",
            "title": "Test"
        },
        {
            "location": "/background/design_pattern/creational/1_abstract_fatory/#testsabstractfactorytestphp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28 <?php  namespace   DesignPatterns\\Creational\\AbstractFactory\\Tests ;  use   DesignPatterns\\Creational\\AbstractFactory\\HtmlFactory ;  use   DesignPatterns\\Creational\\AbstractFactory\\HtmlText ;  use   DesignPatterns\\Creational\\AbstractFactory\\JsonFactory ;  use   DesignPatterns\\Creational\\AbstractFactory\\JsonText ;  use   PHPUnit\\Framework\\TestCase ;  class   AbstractFactoryTest   extends   TestCase  { \n     public   function   testCanCreateHtmlText () \n     { \n         $factory   =   new   HtmlFactory (); \n         $text   =   $factory -> createText ( 'foobar' ); \n\n         $this -> assertInstanceOf ( HtmlText :: class ,   $text ); \n     } \n\n     public   function   testCanCreateJsonText () \n     { \n         $factory   =   new   JsonFactory (); \n         $text   =   $factory -> createText ( 'foobar' ); \n\n         $this -> assertInstanceOf ( JsonText :: class ,   $text ); \n     }  }",
            "title": "Tests/AbstractFactoryTest.php"
        },
        {
            "location": "/background/design_pattern/creational/2_factory_method/",
            "text": "Purpose\n#\n\n\nThe good point over the SimpleFactory is you can subclass it to implement different ways to create objects\n\n\nFor simple case, this abstract class could be just an interface\n\n\nThis pattern is a \u201creal\u201d Design Pattern because it achieves the \u201cDependency Inversion Principle\u201d a.k.a the \u201cD\u201d in S.O.L.I.D principles.\n\n\nIt means the FactoryMethod class depends on abstractions, not concrete classes. This is the real trick compared to SimpleFactory or StaticFactory.\n\n\nUML Diagram\n#\n\n\n\n\nCode\n#\n\n\nFactoryMethod.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\FactoryMethod\n;\n\n\n\nabstract\n \nclass\n \nFactoryMethod\n\n\n{\n\n    \nconst\n \nCHEAP\n \n=\n \n'cheap'\n;\n\n    \nconst\n \nFAST\n \n=\n \n'fast'\n;\n\n\n    \nabstract\n \nprotected\n \nfunction\n \ncreateVehicle\n(\nstring\n \n$type\n)\n:\n \nVehicleInterface\n;\n\n\n    \npublic\n \nfunction\n \ncreate\n(\nstring\n \n$type\n)\n:\n \nVehicleInterface\n\n    \n{\n\n        \n$obj\n \n=\n \n$this\n->\ncreateVehicle\n(\n$type\n);\n\n        \n$obj\n->\nsetColor\n(\n'black'\n);\n\n\n        \nreturn\n \n$obj\n;\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\nItalianFactory.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\FactoryMethod\n;\n\n\n\nclass\n \nItalianFactory\n \nextends\n \nFactoryMethod\n\n\n{\n\n    \nprotected\n \nfunction\n \ncreateVehicle\n(\nstring\n \n$type\n)\n:\n \nVehicleInterface\n\n    \n{\n\n        \nswitch\n \n(\n$type\n)\n \n{\n\n            \ncase\n \nparent\n::\nCHEAP\n:\n\n                \nreturn\n \nnew\n \nBicycle\n();\n\n            \ncase\n \nparent\n::\nFAST\n:\n\n                \nreturn\n \nnew\n \nCarFerrari\n();\n\n            \ndefault\n:\n\n                \nthrow\n \nnew\n \n\\InvalidArgumentException\n(\n\"\n$type\n is not a valid vehicle\"\n);\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\nGermanFactory.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\FactoryMethod\n;\n\n\n\nclass\n \nGermanFactory\n \nextends\n \nFactoryMethod\n\n\n{\n\n    \nprotected\n \nfunction\n \ncreateVehicle\n(\nstring\n \n$type\n)\n:\n \nVehicleInterface\n\n    \n{\n\n        \nswitch\n \n(\n$type\n)\n \n{\n\n            \ncase\n \nparent\n::\nCHEAP\n:\n\n                \nreturn\n \nnew\n \nBicycle\n();\n\n            \ncase\n \nparent\n::\nFAST\n:\n\n                \n$carMercedes\n \n=\n \nnew\n \nCarMercedes\n();\n\n                \n// we can specialize the way we want some concrete Vehicle since we know the class\n\n                \n$carMercedes\n->\naddAMGTuning\n();\n\n\n                \nreturn\n \n$carMercedes\n;\n\n            \ndefault\n:\n\n                \nthrow\n \nnew\n \n\\InvalidArgumentException\n(\n\"\n$type\n is not a valid vehicle\"\n);\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\nVehicleInterface.php\n#\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\FactoryMethod\n;\n\n\n\ninterface\n \nVehicleInterface\n\n\n{\n\n    \npublic\n \nfunction\n \nsetColor\n(\nstring\n \n$rgb\n);\n\n\n}\n\n\n\n\n\n\n\nCarMercedes.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\FactoryMethod\n;\n\n\n\nclass\n \nCarMercedes\n \nimplements\n \nVehicleInterface\n\n\n{\n\n    \n/**\n\n\n     * @var string\n\n\n     */\n\n    \nprivate\n \n$color\n;\n\n\n    \npublic\n \nfunction\n \nsetColor\n(\nstring\n \n$rgb\n)\n\n    \n{\n\n        \n$this\n->\ncolor\n \n=\n \n$rgb\n;\n\n    \n}\n\n\n    \npublic\n \nfunction\n \naddAMGTuning\n()\n\n    \n{\n\n        \n// do additional tuning here\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\nCarFerrari.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\FactoryMethod\n;\n\n\n\nclass\n \nCarFerrari\n \nimplements\n \nVehicleInterface\n\n\n{\n\n    \n/**\n\n\n     * @var string\n\n\n     */\n\n    \nprivate\n \n$color\n;\n\n\n    \npublic\n \nfunction\n \nsetColor\n(\nstring\n \n$rgb\n)\n\n    \n{\n\n        \n$this\n->\ncolor\n \n=\n \n$rgb\n;\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\nBicycle.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\FactoryMethod\n;\n\n\n\nclass\n \nBicycle\n \nimplements\n \nVehicleInterface\n\n\n{\n\n    \n/**\n\n\n     * @var string\n\n\n     */\n\n    \nprivate\n \n$color\n;\n\n\n    \npublic\n \nfunction\n \nsetColor\n(\nstring\n \n$rgb\n)\n\n    \n{\n\n        \n$this\n->\ncolor\n \n=\n \n$rgb\n;\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\nTest\n#\n\n\nTests/FactoryMethodTest.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\FactoryMethod\\Tests\n;\n\n\n\nuse\n \nDesignPatterns\\Creational\\FactoryMethod\\Bicycle\n;\n\n\nuse\n \nDesignPatterns\\Creational\\FactoryMethod\\CarFerrari\n;\n\n\nuse\n \nDesignPatterns\\Creational\\FactoryMethod\\CarMercedes\n;\n\n\nuse\n \nDesignPatterns\\Creational\\FactoryMethod\\FactoryMethod\n;\n\n\nuse\n \nDesignPatterns\\Creational\\FactoryMethod\\GermanFactory\n;\n\n\nuse\n \nDesignPatterns\\Creational\\FactoryMethod\\ItalianFactory\n;\n\n\nuse\n \nPHPUnit\\Framework\\TestCase\n;\n\n\n\nclass\n \nFactoryMethodTest\n \nextends\n \nTestCase\n\n\n{\n\n    \npublic\n \nfunction\n \ntestCanCreateCheapVehicleInGermany\n()\n\n    \n{\n\n        \n$factory\n \n=\n \nnew\n \nGermanFactory\n();\n\n        \n$result\n \n=\n \n$factory\n->\ncreate\n(\nFactoryMethod\n::\nCHEAP\n);\n\n\n        \n$this\n->\nassertInstanceOf\n(\nBicycle\n::\nclass\n,\n \n$result\n);\n\n    \n}\n\n\n    \npublic\n \nfunction\n \ntestCanCreateFastVehicleInGermany\n()\n\n    \n{\n\n        \n$factory\n \n=\n \nnew\n \nGermanFactory\n();\n\n        \n$result\n \n=\n \n$factory\n->\ncreate\n(\nFactoryMethod\n::\nFAST\n);\n\n\n        \n$this\n->\nassertInstanceOf\n(\nCarMercedes\n::\nclass\n,\n \n$result\n);\n\n    \n}\n\n\n    \npublic\n \nfunction\n \ntestCanCreateCheapVehicleInItaly\n()\n\n    \n{\n\n        \n$factory\n \n=\n \nnew\n \nItalianFactory\n();\n\n        \n$result\n \n=\n \n$factory\n->\ncreate\n(\nFactoryMethod\n::\nCHEAP\n);\n\n\n        \n$this\n->\nassertInstanceOf\n(\nBicycle\n::\nclass\n,\n \n$result\n);\n\n    \n}\n\n\n    \npublic\n \nfunction\n \ntestCanCreateFastVehicleInItaly\n()\n\n    \n{\n\n        \n$factory\n \n=\n \nnew\n \nItalianFactory\n();\n\n        \n$result\n \n=\n \n$factory\n->\ncreate\n(\nFactoryMethod\n::\nFAST\n);\n\n\n        \n$this\n->\nassertInstanceOf\n(\nCarFerrari\n::\nclass\n,\n \n$result\n);\n\n    \n}\n\n\n    \n/**\n\n\n     * @expectedException \\InvalidArgumentException\n\n\n     * @expectedExceptionMessage spaceship is not a valid vehicle\n\n\n     */\n\n    \npublic\n \nfunction\n \ntestUnknownType\n()\n\n    \n{\n\n        \n(\nnew\n \nItalianFactory\n())\n->\ncreate\n(\n'spaceship'\n);\n\n    \n}\n\n\n}",
            "title": "Factory Method"
        },
        {
            "location": "/background/design_pattern/creational/2_factory_method/#purpose",
            "text": "The good point over the SimpleFactory is you can subclass it to implement different ways to create objects  For simple case, this abstract class could be just an interface  This pattern is a \u201creal\u201d Design Pattern because it achieves the \u201cDependency Inversion Principle\u201d a.k.a the \u201cD\u201d in S.O.L.I.D principles.  It means the FactoryMethod class depends on abstractions, not concrete classes. This is the real trick compared to SimpleFactory or StaticFactory.",
            "title": "Purpose"
        },
        {
            "location": "/background/design_pattern/creational/2_factory_method/#uml-diagram",
            "text": "",
            "title": "UML Diagram"
        },
        {
            "location": "/background/design_pattern/creational/2_factory_method/#code",
            "text": "",
            "title": "Code"
        },
        {
            "location": "/background/design_pattern/creational/2_factory_method/#factorymethodphp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19 <?php  namespace   DesignPatterns\\Creational\\FactoryMethod ;  abstract   class   FactoryMethod  { \n     const   CHEAP   =   'cheap' ; \n     const   FAST   =   'fast' ; \n\n     abstract   protected   function   createVehicle ( string   $type ) :   VehicleInterface ; \n\n     public   function   create ( string   $type ) :   VehicleInterface \n     { \n         $obj   =   $this -> createVehicle ( $type ); \n         $obj -> setColor ( 'black' ); \n\n         return   $obj ; \n     }  }",
            "title": "FactoryMethod.php"
        },
        {
            "location": "/background/design_pattern/creational/2_factory_method/#italianfactoryphp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18 <?php  namespace   DesignPatterns\\Creational\\FactoryMethod ;  class   ItalianFactory   extends   FactoryMethod  { \n     protected   function   createVehicle ( string   $type ) :   VehicleInterface \n     { \n         switch   ( $type )   { \n             case   parent :: CHEAP : \n                 return   new   Bicycle (); \n             case   parent :: FAST : \n                 return   new   CarFerrari (); \n             default : \n                 throw   new   \\InvalidArgumentException ( \" $type  is not a valid vehicle\" ); \n         } \n     }  }",
            "title": "ItalianFactory.php"
        },
        {
            "location": "/background/design_pattern/creational/2_factory_method/#germanfactoryphp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22 <?php  namespace   DesignPatterns\\Creational\\FactoryMethod ;  class   GermanFactory   extends   FactoryMethod  { \n     protected   function   createVehicle ( string   $type ) :   VehicleInterface \n     { \n         switch   ( $type )   { \n             case   parent :: CHEAP : \n                 return   new   Bicycle (); \n             case   parent :: FAST : \n                 $carMercedes   =   new   CarMercedes (); \n                 // we can specialize the way we want some concrete Vehicle since we know the class \n                 $carMercedes -> addAMGTuning (); \n\n                 return   $carMercedes ; \n             default : \n                 throw   new   \\InvalidArgumentException ( \" $type  is not a valid vehicle\" ); \n         } \n     }  }",
            "title": "GermanFactory.php"
        },
        {
            "location": "/background/design_pattern/creational/2_factory_method/#vehicleinterfacephp",
            "text": "1\n2\n3\n4\n5\n6\n7\n8 <?php  namespace   DesignPatterns\\Creational\\FactoryMethod ;  interface   VehicleInterface  { \n     public   function   setColor ( string   $rgb );  }",
            "title": "VehicleInterface.php"
        },
        {
            "location": "/background/design_pattern/creational/2_factory_method/#carmercedesphp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21 <?php  namespace   DesignPatterns\\Creational\\FactoryMethod ;  class   CarMercedes   implements   VehicleInterface  { \n     /**       * @var string       */ \n     private   $color ; \n\n     public   function   setColor ( string   $rgb ) \n     { \n         $this -> color   =   $rgb ; \n     } \n\n     public   function   addAMGTuning () \n     { \n         // do additional tuning here \n     }  }",
            "title": "CarMercedes.php"
        },
        {
            "location": "/background/design_pattern/creational/2_factory_method/#carferrariphp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16 <?php  namespace   DesignPatterns\\Creational\\FactoryMethod ;  class   CarFerrari   implements   VehicleInterface  { \n     /**       * @var string       */ \n     private   $color ; \n\n     public   function   setColor ( string   $rgb ) \n     { \n         $this -> color   =   $rgb ; \n     }  }",
            "title": "CarFerrari.php"
        },
        {
            "location": "/background/design_pattern/creational/2_factory_method/#bicyclephp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16 <?php  namespace   DesignPatterns\\Creational\\FactoryMethod ;  class   Bicycle   implements   VehicleInterface  { \n     /**       * @var string       */ \n     private   $color ; \n\n     public   function   setColor ( string   $rgb ) \n     { \n         $this -> color   =   $rgb ; \n     }  }",
            "title": "Bicycle.php"
        },
        {
            "location": "/background/design_pattern/creational/2_factory_method/#test",
            "text": "",
            "title": "Test"
        },
        {
            "location": "/background/design_pattern/creational/2_factory_method/#testsfactorymethodtestphp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55 <?php  namespace   DesignPatterns\\Creational\\FactoryMethod\\Tests ;  use   DesignPatterns\\Creational\\FactoryMethod\\Bicycle ;  use   DesignPatterns\\Creational\\FactoryMethod\\CarFerrari ;  use   DesignPatterns\\Creational\\FactoryMethod\\CarMercedes ;  use   DesignPatterns\\Creational\\FactoryMethod\\FactoryMethod ;  use   DesignPatterns\\Creational\\FactoryMethod\\GermanFactory ;  use   DesignPatterns\\Creational\\FactoryMethod\\ItalianFactory ;  use   PHPUnit\\Framework\\TestCase ;  class   FactoryMethodTest   extends   TestCase  { \n     public   function   testCanCreateCheapVehicleInGermany () \n     { \n         $factory   =   new   GermanFactory (); \n         $result   =   $factory -> create ( FactoryMethod :: CHEAP ); \n\n         $this -> assertInstanceOf ( Bicycle :: class ,   $result ); \n     } \n\n     public   function   testCanCreateFastVehicleInGermany () \n     { \n         $factory   =   new   GermanFactory (); \n         $result   =   $factory -> create ( FactoryMethod :: FAST ); \n\n         $this -> assertInstanceOf ( CarMercedes :: class ,   $result ); \n     } \n\n     public   function   testCanCreateCheapVehicleInItaly () \n     { \n         $factory   =   new   ItalianFactory (); \n         $result   =   $factory -> create ( FactoryMethod :: CHEAP ); \n\n         $this -> assertInstanceOf ( Bicycle :: class ,   $result ); \n     } \n\n     public   function   testCanCreateFastVehicleInItaly () \n     { \n         $factory   =   new   ItalianFactory (); \n         $result   =   $factory -> create ( FactoryMethod :: FAST ); \n\n         $this -> assertInstanceOf ( CarFerrari :: class ,   $result ); \n     } \n\n     /**       * @expectedException \\InvalidArgumentException       * @expectedExceptionMessage spaceship is not a valid vehicle       */ \n     public   function   testUnknownType () \n     { \n         ( new   ItalianFactory ()) -> create ( 'spaceship' ); \n     }  }",
            "title": "Tests/FactoryMethodTest.php"
        },
        {
            "location": "/background/design_pattern/creational/3_singleton/",
            "text": "THIS IS CONSIDERED TO BE AN ANTI-PATTERN! FOR BETTER TESTABILITY AND MAINTAINABILITY USE DEPENDENCY INJECTION!\n\n\nPurpose\n#\n\n\nTo have only one instance of this object in the application that will handle all calls.\n\n\nExamples\n#\n\n\n\n\nDB Connector\n\n\nLogger (may also be a Multiton if there are many log files for several purposes)\n\n\nLock file for the application (there is only one in the filesystem ...)\n\n\n\n\nUML Diagram\n#\n\n\n\n\nCode\n#\n\n\nSingleton.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\Singleton\n;\n\n\n\nfinal\n \nclass\n \nSingleton\n\n\n{\n\n    \n/**\n\n\n     * @var Singleton\n\n\n     */\n\n    \nprivate\n \nstatic\n \n$instance\n;\n\n\n    \n/**\n\n\n     * gets the instance via lazy initialization (created on first usage)\n\n\n     */\n\n    \npublic\n \nstatic\n \nfunction\n \ngetInstance\n()\n:\n \nSingleton\n\n    \n{\n\n        \nif\n \n(\nnull\n \n===\n \nstatic\n::\n$instance\n)\n \n{\n\n            \nstatic\n::\n$instance\n \n=\n \nnew\n \nstatic\n();\n\n        \n}\n\n\n        \nreturn\n \nstatic\n::\n$instance\n;\n\n    \n}\n\n\n    \n/**\n\n\n     * is not allowed to call from outside to prevent from creating multiple instances,\n\n\n     * to use the singleton, you have to obtain the instance from Singleton::getInstance() instead\n\n\n     */\n\n    \nprivate\n \nfunction\n \n__construct\n()\n\n    \n{\n\n    \n}\n\n\n    \n/**\n\n\n     * prevent the instance from being cloned (which would create a second instance of it)\n\n\n     */\n\n    \nprivate\n \nfunction\n \n__clone\n()\n\n    \n{\n\n    \n}\n\n\n    \n/**\n\n\n     * prevent from being unserialized (which would create a second instance of it)\n\n\n     */\n\n    \nprivate\n \nfunction\n \n__wakeup\n()\n\n    \n{\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\nTest\n#\n\n\nTests/SingletonTest.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\Singleton\\Tests\n;\n\n\n\nuse\n \nDesignPatterns\\Creational\\Singleton\\Singleton\n;\n\n\nuse\n \nPHPUnit\\Framework\\TestCase\n;\n\n\n\nclass\n \nSingletonTest\n \nextends\n \nTestCase\n\n\n{\n\n    \npublic\n \nfunction\n \ntestUniqueness\n()\n\n    \n{\n\n        \n$firstCall\n \n=\n \nSingleton\n::\ngetInstance\n();\n\n        \n$secondCall\n \n=\n \nSingleton\n::\ngetInstance\n();\n\n\n        \n$this\n->\nassertInstanceOf\n(\nSingleton\n::\nclass\n,\n \n$firstCall\n);\n\n        \n$this\n->\nassertSame\n(\n$firstCall\n,\n \n$secondCall\n);\n\n    \n}\n\n\n}",
            "title": "Singleton"
        },
        {
            "location": "/background/design_pattern/creational/3_singleton/#purpose",
            "text": "To have only one instance of this object in the application that will handle all calls.",
            "title": "Purpose"
        },
        {
            "location": "/background/design_pattern/creational/3_singleton/#examples",
            "text": "DB Connector  Logger (may also be a Multiton if there are many log files for several purposes)  Lock file for the application (there is only one in the filesystem ...)",
            "title": "Examples"
        },
        {
            "location": "/background/design_pattern/creational/3_singleton/#uml-diagram",
            "text": "",
            "title": "UML Diagram"
        },
        {
            "location": "/background/design_pattern/creational/3_singleton/#code",
            "text": "",
            "title": "Code"
        },
        {
            "location": "/background/design_pattern/creational/3_singleton/#singletonphp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45 <?php  namespace   DesignPatterns\\Creational\\Singleton ;  final   class   Singleton  { \n     /**       * @var Singleton       */ \n     private   static   $instance ; \n\n     /**       * gets the instance via lazy initialization (created on first usage)       */ \n     public   static   function   getInstance () :   Singleton \n     { \n         if   ( null   ===   static :: $instance )   { \n             static :: $instance   =   new   static (); \n         } \n\n         return   static :: $instance ; \n     } \n\n     /**       * is not allowed to call from outside to prevent from creating multiple instances,       * to use the singleton, you have to obtain the instance from Singleton::getInstance() instead       */ \n     private   function   __construct () \n     { \n     } \n\n     /**       * prevent the instance from being cloned (which would create a second instance of it)       */ \n     private   function   __clone () \n     { \n     } \n\n     /**       * prevent from being unserialized (which would create a second instance of it)       */ \n     private   function   __wakeup () \n     { \n     }  }",
            "title": "Singleton.php"
        },
        {
            "location": "/background/design_pattern/creational/3_singleton/#test",
            "text": "",
            "title": "Test"
        },
        {
            "location": "/background/design_pattern/creational/3_singleton/#testssingletontestphp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18 <?php  namespace   DesignPatterns\\Creational\\Singleton\\Tests ;  use   DesignPatterns\\Creational\\Singleton\\Singleton ;  use   PHPUnit\\Framework\\TestCase ;  class   SingletonTest   extends   TestCase  { \n     public   function   testUniqueness () \n     { \n         $firstCall   =   Singleton :: getInstance (); \n         $secondCall   =   Singleton :: getInstance (); \n\n         $this -> assertInstanceOf ( Singleton :: class ,   $firstCall ); \n         $this -> assertSame ( $firstCall ,   $secondCall ); \n     }  }",
            "title": "Tests/SingletonTest.php"
        },
        {
            "location": "/background/design_pattern/creational/4_builder/",
            "text": "Purpose\n#\n\n\nBuilder is an interface that build parts of a complex object.\n\n\nSometimes, if the builder has a better knowledge of what it builds, this interface could be an abstract class with default methods (aka adapter).\n\n\nIf you have a complex inheritance tree for objects, it is logical to have a complex inheritance tree for builders too.\n\n\nNote: Builders have often a fluent interface, see the mock builder of PHPUnit for example.\n\n\nExamples\n#\n\n\n\n\nPHPUnit: Mock Builder\n\n\n\n\nUML Diagram\n#\n\n\n\n\nCode\n#\n\n\nDirector.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\Builder\n;\n\n\n\nuse\n \nDesignPatterns\\Creational\\Builder\\Parts\\Vehicle\n;\n\n\n\n/**\n\n\n * Director is part of the builder pattern. It knows the interface of the builder\n\n\n * and builds a complex object with the help of the builder\n\n\n *\n\n\n * You can also inject many builders instead of one to build more complex objects\n\n\n */\n\n\nclass\n \nDirector\n\n\n{\n\n    \npublic\n \nfunction\n \nbuild\n(\nBuilderInterface\n \n$builder\n)\n:\n \nVehicle\n\n    \n{\n\n        \n$builder\n->\ncreateVehicle\n();\n\n        \n$builder\n->\naddDoors\n();\n\n        \n$builder\n->\naddEngine\n();\n\n        \n$builder\n->\naddWheel\n();\n\n\n        \nreturn\n \n$builder\n->\ngetVehicle\n();\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\nBuilderInterface.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\Builder\n;\n\n\n\nuse\n \nDesignPatterns\\Creational\\Builder\\Parts\\Vehicle\n;\n\n\n\ninterface\n \nBuilderInterface\n\n\n{\n\n    \npublic\n \nfunction\n \ncreateVehicle\n();\n\n\n    \npublic\n \nfunction\n \naddWheel\n();\n\n\n    \npublic\n \nfunction\n \naddEngine\n();\n\n\n    \npublic\n \nfunction\n \naddDoors\n();\n\n\n    \npublic\n \nfunction\n \ngetVehicle\n()\n:\n \nVehicle\n;\n\n\n}\n\n\n\n\n\n\n\nTruckBuilder.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\Builder\n;\n\n\n\nuse\n \nDesignPatterns\\Creational\\Builder\\Parts\\Vehicle\n;\n\n\n\nclass\n \nTruckBuilder\n \nimplements\n \nBuilderInterface\n\n\n{\n\n    \n/**\n\n\n     * @var Parts\\Truck\n\n\n     */\n\n    \nprivate\n \n$truck\n;\n\n\n    \npublic\n \nfunction\n \naddDoors\n()\n\n    \n{\n\n        \n$this\n->\ntruck\n->\nsetPart\n(\n'rightDoor'\n,\n \nnew\n \nParts\\Door\n());\n\n        \n$this\n->\ntruck\n->\nsetPart\n(\n'leftDoor'\n,\n \nnew\n \nParts\\Door\n());\n\n    \n}\n\n\n    \npublic\n \nfunction\n \naddEngine\n()\n\n    \n{\n\n        \n$this\n->\ntruck\n->\nsetPart\n(\n'truckEngine'\n,\n \nnew\n \nParts\\Engine\n());\n\n    \n}\n\n\n    \npublic\n \nfunction\n \naddWheel\n()\n\n    \n{\n\n        \n$this\n->\ntruck\n->\nsetPart\n(\n'wheel1'\n,\n \nnew\n \nParts\\Wheel\n());\n\n        \n$this\n->\ntruck\n->\nsetPart\n(\n'wheel2'\n,\n \nnew\n \nParts\\Wheel\n());\n\n        \n$this\n->\ntruck\n->\nsetPart\n(\n'wheel3'\n,\n \nnew\n \nParts\\Wheel\n());\n\n        \n$this\n->\ntruck\n->\nsetPart\n(\n'wheel4'\n,\n \nnew\n \nParts\\Wheel\n());\n\n        \n$this\n->\ntruck\n->\nsetPart\n(\n'wheel5'\n,\n \nnew\n \nParts\\Wheel\n());\n\n        \n$this\n->\ntruck\n->\nsetPart\n(\n'wheel6'\n,\n \nnew\n \nParts\\Wheel\n());\n\n    \n}\n\n\n    \npublic\n \nfunction\n \ncreateVehicle\n()\n\n    \n{\n\n        \n$this\n->\ntruck\n \n=\n \nnew\n \nParts\\Truck\n();\n\n    \n}\n\n\n    \npublic\n \nfunction\n \ngetVehicle\n()\n:\n \nVehicle\n\n    \n{\n\n        \nreturn\n \n$this\n->\ntruck\n;\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\nCarBuilder.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\Builder\n;\n\n\n\nuse\n \nDesignPatterns\\Creational\\Builder\\Parts\\Vehicle\n;\n\n\n\nclass\n \nCarBuilder\n \nimplements\n \nBuilderInterface\n\n\n{\n\n    \n/**\n\n\n     * @var Parts\\Car\n\n\n     */\n\n    \nprivate\n \n$car\n;\n\n\n    \npublic\n \nfunction\n \naddDoors\n()\n\n    \n{\n\n        \n$this\n->\ncar\n->\nsetPart\n(\n'rightDoor'\n,\n \nnew\n \nParts\\Door\n());\n\n        \n$this\n->\ncar\n->\nsetPart\n(\n'leftDoor'\n,\n \nnew\n \nParts\\Door\n());\n\n        \n$this\n->\ncar\n->\nsetPart\n(\n'trunkLid'\n,\n \nnew\n \nParts\\Door\n());\n\n    \n}\n\n\n    \npublic\n \nfunction\n \naddEngine\n()\n\n    \n{\n\n        \n$this\n->\ncar\n->\nsetPart\n(\n'engine'\n,\n \nnew\n \nParts\\Engine\n());\n\n    \n}\n\n\n    \npublic\n \nfunction\n \naddWheel\n()\n\n    \n{\n\n        \n$this\n->\ncar\n->\nsetPart\n(\n'wheelLF'\n,\n \nnew\n \nParts\\Wheel\n());\n\n        \n$this\n->\ncar\n->\nsetPart\n(\n'wheelRF'\n,\n \nnew\n \nParts\\Wheel\n());\n\n        \n$this\n->\ncar\n->\nsetPart\n(\n'wheelLR'\n,\n \nnew\n \nParts\\Wheel\n());\n\n        \n$this\n->\ncar\n->\nsetPart\n(\n'wheelRR'\n,\n \nnew\n \nParts\\Wheel\n());\n\n    \n}\n\n\n    \npublic\n \nfunction\n \ncreateVehicle\n()\n\n    \n{\n\n        \n$this\n->\ncar\n \n=\n \nnew\n \nParts\\Car\n();\n\n    \n}\n\n\n    \npublic\n \nfunction\n \ngetVehicle\n()\n:\n \nVehicle\n\n    \n{\n\n        \nreturn\n \n$this\n->\ncar\n;\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\nParts/Vehicle.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\Builder\\Parts\n;\n\n\n\nabstract\n \nclass\n \nVehicle\n\n\n{\n\n    \n/**\n\n\n     * @var object[]\n\n\n     */\n\n    \nprivate\n \n$data\n \n=\n \n[];\n\n\n    \n/**\n\n\n     * @param string $key\n\n\n     * @param object $value\n\n\n     */\n\n    \npublic\n \nfunction\n \nsetPart\n(\n$key\n,\n \n$value\n)\n\n    \n{\n\n        \n$this\n->\ndata\n[\n$key\n]\n \n=\n \n$value\n;\n\n    \n}\n\n\n}\n    \n\n\n\n\n\n\nParts/Truck.php\n#\n\n\n1\n2\n3\n4\n5\n6\n7\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\Builder\\Parts\n;\n\n\n\nclass\n \nTruck\n \nextends\n \nVehicle\n\n\n{\n\n\n}\n    \n\n\n\n\n\n\nParts/Car.php\n#\n\n\n1\n2\n3\n4\n5\n6\n7\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\Builder\\Parts\n;\n\n\n\nclass\n \nCar\n \nextends\n \nVehicle\n\n\n{\n\n\n}\n   \n\n\n\n\n\n\nParts/Engine.php\n#\n\n\n1\n2\n3\n4\n5\n6\n7\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\Builder\\Parts\n;\n\n\n\nclass\n \nEngine\n\n\n{\n\n\n}\n   \n\n\n\n\n\n\nParts/Wheel.php\n#\n\n\n1\n2\n3\n4\n5\n6\n7\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\Builder\\Parts\n;\n\n\n\nclass\n \nWheel\n\n\n{\n\n\n}\n \n\n\n\n\n\n\nParts/Door.php\n#\n\n\n1\n2\n3\n4\n5\n6\n7\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\Builder\\Parts\n;\n\n\n\nclass\n \nDoor\n\n\n{\n\n\n}\n \n\n\n\n\n\n\nTest\n#\n\n\nTests/DirectorTest.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\Builder\\Tests\n;\n\n\n\nuse\n \nDesignPatterns\\Creational\\Builder\\Parts\\Car\n;\n\n\nuse\n \nDesignPatterns\\Creational\\Builder\\Parts\\Truck\n;\n\n\nuse\n \nDesignPatterns\\Creational\\Builder\\TruckBuilder\n;\n\n\nuse\n \nDesignPatterns\\Creational\\Builder\\CarBuilder\n;\n\n\nuse\n \nDesignPatterns\\Creational\\Builder\\Director\n;\n\n\nuse\n \nPHPUnit\\Framework\\TestCase\n;\n\n\n\nclass\n \nDirectorTest\n \nextends\n \nTestCase\n\n\n{\n\n    \npublic\n \nfunction\n \ntestCanBuildTruck\n()\n\n    \n{\n\n        \n$truckBuilder\n \n=\n \nnew\n \nTruckBuilder\n();\n\n        \n$newVehicle\n \n=\n \n(\nnew\n \nDirector\n())\n->\nbuild\n(\n$truckBuilder\n);\n\n\n        \n$this\n->\nassertInstanceOf\n(\nTruck\n::\nclass\n,\n \n$newVehicle\n);\n\n    \n}\n\n\n    \npublic\n \nfunction\n \ntestCanBuildCar\n()\n\n    \n{\n\n        \n$carBuilder\n \n=\n \nnew\n \nCarBuilder\n();\n\n        \n$newVehicle\n \n=\n \n(\nnew\n \nDirector\n())\n->\nbuild\n(\n$carBuilder\n);\n\n\n        \n$this\n->\nassertInstanceOf\n(\nCar\n::\nclass\n,\n \n$newVehicle\n);\n\n    \n}\n\n\n}",
            "title": "Builder"
        },
        {
            "location": "/background/design_pattern/creational/4_builder/#purpose",
            "text": "Builder is an interface that build parts of a complex object.  Sometimes, if the builder has a better knowledge of what it builds, this interface could be an abstract class with default methods (aka adapter).  If you have a complex inheritance tree for objects, it is logical to have a complex inheritance tree for builders too.  Note: Builders have often a fluent interface, see the mock builder of PHPUnit for example.",
            "title": "Purpose"
        },
        {
            "location": "/background/design_pattern/creational/4_builder/#examples",
            "text": "PHPUnit: Mock Builder",
            "title": "Examples"
        },
        {
            "location": "/background/design_pattern/creational/4_builder/#uml-diagram",
            "text": "",
            "title": "UML Diagram"
        },
        {
            "location": "/background/design_pattern/creational/4_builder/#code",
            "text": "",
            "title": "Code"
        },
        {
            "location": "/background/design_pattern/creational/4_builder/#directorphp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24 <?php  namespace   DesignPatterns\\Creational\\Builder ;  use   DesignPatterns\\Creational\\Builder\\Parts\\Vehicle ;  /**   * Director is part of the builder pattern. It knows the interface of the builder   * and builds a complex object with the help of the builder   *   * You can also inject many builders instead of one to build more complex objects   */  class   Director  { \n     public   function   build ( BuilderInterface   $builder ) :   Vehicle \n     { \n         $builder -> createVehicle (); \n         $builder -> addDoors (); \n         $builder -> addEngine (); \n         $builder -> addWheel (); \n\n         return   $builder -> getVehicle (); \n     }  }",
            "title": "Director.php"
        },
        {
            "location": "/background/design_pattern/creational/4_builder/#builderinterfacephp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18 <?php  namespace   DesignPatterns\\Creational\\Builder ;  use   DesignPatterns\\Creational\\Builder\\Parts\\Vehicle ;  interface   BuilderInterface  { \n     public   function   createVehicle (); \n\n     public   function   addWheel (); \n\n     public   function   addEngine (); \n\n     public   function   addDoors (); \n\n     public   function   getVehicle () :   Vehicle ;  }",
            "title": "BuilderInterface.php"
        },
        {
            "location": "/background/design_pattern/creational/4_builder/#truckbuilderphp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44 <?php  namespace   DesignPatterns\\Creational\\Builder ;  use   DesignPatterns\\Creational\\Builder\\Parts\\Vehicle ;  class   TruckBuilder   implements   BuilderInterface  { \n     /**       * @var Parts\\Truck       */ \n     private   $truck ; \n\n     public   function   addDoors () \n     { \n         $this -> truck -> setPart ( 'rightDoor' ,   new   Parts\\Door ()); \n         $this -> truck -> setPart ( 'leftDoor' ,   new   Parts\\Door ()); \n     } \n\n     public   function   addEngine () \n     { \n         $this -> truck -> setPart ( 'truckEngine' ,   new   Parts\\Engine ()); \n     } \n\n     public   function   addWheel () \n     { \n         $this -> truck -> setPart ( 'wheel1' ,   new   Parts\\Wheel ()); \n         $this -> truck -> setPart ( 'wheel2' ,   new   Parts\\Wheel ()); \n         $this -> truck -> setPart ( 'wheel3' ,   new   Parts\\Wheel ()); \n         $this -> truck -> setPart ( 'wheel4' ,   new   Parts\\Wheel ()); \n         $this -> truck -> setPart ( 'wheel5' ,   new   Parts\\Wheel ()); \n         $this -> truck -> setPart ( 'wheel6' ,   new   Parts\\Wheel ()); \n     } \n\n     public   function   createVehicle () \n     { \n         $this -> truck   =   new   Parts\\Truck (); \n     } \n\n     public   function   getVehicle () :   Vehicle \n     { \n         return   $this -> truck ; \n     }  }",
            "title": "TruckBuilder.php"
        },
        {
            "location": "/background/design_pattern/creational/4_builder/#carbuilderphp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43 <?php  namespace   DesignPatterns\\Creational\\Builder ;  use   DesignPatterns\\Creational\\Builder\\Parts\\Vehicle ;  class   CarBuilder   implements   BuilderInterface  { \n     /**       * @var Parts\\Car       */ \n     private   $car ; \n\n     public   function   addDoors () \n     { \n         $this -> car -> setPart ( 'rightDoor' ,   new   Parts\\Door ()); \n         $this -> car -> setPart ( 'leftDoor' ,   new   Parts\\Door ()); \n         $this -> car -> setPart ( 'trunkLid' ,   new   Parts\\Door ()); \n     } \n\n     public   function   addEngine () \n     { \n         $this -> car -> setPart ( 'engine' ,   new   Parts\\Engine ()); \n     } \n\n     public   function   addWheel () \n     { \n         $this -> car -> setPart ( 'wheelLF' ,   new   Parts\\Wheel ()); \n         $this -> car -> setPart ( 'wheelRF' ,   new   Parts\\Wheel ()); \n         $this -> car -> setPart ( 'wheelLR' ,   new   Parts\\Wheel ()); \n         $this -> car -> setPart ( 'wheelRR' ,   new   Parts\\Wheel ()); \n     } \n\n     public   function   createVehicle () \n     { \n         $this -> car   =   new   Parts\\Car (); \n     } \n\n     public   function   getVehicle () :   Vehicle \n     { \n         return   $this -> car ; \n     }  }",
            "title": "CarBuilder.php"
        },
        {
            "location": "/background/design_pattern/creational/4_builder/#partsvehiclephp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20 <?php  namespace   DesignPatterns\\Creational\\Builder\\Parts ;  abstract   class   Vehicle  { \n     /**       * @var object[]       */ \n     private   $data   =   []; \n\n     /**       * @param string $key       * @param object $value       */ \n     public   function   setPart ( $key ,   $value ) \n     { \n         $this -> data [ $key ]   =   $value ; \n     }  }",
            "title": "Parts/Vehicle.php"
        },
        {
            "location": "/background/design_pattern/creational/4_builder/#partstruckphp",
            "text": "1\n2\n3\n4\n5\n6\n7 <?php  namespace   DesignPatterns\\Creational\\Builder\\Parts ;  class   Truck   extends   Vehicle  {  }",
            "title": "Parts/Truck.php"
        },
        {
            "location": "/background/design_pattern/creational/4_builder/#partscarphp",
            "text": "1\n2\n3\n4\n5\n6\n7 <?php  namespace   DesignPatterns\\Creational\\Builder\\Parts ;  class   Car   extends   Vehicle  {  }",
            "title": "Parts/Car.php"
        },
        {
            "location": "/background/design_pattern/creational/4_builder/#partsenginephp",
            "text": "1\n2\n3\n4\n5\n6\n7 <?php  namespace   DesignPatterns\\Creational\\Builder\\Parts ;  class   Engine  {  }",
            "title": "Parts/Engine.php"
        },
        {
            "location": "/background/design_pattern/creational/4_builder/#partswheelphp",
            "text": "1\n2\n3\n4\n5\n6\n7 <?php  namespace   DesignPatterns\\Creational\\Builder\\Parts ;  class   Wheel  {  }",
            "title": "Parts/Wheel.php"
        },
        {
            "location": "/background/design_pattern/creational/4_builder/#partsdoorphp",
            "text": "1\n2\n3\n4\n5\n6\n7 <?php  namespace   DesignPatterns\\Creational\\Builder\\Parts ;  class   Door  {  }",
            "title": "Parts/Door.php"
        },
        {
            "location": "/background/design_pattern/creational/4_builder/#test",
            "text": "",
            "title": "Test"
        },
        {
            "location": "/background/design_pattern/creational/4_builder/#testsdirectortestphp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29 <?php  namespace   DesignPatterns\\Creational\\Builder\\Tests ;  use   DesignPatterns\\Creational\\Builder\\Parts\\Car ;  use   DesignPatterns\\Creational\\Builder\\Parts\\Truck ;  use   DesignPatterns\\Creational\\Builder\\TruckBuilder ;  use   DesignPatterns\\Creational\\Builder\\CarBuilder ;  use   DesignPatterns\\Creational\\Builder\\Director ;  use   PHPUnit\\Framework\\TestCase ;  class   DirectorTest   extends   TestCase  { \n     public   function   testCanBuildTruck () \n     { \n         $truckBuilder   =   new   TruckBuilder (); \n         $newVehicle   =   ( new   Director ()) -> build ( $truckBuilder ); \n\n         $this -> assertInstanceOf ( Truck :: class ,   $newVehicle ); \n     } \n\n     public   function   testCanBuildCar () \n     { \n         $carBuilder   =   new   CarBuilder (); \n         $newVehicle   =   ( new   Director ()) -> build ( $carBuilder ); \n\n         $this -> assertInstanceOf ( Car :: class ,   $newVehicle ); \n     }  }",
            "title": "Tests/DirectorTest.php"
        },
        {
            "location": "/background/design_pattern/creational/5_multion/",
            "text": "THIS IS CONSIDERED TO BE AN ANTI-PATTERN! FOR BETTER TESTABILITY AND MAINTAINABILITY USE DEPENDENCY INJECTION!\n\n\nPurpose\n#\n\n\nTo have only a list of named instances that are used, like a singleton but with n instances.\n\n\nExamples\n#\n\n\n\n\n2 DB Connectors, e.g. one for MySQL, the other for SQLite\n\n\nmultiple Loggers (one for debug messages, one for errors)\n\n\n\n\nUML Diagram\n#\n\n\n\n\nCode\n#\n\n\nMultiton.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\Multiton\n;\n\n\n\nfinal\n \nclass\n \nMultiton\n\n\n{\n\n    \nconst\n \nINSTANCE_1\n \n=\n \n'1'\n;\n\n    \nconst\n \nINSTANCE_2\n \n=\n \n'2'\n;\n\n\n    \n/**\n\n\n     * @var Multiton[]\n\n\n     */\n\n    \nprivate\n \nstatic\n \n$instances\n \n=\n \n[];\n\n\n    \n/**\n\n\n     * this is private to prevent from creating arbitrary instances\n\n\n     */\n\n    \nprivate\n \nfunction\n \n__construct\n()\n\n    \n{\n\n    \n}\n\n\n    \npublic\n \nstatic\n \nfunction\n \ngetInstance\n(\nstring\n \n$instanceName\n)\n:\n \nMultiton\n\n    \n{\n\n        \nif\n \n(\n!\nisset\n(\nself\n::\n$instances\n[\n$instanceName\n]))\n \n{\n\n            \nself\n::\n$instances\n[\n$instanceName\n]\n \n=\n \nnew\n \nself\n();\n\n        \n}\n\n\n        \nreturn\n \nself\n::\n$instances\n[\n$instanceName\n];\n\n    \n}\n\n\n    \n/**\n\n\n     * prevent instance from being cloned\n\n\n     */\n\n    \nprivate\n \nfunction\n \n__clone\n()\n\n    \n{\n\n    \n}\n\n\n    \n/**\n\n\n     * prevent instance from being unserialized\n\n\n     */\n\n    \nprivate\n \nfunction\n \n__wakeup\n()\n\n    \n{\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\nTest\n#",
            "title": "Multiton"
        },
        {
            "location": "/background/design_pattern/creational/5_multion/#purpose",
            "text": "To have only a list of named instances that are used, like a singleton but with n instances.",
            "title": "Purpose"
        },
        {
            "location": "/background/design_pattern/creational/5_multion/#examples",
            "text": "2 DB Connectors, e.g. one for MySQL, the other for SQLite  multiple Loggers (one for debug messages, one for errors)",
            "title": "Examples"
        },
        {
            "location": "/background/design_pattern/creational/5_multion/#uml-diagram",
            "text": "",
            "title": "UML Diagram"
        },
        {
            "location": "/background/design_pattern/creational/5_multion/#code",
            "text": "",
            "title": "Code"
        },
        {
            "location": "/background/design_pattern/creational/5_multion/#multitonphp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44 <?php  namespace   DesignPatterns\\Creational\\Multiton ;  final   class   Multiton  { \n     const   INSTANCE_1   =   '1' ; \n     const   INSTANCE_2   =   '2' ; \n\n     /**       * @var Multiton[]       */ \n     private   static   $instances   =   []; \n\n     /**       * this is private to prevent from creating arbitrary instances       */ \n     private   function   __construct () \n     { \n     } \n\n     public   static   function   getInstance ( string   $instanceName ) :   Multiton \n     { \n         if   ( ! isset ( self :: $instances [ $instanceName ]))   { \n             self :: $instances [ $instanceName ]   =   new   self (); \n         } \n\n         return   self :: $instances [ $instanceName ]; \n     } \n\n     /**       * prevent instance from being cloned       */ \n     private   function   __clone () \n     { \n     } \n\n     /**       * prevent instance from being unserialized       */ \n     private   function   __wakeup () \n     { \n     }  }",
            "title": "Multiton.php"
        },
        {
            "location": "/background/design_pattern/creational/5_multion/#test",
            "text": "",
            "title": "Test"
        },
        {
            "location": "/background/design_pattern/creational/6_pool/",
            "text": "Purpose\n#\n\n\nThe object pool pattern is a software creational design pattern that uses a set of initialized objects kept ready to use \u2013 a \u201cpool\u201d \u2013 rather than allocating and destroying them on demand. A client of the pool will request an object from the pool and perform operations on the returned object. When the client has finished, it returns the object, which is a specific type of factory object, to the pool rather than destroying it.\n\n\nObject pooling can offer a significant performance boost in situations where the cost of initializing a class instance is high, the rate of instantiation of a class is high, and the number of instances in use at any one time is low. The pooled object is obtained in predictable time when creation of the new objects (especially over network) may take variable time.\n\n\nHowever these benefits are mostly true for objects that are expensive with respect to time, such as database connections, socket connections, threads and large graphic objects like fonts or bitmaps. In certain situations, simple object pooling (that hold no external resources, but only occupy memory) may not be efficient and could decrease performance.\n\n\nUML Diagram\n#\n\n\n\n\nCode\n#\n\n\nWorkerPool.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\Pool\n;\n\n\n\nclass\n \nWorkerPool\n \nimplements\n \n\\Countable\n\n\n{\n\n    \n/**\n\n\n     * @var StringReverseWorker[]\n\n\n     */\n\n    \nprivate\n \n$occupiedWorkers\n \n=\n \n[];\n\n\n    \n/**\n\n\n     * @var StringReverseWorker[]\n\n\n     */\n\n    \nprivate\n \n$freeWorkers\n \n=\n \n[];\n\n\n    \npublic\n \nfunction\n \nget\n()\n:\n \nStringReverseWorker\n\n    \n{\n\n        \nif\n \n(\ncount\n(\n$this\n->\nfreeWorkers\n)\n \n==\n \n0\n)\n \n{\n\n            \n$worker\n \n=\n \nnew\n \nStringReverseWorker\n();\n\n        \n}\n \nelse\n \n{\n\n            \n$worker\n \n=\n \narray_pop\n(\n$this\n->\nfreeWorkers\n);\n\n        \n}\n\n\n        \n$this\n->\noccupiedWorkers\n[\nspl_object_hash\n(\n$worker\n)]\n \n=\n \n$worker\n;\n\n\n        \nreturn\n \n$worker\n;\n\n    \n}\n\n\n    \npublic\n \nfunction\n \ndispose\n(\nStringReverseWorker\n \n$worker\n)\n\n    \n{\n\n        \n$key\n \n=\n \nspl_object_hash\n(\n$worker\n);\n\n\n        \nif\n \n(\nisset\n(\n$this\n->\noccupiedWorkers\n[\n$key\n]))\n \n{\n\n            \nunset\n(\n$this\n->\noccupiedWorkers\n[\n$key\n]);\n\n            \n$this\n->\nfreeWorkers\n[\n$key\n]\n \n=\n \n$worker\n;\n\n        \n}\n\n    \n}\n\n\n    \npublic\n \nfunction\n \ncount\n()\n:\n \nint\n\n    \n{\n\n        \nreturn\n \ncount\n(\n$this\n->\noccupiedWorkers\n)\n \n+\n \ncount\n(\n$this\n->\nfreeWorkers\n);\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\nStringReverseWorker.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\Pool\n;\n\n\n\nclass\n \nStringReverseWorker\n\n\n{\n\n    \n/**\n\n\n     * @var \\DateTime\n\n\n     */\n\n    \nprivate\n \n$createdAt\n;\n\n\n    \npublic\n \nfunction\n \n__construct\n()\n\n    \n{\n\n        \n$this\n->\ncreatedAt\n \n=\n \nnew\n \n\\DateTime\n();\n\n    \n}\n\n\n    \npublic\n \nfunction\n \nrun\n(\nstring\n \n$text\n)\n\n    \n{\n\n        \nreturn\n \nstrrev\n(\n$text\n);\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\nTest\n#\n\n\nTests/PoolTest.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\Pool\\Tests\n;\n\n\n\nuse\n \nDesignPatterns\\Creational\\Pool\\WorkerPool\n;\n\n\nuse\n \nPHPUnit\\Framework\\TestCase\n;\n\n\n\nclass\n \nPoolTest\n \nextends\n \nTestCase\n\n\n{\n\n    \npublic\n \nfunction\n \ntestCanGetNewInstancesWithGet\n()\n\n    \n{\n\n        \n$pool\n \n=\n \nnew\n \nWorkerPool\n();\n\n        \n$worker1\n \n=\n \n$pool\n->\nget\n();\n\n        \n$worker2\n \n=\n \n$pool\n->\nget\n();\n\n\n        \n$this\n->\nassertCount\n(\n2\n,\n \n$pool\n);\n\n        \n$this\n->\nassertNotSame\n(\n$worker1\n,\n \n$worker2\n);\n\n    \n}\n\n\n    \npublic\n \nfunction\n \ntestCanGetSameInstanceTwiceWhenDisposingItFirst\n()\n\n    \n{\n\n        \n$pool\n \n=\n \nnew\n \nWorkerPool\n();\n\n        \n$worker1\n \n=\n \n$pool\n->\nget\n();\n\n        \n$pool\n->\ndispose\n(\n$worker1\n);\n\n        \n$worker2\n \n=\n \n$pool\n->\nget\n();\n\n\n        \n$this\n->\nassertCount\n(\n1\n,\n \n$pool\n);\n\n        \n$this\n->\nassertSame\n(\n$worker1\n,\n \n$worker2\n);\n\n    \n}\n\n\n}",
            "title": "Pool"
        },
        {
            "location": "/background/design_pattern/creational/6_pool/#purpose",
            "text": "The object pool pattern is a software creational design pattern that uses a set of initialized objects kept ready to use \u2013 a \u201cpool\u201d \u2013 rather than allocating and destroying them on demand. A client of the pool will request an object from the pool and perform operations on the returned object. When the client has finished, it returns the object, which is a specific type of factory object, to the pool rather than destroying it.  Object pooling can offer a significant performance boost in situations where the cost of initializing a class instance is high, the rate of instantiation of a class is high, and the number of instances in use at any one time is low. The pooled object is obtained in predictable time when creation of the new objects (especially over network) may take variable time.  However these benefits are mostly true for objects that are expensive with respect to time, such as database connections, socket connections, threads and large graphic objects like fonts or bitmaps. In certain situations, simple object pooling (that hold no external resources, but only occupy memory) may not be efficient and could decrease performance.",
            "title": "Purpose"
        },
        {
            "location": "/background/design_pattern/creational/6_pool/#uml-diagram",
            "text": "",
            "title": "UML Diagram"
        },
        {
            "location": "/background/design_pattern/creational/6_pool/#code",
            "text": "",
            "title": "Code"
        },
        {
            "location": "/background/design_pattern/creational/6_pool/#workerpoolphp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44 <?php  namespace   DesignPatterns\\Creational\\Pool ;  class   WorkerPool   implements   \\Countable  { \n     /**       * @var StringReverseWorker[]       */ \n     private   $occupiedWorkers   =   []; \n\n     /**       * @var StringReverseWorker[]       */ \n     private   $freeWorkers   =   []; \n\n     public   function   get () :   StringReverseWorker \n     { \n         if   ( count ( $this -> freeWorkers )   ==   0 )   { \n             $worker   =   new   StringReverseWorker (); \n         }   else   { \n             $worker   =   array_pop ( $this -> freeWorkers ); \n         } \n\n         $this -> occupiedWorkers [ spl_object_hash ( $worker )]   =   $worker ; \n\n         return   $worker ; \n     } \n\n     public   function   dispose ( StringReverseWorker   $worker ) \n     { \n         $key   =   spl_object_hash ( $worker ); \n\n         if   ( isset ( $this -> occupiedWorkers [ $key ]))   { \n             unset ( $this -> occupiedWorkers [ $key ]); \n             $this -> freeWorkers [ $key ]   =   $worker ; \n         } \n     } \n\n     public   function   count () :   int \n     { \n         return   count ( $this -> occupiedWorkers )   +   count ( $this -> freeWorkers ); \n     }  }",
            "title": "WorkerPool.php"
        },
        {
            "location": "/background/design_pattern/creational/6_pool/#stringreverseworkerphp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21 <?php  namespace   DesignPatterns\\Creational\\Pool ;  class   StringReverseWorker  { \n     /**       * @var \\DateTime       */ \n     private   $createdAt ; \n\n     public   function   __construct () \n     { \n         $this -> createdAt   =   new   \\DateTime (); \n     } \n\n     public   function   run ( string   $text ) \n     { \n         return   strrev ( $text ); \n     }  }",
            "title": "StringReverseWorker.php"
        },
        {
            "location": "/background/design_pattern/creational/6_pool/#test",
            "text": "",
            "title": "Test"
        },
        {
            "location": "/background/design_pattern/creational/6_pool/#testspooltestphp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30 <?php  namespace   DesignPatterns\\Creational\\Pool\\Tests ;  use   DesignPatterns\\Creational\\Pool\\WorkerPool ;  use   PHPUnit\\Framework\\TestCase ;  class   PoolTest   extends   TestCase  { \n     public   function   testCanGetNewInstancesWithGet () \n     { \n         $pool   =   new   WorkerPool (); \n         $worker1   =   $pool -> get (); \n         $worker2   =   $pool -> get (); \n\n         $this -> assertCount ( 2 ,   $pool ); \n         $this -> assertNotSame ( $worker1 ,   $worker2 ); \n     } \n\n     public   function   testCanGetSameInstanceTwiceWhenDisposingItFirst () \n     { \n         $pool   =   new   WorkerPool (); \n         $worker1   =   $pool -> get (); \n         $pool -> dispose ( $worker1 ); \n         $worker2   =   $pool -> get (); \n\n         $this -> assertCount ( 1 ,   $pool ); \n         $this -> assertSame ( $worker1 ,   $worker2 ); \n     }  }",
            "title": "Tests/PoolTest.php"
        },
        {
            "location": "/background/design_pattern/creational/7_prototype/",
            "text": "Purpose\n#\n\n\nTo avoid the cost of creating objects the standard way (new Foo()) and instead create a prototype and clone it.\n\n\nExamples\n#\n\n\n\n\nLarge amounts of data (e.g. create 1,000,000 rows in a database at once via a ORM).\n\n\n\n\nUML Diagram\n#\n\n\n\n\nCode\n#\n\n\nBookPrototype.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\Prototype\n;\n\n\n\nabstract\n \nclass\n \nBookPrototype\n\n\n{\n\n    \n/**\n\n\n     * @var string\n\n\n     */\n\n    \nprotected\n \n$title\n;\n\n\n    \n/**\n\n\n     * @var string\n\n\n     */\n\n    \nprotected\n \n$category\n;\n\n\n    \nabstract\n \npublic\n \nfunction\n \n__clone\n();\n\n\n    \npublic\n \nfunction\n \ngetTitle\n()\n:\n \nstring\n\n    \n{\n\n        \nreturn\n \n$this\n->\ntitle\n;\n\n    \n}\n\n\n    \npublic\n \nfunction\n \nsetTitle\n(\n$title\n)\n\n    \n{\n\n        \n$this\n->\ntitle\n \n=\n \n$title\n;\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\nBarBookPrototype.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\Prototype\n;\n\n\n\nclass\n \nBarBookPrototype\n \nextends\n \nBookPrototype\n\n\n{\n\n    \n/**\n\n\n     * @var string\n\n\n     */\n\n    \nprotected\n \n$category\n \n=\n \n'Bar'\n;\n\n\n    \npublic\n \nfunction\n \n__clone\n()\n\n    \n{\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\nFooBookPrototype.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\Prototype\n;\n\n\n\nclass\n \nFooBookPrototype\n \nextends\n \nBookPrototype\n\n\n{\n\n    \n/**\n\n\n     * @var string\n\n\n     */\n\n    \nprotected\n \n$category\n \n=\n \n'Foo'\n;\n\n\n    \npublic\n \nfunction\n \n__clone\n()\n\n    \n{\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\nTest\n#\n\n\nTests/PrototypeTest.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\Prototype\\Tests\n;\n\n\n\nuse\n \nDesignPatterns\\Creational\\Prototype\\BarBookPrototype\n;\n\n\nuse\n \nDesignPatterns\\Creational\\Prototype\\FooBookPrototype\n;\n\n\nuse\n \nPHPUnit\\Framework\\TestCase\n;\n\n\n\nclass\n \nPrototypeTest\n \nextends\n \nTestCase\n\n\n{\n\n    \npublic\n \nfunction\n \ntestCanGetFooBook\n()\n\n    \n{\n\n        \n$fooPrototype\n \n=\n \nnew\n \nFooBookPrototype\n();\n\n        \n$barPrototype\n \n=\n \nnew\n \nBarBookPrototype\n();\n\n\n        \nfor\n \n(\n$i\n \n=\n \n0\n;\n \n$i\n \n<\n \n10\n;\n \n$i\n++\n)\n \n{\n\n            \n$book\n \n=\n \nclone\n \n$fooPrototype\n;\n\n            \n$book\n->\nsetTitle\n(\n'Foo Book No '\n \n.\n \n$i\n);\n\n            \n$this\n->\nassertInstanceOf\n(\nFooBookPrototype\n::\nclass\n,\n \n$book\n);\n\n        \n}\n\n\n        \nfor\n \n(\n$i\n \n=\n \n0\n;\n \n$i\n \n<\n \n5\n;\n \n$i\n++\n)\n \n{\n\n            \n$book\n \n=\n \nclone\n \n$barPrototype\n;\n\n            \n$book\n->\nsetTitle\n(\n'Bar Book No '\n \n.\n \n$i\n);\n\n            \n$this\n->\nassertInstanceOf\n(\nBarBookPrototype\n::\nclass\n,\n \n$book\n);\n\n        \n}\n\n    \n}\n\n\n}",
            "title": "Prototype"
        },
        {
            "location": "/background/design_pattern/creational/7_prototype/#purpose",
            "text": "To avoid the cost of creating objects the standard way (new Foo()) and instead create a prototype and clone it.",
            "title": "Purpose"
        },
        {
            "location": "/background/design_pattern/creational/7_prototype/#examples",
            "text": "Large amounts of data (e.g. create 1,000,000 rows in a database at once via a ORM).",
            "title": "Examples"
        },
        {
            "location": "/background/design_pattern/creational/7_prototype/#uml-diagram",
            "text": "",
            "title": "UML Diagram"
        },
        {
            "location": "/background/design_pattern/creational/7_prototype/#code",
            "text": "",
            "title": "Code"
        },
        {
            "location": "/background/design_pattern/creational/7_prototype/#bookprototypephp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28 <?php  namespace   DesignPatterns\\Creational\\Prototype ;  abstract   class   BookPrototype  { \n     /**       * @var string       */ \n     protected   $title ; \n\n     /**       * @var string       */ \n     protected   $category ; \n\n     abstract   public   function   __clone (); \n\n     public   function   getTitle () :   string \n     { \n         return   $this -> title ; \n     } \n\n     public   function   setTitle ( $title ) \n     { \n         $this -> title   =   $title ; \n     }  }",
            "title": "BookPrototype.php"
        },
        {
            "location": "/background/design_pattern/creational/7_prototype/#barbookprototypephp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15 <?php  namespace   DesignPatterns\\Creational\\Prototype ;  class   BarBookPrototype   extends   BookPrototype  { \n     /**       * @var string       */ \n     protected   $category   =   'Bar' ; \n\n     public   function   __clone () \n     { \n     }  }",
            "title": "BarBookPrototype.php"
        },
        {
            "location": "/background/design_pattern/creational/7_prototype/#foobookprototypephp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15 <?php  namespace   DesignPatterns\\Creational\\Prototype ;  class   FooBookPrototype   extends   BookPrototype  { \n     /**       * @var string       */ \n     protected   $category   =   'Foo' ; \n\n     public   function   __clone () \n     { \n     }  }",
            "title": "FooBookPrototype.php"
        },
        {
            "location": "/background/design_pattern/creational/7_prototype/#test",
            "text": "",
            "title": "Test"
        },
        {
            "location": "/background/design_pattern/creational/7_prototype/#testsprototypetestphp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28 <?php  namespace   DesignPatterns\\Creational\\Prototype\\Tests ;  use   DesignPatterns\\Creational\\Prototype\\BarBookPrototype ;  use   DesignPatterns\\Creational\\Prototype\\FooBookPrototype ;  use   PHPUnit\\Framework\\TestCase ;  class   PrototypeTest   extends   TestCase  { \n     public   function   testCanGetFooBook () \n     { \n         $fooPrototype   =   new   FooBookPrototype (); \n         $barPrototype   =   new   BarBookPrototype (); \n\n         for   ( $i   =   0 ;   $i   <   10 ;   $i ++ )   { \n             $book   =   clone   $fooPrototype ; \n             $book -> setTitle ( 'Foo Book No '   .   $i ); \n             $this -> assertInstanceOf ( FooBookPrototype :: class ,   $book ); \n         } \n\n         for   ( $i   =   0 ;   $i   <   5 ;   $i ++ )   { \n             $book   =   clone   $barPrototype ; \n             $book -> setTitle ( 'Bar Book No '   .   $i ); \n             $this -> assertInstanceOf ( BarBookPrototype :: class ,   $book ); \n         } \n     }  }",
            "title": "Tests/PrototypeTest.php"
        },
        {
            "location": "/background/design_pattern/creational/8_simple_factory/",
            "text": "Purpose\n#\n\n\nSimpleFactory is a simple factory pattern.\n\n\nIt differs from the static factory because it is not static. Therefore, you can have multiple factories, differently parametrized, you can subclass it and you can mock it. It always should be preferred over a static factory!\n\n\nUML Diagram\n#\n\n\n\n\nCode\n#\n\n\nSimpleFactory.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\SimpleFactory\n;\n\n\n\nclass\n \nSimpleFactory\n\n\n{\n\n    \npublic\n \nfunction\n \ncreateBicycle\n()\n:\n \nBicycle\n\n    \n{\n\n        \nreturn\n \nnew\n \nBicycle\n();\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\nBicycle.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\SimpleFactory\n;\n\n\n\nclass\n \nBicycle\n\n\n{\n\n    \npublic\n \nfunction\n \ndriveTo\n(\nstring\n \n$destination\n)\n\n    \n{\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\nUsage\n#\n\n\n1\n2\n3\n $factory = new SimpleFactory();\n\n\n $bicycle = $factory->createBicycle();\n\n\n $bicycle->driveTo('Paris');\n\n\n\n\n\n\n\nTest\n#\n\n\nTests/SimpleFactoryTest.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\SimpleFactory\\Tests\n;\n\n\n\nuse\n \nDesignPatterns\\Creational\\SimpleFactory\\Bicycle\n;\n\n\nuse\n \nDesignPatterns\\Creational\\SimpleFactory\\SimpleFactory\n;\n\n\nuse\n \nPHPUnit\\Framework\\TestCase\n;\n\n\n\nclass\n \nSimpleFactoryTest\n \nextends\n \nTestCase\n\n\n{\n\n    \npublic\n \nfunction\n \ntestCanCreateBicycle\n()\n\n    \n{\n\n        \n$bicycle\n \n=\n \n(\nnew\n \nSimpleFactory\n())\n->\ncreateBicycle\n();\n\n        \n$this\n->\nassertInstanceOf\n(\nBicycle\n::\nclass\n,\n \n$bicycle\n);\n\n    \n}\n\n\n}",
            "title": "Simple Factory"
        },
        {
            "location": "/background/design_pattern/creational/8_simple_factory/#purpose",
            "text": "SimpleFactory is a simple factory pattern.  It differs from the static factory because it is not static. Therefore, you can have multiple factories, differently parametrized, you can subclass it and you can mock it. It always should be preferred over a static factory!",
            "title": "Purpose"
        },
        {
            "location": "/background/design_pattern/creational/8_simple_factory/#uml-diagram",
            "text": "",
            "title": "UML Diagram"
        },
        {
            "location": "/background/design_pattern/creational/8_simple_factory/#code",
            "text": "",
            "title": "Code"
        },
        {
            "location": "/background/design_pattern/creational/8_simple_factory/#simplefactoryphp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11 <?php  namespace   DesignPatterns\\Creational\\SimpleFactory ;  class   SimpleFactory  { \n     public   function   createBicycle () :   Bicycle \n     { \n         return   new   Bicycle (); \n     }  }",
            "title": "SimpleFactory.php"
        },
        {
            "location": "/background/design_pattern/creational/8_simple_factory/#bicyclephp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10 <?php  namespace   DesignPatterns\\Creational\\SimpleFactory ;  class   Bicycle  { \n     public   function   driveTo ( string   $destination ) \n     { \n     }  }",
            "title": "Bicycle.php"
        },
        {
            "location": "/background/design_pattern/creational/8_simple_factory/#usage",
            "text": "1\n2\n3  $factory = new SimpleFactory();   $bicycle = $factory->createBicycle();   $bicycle->driveTo('Paris');",
            "title": "Usage"
        },
        {
            "location": "/background/design_pattern/creational/8_simple_factory/#test",
            "text": "",
            "title": "Test"
        },
        {
            "location": "/background/design_pattern/creational/8_simple_factory/#testssimplefactorytestphp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16 <?php  namespace   DesignPatterns\\Creational\\SimpleFactory\\Tests ;  use   DesignPatterns\\Creational\\SimpleFactory\\Bicycle ;  use   DesignPatterns\\Creational\\SimpleFactory\\SimpleFactory ;  use   PHPUnit\\Framework\\TestCase ;  class   SimpleFactoryTest   extends   TestCase  { \n     public   function   testCanCreateBicycle () \n     { \n         $bicycle   =   ( new   SimpleFactory ()) -> createBicycle (); \n         $this -> assertInstanceOf ( Bicycle :: class ,   $bicycle ); \n     }  }",
            "title": "Tests/SimpleFactoryTest.php"
        },
        {
            "location": "/background/design_pattern/creational/9_static_factory/",
            "text": "Purpose\n#\n\n\nSimilar to the AbstractFactory, this pattern is used to create series of related or dependent objects. \n\n\nThe difference between this and the abstract factory pattern is that the static factory pattern uses just one static method to create all types of objects it can create. It is usually named \nfactory\n or \nbuild\n.\n\n\nExamples\n#\n\n\n\n\nZend Framework: Zend_Cache_Backend or _Frontend use a factory method create cache backends or frontends\n\n\n\n\nUML Diagram\n#\n\n\n\n\nCode\n#\n\n\nStaticFactory.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\StaticFactory\n;\n\n\n\n/**\n\n\n * Note1: Remember, static means global state which is evil because it can't be mocked for tests\n\n\n * Note2: Cannot be subclassed or mock-upped or have multiple different instances.\n\n\n */\n\n\nfinal\n \nclass\n \nStaticFactory\n\n\n{\n\n    \n/**\n\n\n     * @param string $type\n\n\n     *\n\n\n     * @return FormatterInterface\n\n\n     */\n\n    \npublic\n \nstatic\n \nfunction\n \nfactory\n(\nstring\n \n$type\n)\n:\n \nFormatterInterface\n\n    \n{\n\n        \nif\n \n(\n$type\n \n==\n \n'number'\n)\n \n{\n\n            \nreturn\n \nnew\n \nFormatNumber\n();\n\n        \n}\n\n\n        \nif\n \n(\n$type\n \n==\n \n'string'\n)\n \n{\n\n            \nreturn\n \nnew\n \nFormatString\n();\n\n        \n}\n\n\n        \nthrow\n \nnew\n \n\\InvalidArgumentException\n(\n'Unknown format given'\n);\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\nFormatterInterface.php\n#\n\n\n1\n2\n3\n4\n5\n6\n7\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\StaticFactory\n;\n\n\n\ninterface\n \nFormatterInterface\n\n\n{\n\n\n}\n\n\n\n\n\n\n\nFormatString.php\n#\n\n\n1\n2\n3\n4\n5\n6\n7\n \n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\StaticFactory\n;\n\n\n\nclass\n \nFormatString\n \nimplements\n \nFormatterInterface\n\n\n{\n\n\n}\n\n\n\n\n\n\n\nFormatNumber.php\n#\n\n\n1\n2\n3\n4\n5\n6\n7\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\StaticFactory\n;\n\n\n\nclass\n \nFormatNumber\n \nimplements\n \nFormatterInterface\n\n\n{\n\n\n}\n\n\n\n\n\n\n\nTest\n#\n\n\nTests/StaticFactoryTest.php\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n<?php\n\n\n\nnamespace\n \nDesignPatterns\\Creational\\StaticFactory\\Tests\n;\n\n\n\nuse\n \nDesignPatterns\\Creational\\StaticFactory\\StaticFactory\n;\n\n\nuse\n \nPHPUnit\\Framework\\TestCase\n;\n\n\n\nclass\n \nStaticFactoryTest\n \nextends\n \nTestCase\n\n\n{\n\n    \npublic\n \nfunction\n \ntestCanCreateNumberFormatter\n()\n\n    \n{\n\n        \n$this\n->\nassertInstanceOf\n(\n\n            \n'DesignPatterns\\Creational\\StaticFactory\\FormatNumber'\n,\n\n            \nStaticFactory\n::\nfactory\n(\n'number'\n)\n\n        \n);\n\n    \n}\n\n\n    \npublic\n \nfunction\n \ntestCanCreateStringFormatter\n()\n\n    \n{\n\n        \n$this\n->\nassertInstanceOf\n(\n\n            \n'DesignPatterns\\Creational\\StaticFactory\\FormatString'\n,\n\n            \nStaticFactory\n::\nfactory\n(\n'string'\n)\n\n        \n);\n\n    \n}\n\n\n    \n/**\n\n\n     * @expectedException \\InvalidArgumentException\n\n\n     */\n\n    \npublic\n \nfunction\n \ntestException\n()\n\n    \n{\n\n        \nStaticFactory\n::\nfactory\n(\n'object'\n);\n\n    \n}\n\n\n}",
            "title": "Static Factory"
        },
        {
            "location": "/background/design_pattern/creational/9_static_factory/#purpose",
            "text": "Similar to the AbstractFactory, this pattern is used to create series of related or dependent objects.   The difference between this and the abstract factory pattern is that the static factory pattern uses just one static method to create all types of objects it can create. It is usually named  factory  or  build .",
            "title": "Purpose"
        },
        {
            "location": "/background/design_pattern/creational/9_static_factory/#examples",
            "text": "Zend Framework: Zend_Cache_Backend or _Frontend use a factory method create cache backends or frontends",
            "title": "Examples"
        },
        {
            "location": "/background/design_pattern/creational/9_static_factory/#uml-diagram",
            "text": "",
            "title": "UML Diagram"
        },
        {
            "location": "/background/design_pattern/creational/9_static_factory/#code",
            "text": "",
            "title": "Code"
        },
        {
            "location": "/background/design_pattern/creational/9_static_factory/#staticfactoryphp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28 <?php  namespace   DesignPatterns\\Creational\\StaticFactory ;  /**   * Note1: Remember, static means global state which is evil because it can't be mocked for tests   * Note2: Cannot be subclassed or mock-upped or have multiple different instances.   */  final   class   StaticFactory  { \n     /**       * @param string $type       *       * @return FormatterInterface       */ \n     public   static   function   factory ( string   $type ) :   FormatterInterface \n     { \n         if   ( $type   ==   'number' )   { \n             return   new   FormatNumber (); \n         } \n\n         if   ( $type   ==   'string' )   { \n             return   new   FormatString (); \n         } \n\n         throw   new   \\InvalidArgumentException ( 'Unknown format given' ); \n     }  }",
            "title": "StaticFactory.php"
        },
        {
            "location": "/background/design_pattern/creational/9_static_factory/#formatterinterfacephp",
            "text": "1\n2\n3\n4\n5\n6\n7 <?php  namespace   DesignPatterns\\Creational\\StaticFactory ;  interface   FormatterInterface  {  }",
            "title": "FormatterInterface.php"
        },
        {
            "location": "/background/design_pattern/creational/9_static_factory/#formatstringphp",
            "text": "1\n2\n3\n4\n5\n6\n7   <?php  namespace   DesignPatterns\\Creational\\StaticFactory ;  class   FormatString   implements   FormatterInterface  {  }",
            "title": "FormatString.php"
        },
        {
            "location": "/background/design_pattern/creational/9_static_factory/#formatnumberphp",
            "text": "1\n2\n3\n4\n5\n6\n7 <?php  namespace   DesignPatterns\\Creational\\StaticFactory ;  class   FormatNumber   implements   FormatterInterface  {  }",
            "title": "FormatNumber.php"
        },
        {
            "location": "/background/design_pattern/creational/9_static_factory/#test",
            "text": "",
            "title": "Test"
        },
        {
            "location": "/background/design_pattern/creational/9_static_factory/#testsstaticfactorytestphp",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33 <?php  namespace   DesignPatterns\\Creational\\StaticFactory\\Tests ;  use   DesignPatterns\\Creational\\StaticFactory\\StaticFactory ;  use   PHPUnit\\Framework\\TestCase ;  class   StaticFactoryTest   extends   TestCase  { \n     public   function   testCanCreateNumberFormatter () \n     { \n         $this -> assertInstanceOf ( \n             'DesignPatterns\\Creational\\StaticFactory\\FormatNumber' , \n             StaticFactory :: factory ( 'number' ) \n         ); \n     } \n\n     public   function   testCanCreateStringFormatter () \n     { \n         $this -> assertInstanceOf ( \n             'DesignPatterns\\Creational\\StaticFactory\\FormatString' , \n             StaticFactory :: factory ( 'string' ) \n         ); \n     } \n\n     /**       * @expectedException \\InvalidArgumentException       */ \n     public   function   testException () \n     { \n         StaticFactory :: factory ( 'object' ); \n     }  }",
            "title": "Tests/StaticFactoryTest.php"
        },
        {
            "location": "/programming/markdown/basics/",
            "text": "What is Markdown?\n#\n\n\nMarkdown is a way to style text on the web. You control the display of the document; formatting words as bold or italic, adding images, and creating lists are just a few of the things we can do with Markdown. Mostly, Markdown is just regular text with a few non-alphabetic characters thrown in, like \n#\n or \n*\n.\n\n\nSyntax guide\n#\n\n\nHeaders\n#\n\n\n1\n2\n3\n# This is an <h1> tag\n## This is an <h2> tag\n###### This is an <h6> tag\n\n\n\n\n\n\nEmphasis\n#\n\n\n1\n2\n3\n4\n5\n6\n7\n*This text will be italic*\n_This will also be italic_\n\n**This text will be bold**\n__This will also be bold__\n\n_You **can** combine them_\n\n\n\n\n\n\nLists\n#\n\n\nUnordered\n#\n\n\n1\n2\n3\n4\n* Item 1\n* Item 2\n  * Item 2a\n  * Item 2b\n\n\n\n\n\n\nOrdered\n#\n\n\n1\n2\n3\n4\n5\n1. Item 1\n1. Item 2\n1. Item 3\n   1. Item 3a\n   1. Item 3b\n\n\n\n\n\n\nImages\n#\n\n\n1\n![Not found Images](../../img/index/win-py-install.png)\n\n\n\n\n\n\nLinks\n#\n\n\n1\n[Link](../project/document_tutorial/main/#huong-dan-cai-at)\n\n\n\n\n\n\nTables\n#\n\n\n1\n2\n3\n4\n5\n| Ti\u00eau \u0111\u1ec1 1     | Ti\u00eau \u0111\u1ec1 2     | Ti\u00eau \u0111\u1ec1 3  |\n| ------------- |:-------------:| ----------:|\n| D\u00f2ng 1.1      | D\u00f2ng 2.1      | D\u00f2ng 3.1   |\n| D\u00f2ng 1.2      | D\u00f2ng 2.2      | D\u00f2ng 3.2   |\n| D\u00f2ng 1.3      | D\u00f2ng 2.3      | D\u00f2ng 3.3   |\n\n\n\n\n\n\nBlockquotes\n#\n\n\n1\n> Blockquotes write here\n\n\n\n\n\n\nInline code\n#\n\n\n1\n`Inline code write here`\n\n\n\n\n\n\nBlock code\n#\n\n\n1\n2\n3\n```\nBlock code write here\n```\n\n\n\n\n\n\nTask Lists\n#\n\n\n1\n2\n3\n4\n- [x] @mentions, #refs, [links](), **formatting**, and <del>tags</del> supported\n- [x] list syntax required (any unordered or ordered list supported)\n- [x] this is a complete item\n- [ ] this is an incomplete item",
            "title": "Basics"
        },
        {
            "location": "/programming/markdown/basics/#what-is-markdown",
            "text": "Markdown is a way to style text on the web. You control the display of the document; formatting words as bold or italic, adding images, and creating lists are just a few of the things we can do with Markdown. Mostly, Markdown is just regular text with a few non-alphabetic characters thrown in, like  #  or  * .",
            "title": "What is Markdown?"
        },
        {
            "location": "/programming/markdown/basics/#syntax-guide",
            "text": "",
            "title": "Syntax guide"
        },
        {
            "location": "/programming/markdown/basics/#headers",
            "text": "1\n2\n3 # This is an <h1> tag\n## This is an <h2> tag\n###### This is an <h6> tag",
            "title": "Headers"
        },
        {
            "location": "/programming/markdown/basics/#emphasis",
            "text": "1\n2\n3\n4\n5\n6\n7 *This text will be italic*\n_This will also be italic_\n\n**This text will be bold**\n__This will also be bold__\n\n_You **can** combine them_",
            "title": "Emphasis"
        },
        {
            "location": "/programming/markdown/basics/#lists",
            "text": "",
            "title": "Lists"
        },
        {
            "location": "/programming/markdown/basics/#unordered",
            "text": "1\n2\n3\n4 * Item 1\n* Item 2\n  * Item 2a\n  * Item 2b",
            "title": "Unordered"
        },
        {
            "location": "/programming/markdown/basics/#ordered",
            "text": "1\n2\n3\n4\n5 1. Item 1\n1. Item 2\n1. Item 3\n   1. Item 3a\n   1. Item 3b",
            "title": "Ordered"
        },
        {
            "location": "/programming/markdown/basics/#images",
            "text": "1 ![Not found Images](../../img/index/win-py-install.png)",
            "title": "Images"
        },
        {
            "location": "/programming/markdown/basics/#links",
            "text": "1 [Link](../project/document_tutorial/main/#huong-dan-cai-at)",
            "title": "Links"
        },
        {
            "location": "/programming/markdown/basics/#tables",
            "text": "1\n2\n3\n4\n5 | Ti\u00eau \u0111\u1ec1 1     | Ti\u00eau \u0111\u1ec1 2     | Ti\u00eau \u0111\u1ec1 3  |\n| ------------- |:-------------:| ----------:|\n| D\u00f2ng 1.1      | D\u00f2ng 2.1      | D\u00f2ng 3.1   |\n| D\u00f2ng 1.2      | D\u00f2ng 2.2      | D\u00f2ng 3.2   |\n| D\u00f2ng 1.3      | D\u00f2ng 2.3      | D\u00f2ng 3.3   |",
            "title": "Tables"
        },
        {
            "location": "/programming/markdown/basics/#blockquotes",
            "text": "1 > Blockquotes write here",
            "title": "Blockquotes"
        },
        {
            "location": "/programming/markdown/basics/#inline-code",
            "text": "1 `Inline code write here`",
            "title": "Inline code"
        },
        {
            "location": "/programming/markdown/basics/#block-code",
            "text": "1\n2\n3 ```\nBlock code write here\n```",
            "title": "Block code"
        },
        {
            "location": "/programming/markdown/basics/#task-lists",
            "text": "1\n2\n3\n4 - [x] @mentions, #refs, [links](), **formatting**, and <del>tags</del> supported\n- [x] list syntax required (any unordered or ordered list supported)\n- [x] this is a complete item\n- [ ] this is an incomplete item",
            "title": "Task Lists"
        },
        {
            "location": "/programming/markdown/advance/",
            "text": "Note Div\n#\n\n\nExample:\n\n1\n2\n3\n4\n!!! note \"Phasellus posuere in sem ut cursus\"\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\n\nResult:\n\n\n\n\nPhasellus posuere in sem ut cursus\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nType:\n\n\n\n\n\n\n\n\nnote\n\n\nSuccess\n\n\nWarning\n\n\n\n\n\n\n\n\n\n\nnote\n\n\nsuccess\n\n\nwarning\n\n\n\n\n\n\nseealso\n\n\ncheck\n\n\ncaution\n\n\n\n\n\n\nabstract\n\n\ndone\n\n\nattention\n\n\n\n\n\n\ninfo\n\n\nquestion\n\n\ndanger\n\n\n\n\n\n\ntodo\n\n\nhelp\n\n\nbug\n\n\n\n\n\n\n\n\nCodeHilite\n#\n\n\nExample:\n\n\n1\n2\n3\n``` python\nimport tensorflow as tf\n```\n\n\n\n\n\n\nResult:\n\n\n1\nimport\n \ntensorflow\n \nas\n \ntf\n\n\n\n\n\n\n\nHighlighting specific lines\n#\n\n\nExample:\n\n1\n2\n3\n4\n5\n6\n7\n8\n``` python hl_lines=\"3 4\"\n\"\"\" Bubble sort \"\"\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] > items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```\n\n\n\n\n\nResult:\n\n\n1\n2\n3\n4\n5\n6\n\"\"\" Bubble sort \"\"\"\n\n\ndef\n \nbubble_sort\n(\nitems\n):\n\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nlen\n(\nitems\n)):\n\n\n        \nfor\n \nj\n \nin\n \nrange\n(\nlen\n(\nitems\n)\n \n-\n \n1\n \n-\n \ni\n):\n\n\n            \nif\n \nitems\n[\nj\n]\n \n>\n \nitems\n[\nj\n \n+\n \n1\n]:\n\n                \nitems\n[\nj\n],\n \nitems\n[\nj\n \n+\n \n1\n]\n \n=\n \nitems\n[\nj\n \n+\n \n1\n],\n \nitems\n[\nj\n]\n\n\n\n\n\n\n\nPHP\n#\n\n\nExample:\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n``` php\n<?php\n\n// src/AppBundle/Controller/LuckyController.php\nnamespace AppBundle\\Controller;\n\nuse Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass LuckyController {\n\n  /**\n   * @Route(\"/lucky/number\")\n   */\n  public function numberAction() {\n    $number = mt_rand(0, 100);\n\n    return new Response(\n      '<html><body>Lucky number: '.$number.'</body></html>'\n    );\n  }\n}\n```\n\n\n\n\n\nResult:\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n<?php\n\n\n\n// src/AppBundle/Controller/LuckyController.php\n\n\nnamespace\n \nAppBundle\\Controller\n;\n\n\n\nuse\n \nSensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route\n;\n\n\nuse\n \nSymfony\\Component\\HttpFoundation\\Response\n;\n\n\n\nclass\n \nLuckyController\n \n{\n\n\n  \n/**\n\n\n   * @Route(\"/lucky/number\")\n\n\n   */\n\n  \npublic\n \nfunction\n \nnumberAction\n()\n \n{\n\n    \n$number\n \n=\n \nmt_rand\n(\n0\n,\n \n100\n);\n\n\n    \nreturn\n \nnew\n \nResponse\n(\n\n      \n'<html><body>Lucky number: '\n.\n$number\n.\n'</body></html>'\n\n    \n);\n\n  \n}\n\n\n}\n\n\n\n\n\n\n\nJavaScript\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\nvar\n \nMath\n \n=\n \nrequire\n(\n'lib/math'\n);\n\n\n\nvar\n \n_extends\n \n=\n \nfunction\n \n(\ntarget\n)\n \n{\n\n  \nfor\n \n(\nvar\n \ni\n \n=\n \n1\n;\n \ni\n \n<\n \narguments\n.\nlength\n;\n \ni\n++\n)\n \n{\n\n    \nvar\n \nsource\n \n=\n \narguments\n[\ni\n];\n\n    \nfor\n \n(\nvar\n \nkey\n \nin\n \nsource\n)\n \n{\n\n      \ntarget\n[\nkey\n]\n \n=\n \nsource\n[\nkey\n];\n\n    \n}\n\n  \n}\n\n\n  \nreturn\n \ntarget\n;\n\n\n};\n\n\n\nvar\n \ne\n \n=\n \nexports\n.\ne\n \n=\n \n2.71828182846\n;\n\n\nexports\n[\n'default'\n]\n \n=\n \nfunction\n \n(\nx\n)\n \n{\n\n  \nreturn\n \nMath\n.\nexp\n(\nx\n);\n\n\n};\n\n\n\nmodule\n.\nexports\n \n=\n \n_extends\n(\nexports\n[\n'default'\n],\n \nexports\n);\n\n\n\n\n\n\n\nJSON\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n{\n\n  \n\"name\"\n:\n \n\"mkdocs-material\"\n,\n\n  \n\"version\"\n:\n \n\"0.2.4\"\n,\n\n  \n\"description\"\n:\n \n\"A Material Design theme for MkDocs\"\n,\n\n  \n\"homepage\"\n:\n \n\"http://squidfunk.github.io/mkdocs-material/\"\n,\n\n  \n\"authors\"\n:\n \n[\n\n    \n\"squidfunk <martin.donath@squidfunk.com>\"\n\n  \n],\n\n  \n\"license\"\n:\n \n\"MIT\"\n,\n\n  \n\"main\"\n:\n \n\"Gulpfile.js\"\n,\n\n  \n\"scripts\"\n:\n \n{\n\n    \n\"start\"\n:\n \n\"./node_modules/.bin/gulp watch --mkdocs\"\n,\n\n    \n\"build\"\n:\n \n\"./node_modules/.bin/gulp build --production\"\n\n  \n}\n\n  \n...\n\n\n}\n\n\n\n\n\n\n\nHTML\n#\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n<!doctype html>\n\n\n<\nhtml\n \nclass\n=\n\"no-js\"\n \nlang\n=\n\"\"\n>\n\n  \n<\nhead\n>\n\n    \n<\nmeta\n \ncharset\n=\n\"utf-8\"\n>\n\n    \n<\nmeta\n \nhttp-equiv\n=\n\"x-ua-compatible\"\n \ncontent\n=\n\"ie=edge\"\n>\n\n    \n<\ntitle\n>\nHTML5 Boilerplate\n</\ntitle\n>\n\n    \n<\nmeta\n \nname\n=\n\"description\"\n \ncontent\n=\n\"\"\n>\n\n    \n<\nmeta\n \nname\n=\n\"viewport\"\n \ncontent\n=\n\"width=device-width, initial-scale=1\"\n>\n\n\n    \n<\nlink\n \nrel\n=\n\"apple-touch-icon\"\n \nhref\n=\n\"apple-touch-icon.png\"\n>\n\n    \n<\nlink\n \nrel\n=\n\"stylesheet\"\n \nhref\n=\n\"css/normalize.css\"\n>\n\n    \n<\nlink\n \nrel\n=\n\"stylesheet\"\n \nhref\n=\n\"css/main.css\"\n>\n\n    \n<\nscript\n \nsrc\n=\n\"js/vendor/modernizr-2.8.3.min.js\"\n></\nscript\n>\n\n  \n</\nhead\n>\n\n  \n<\nbody\n>\n\n    \n<\np\n>\nHello world! This is HTML5 Boilerplate.\n</\np\n>\n\n  \n</\nbody\n>\n\n\n</\nhtml\n>",
            "title": "Advance"
        },
        {
            "location": "/programming/markdown/advance/#note-div",
            "text": "Example: 1\n2\n3\n4 !!! note \"Phasellus posuere in sem ut cursus\"\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.   Result:   Phasellus posuere in sem ut cursus  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Type:     note  Success  Warning      note  success  warning    seealso  check  caution    abstract  done  attention    info  question  danger    todo  help  bug",
            "title": "Note Div"
        },
        {
            "location": "/programming/markdown/advance/#codehilite",
            "text": "Example:  1\n2\n3 ``` python\nimport tensorflow as tf\n```   Result:  1 import   tensorflow   as   tf",
            "title": "CodeHilite"
        },
        {
            "location": "/programming/markdown/advance/#highlighting-specific-lines",
            "text": "Example: 1\n2\n3\n4\n5\n6\n7\n8 ``` python hl_lines=\"3 4\"\n\"\"\" Bubble sort \"\"\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] > items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```   Result:  1\n2\n3\n4\n5\n6 \"\"\" Bubble sort \"\"\"  def   bubble_sort ( items ):       for   i   in   range ( len ( items )):           for   j   in   range ( len ( items )   -   1   -   i ):               if   items [ j ]   >   items [ j   +   1 ]: \n                 items [ j ],   items [ j   +   1 ]   =   items [ j   +   1 ],   items [ j ]",
            "title": "Highlighting specific lines"
        },
        {
            "location": "/programming/markdown/advance/#php",
            "text": "Example:  1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23 ``` php\n<?php\n\n// src/AppBundle/Controller/LuckyController.php\nnamespace AppBundle\\Controller;\n\nuse Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass LuckyController {\n\n  /**\n   * @Route(\"/lucky/number\")\n   */\n  public function numberAction() {\n    $number = mt_rand(0, 100);\n\n    return new Response(\n      '<html><body>Lucky number: '.$number.'</body></html>'\n    );\n  }\n}\n```   Result:   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21 <?php  // src/AppBundle/Controller/LuckyController.php  namespace   AppBundle\\Controller ;  use   Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route ;  use   Symfony\\Component\\HttpFoundation\\Response ;  class   LuckyController   { \n\n   /**     * @Route(\"/lucky/number\")     */ \n   public   function   numberAction ()   { \n     $number   =   mt_rand ( 0 ,   100 ); \n\n     return   new   Response ( \n       '<html><body>Lucky number: ' . $number . '</body></html>' \n     ); \n   }  }",
            "title": "PHP"
        },
        {
            "location": "/programming/markdown/advance/#javascript",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19 var   Math   =   require ( 'lib/math' );  var   _extends   =   function   ( target )   { \n   for   ( var   i   =   1 ;   i   <   arguments . length ;   i ++ )   { \n     var   source   =   arguments [ i ]; \n     for   ( var   key   in   source )   { \n       target [ key ]   =   source [ key ]; \n     } \n   } \n\n   return   target ;  };  var   e   =   exports . e   =   2.71828182846 ;  exports [ 'default' ]   =   function   ( x )   { \n   return   Math . exp ( x );  };  module . exports   =   _extends ( exports [ 'default' ],   exports );",
            "title": "JavaScript"
        },
        {
            "location": "/programming/markdown/advance/#json",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16 { \n   \"name\" :   \"mkdocs-material\" , \n   \"version\" :   \"0.2.4\" , \n   \"description\" :   \"A Material Design theme for MkDocs\" , \n   \"homepage\" :   \"http://squidfunk.github.io/mkdocs-material/\" , \n   \"authors\" :   [ \n     \"squidfunk <martin.donath@squidfunk.com>\" \n   ], \n   \"license\" :   \"MIT\" , \n   \"main\" :   \"Gulpfile.js\" , \n   \"scripts\" :   { \n     \"start\" :   \"./node_modules/.bin/gulp watch --mkdocs\" , \n     \"build\" :   \"./node_modules/.bin/gulp build --production\" \n   } \n   ...  }",
            "title": "JSON"
        },
        {
            "location": "/programming/markdown/advance/#html",
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18 <!doctype html>  < html   class = \"no-js\"   lang = \"\" > \n   < head > \n     < meta   charset = \"utf-8\" > \n     < meta   http-equiv = \"x-ua-compatible\"   content = \"ie=edge\" > \n     < title > HTML5 Boilerplate </ title > \n     < meta   name = \"description\"   content = \"\" > \n     < meta   name = \"viewport\"   content = \"width=device-width, initial-scale=1\" > \n\n     < link   rel = \"apple-touch-icon\"   href = \"apple-touch-icon.png\" > \n     < link   rel = \"stylesheet\"   href = \"css/normalize.css\" > \n     < link   rel = \"stylesheet\"   href = \"css/main.css\" > \n     < script   src = \"js/vendor/modernizr-2.8.3.min.js\" ></ script > \n   </ head > \n   < body > \n     < p > Hello world! This is HTML5 Boilerplate. </ p > \n   </ body >  </ html >",
            "title": "HTML"
        },
        {
            "location": "/programming/laravel/1_gioithieu/",
            "text": "Gi\u1edbi thi\u1ec7u\n#\n\n\nLaravel l\u00e0 1 framework PHP \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf d\u00e0nh cho vi\u1ec7c ph\u00e1t tri\u1ec3n c\u00e1c \u1ee9ng d\u1ee5ng web theo m\u00f4 h\u00ecnh MVC, v\u1edbi s\u1ef1 \u0111on gi\u1ea3n nh\u01b0ng v\u00f4 c\u00f9ng m\u1ea1nh m\u1ebd laravel \u0111\u00e3 tr\u1edf th\u00e0nh framework \u0111\u01b0\u1ee3c s\u1ef1 d\u1ee5ng r\u1ed9ng r\u00e3i nh\u1ea5t \u1edf th\u1eddi \u0111i\u1ec3m hi\u1ec7n t\u1ea1i, lo\u1ea1t b\u00e0i vi\u1ebft n\u00e0y s\u1ebd h\u01b0\u1edbng d\u1eabn c\u00e1ch s\u1eed d\u1ee5ng laravel cho ng\u01b0\u1eddi m\u1edbi b\u1eaft \u0111\u1ea7u.\n\n\nY\u00eau c\u1ea7u h\u1ec7 th\u1ed1ng\n#\n\n\nTr\u01b0\u1edbc khi c\u00e0i \u0111\u1eb7t l\u01b0u \u00fd xem tr\u01b0\u1edbc phi\u00ean b\u1ea3n laravel s\u1eed d\u1ee5ng v\u00ec m\u1ed7i phi\u00ean b\u1ea3n c\u00f3 th\u1ec3 c\u00f3 1 y\u00eau c\u1ea7u t\u1ed1i thi\u1ec3u kh\u00e1c nhau, nh\u01b0 trong b\u00e0i vi\u1ebft n\u00e0y \u0111ang s\u1eed d\u1ee5ng laravel 5.3 n\u00ean c\u00f3 y\u00eau c\u1ea7u h\u1ec7 th\u1ed1ng:\n\n\n1\n2\n3\n4\n5\n6\nPHP >= 5.6.4\nOpenSSL PHP Extension\nPDO PHP Extension\nMbstring PHP Extension\nTokenizer PHP Extension\nXML PHP Extension\n\n\n\n\n\n\nC\u00e0i \u0111\u1eb7t\n#\n\n\nC\u00f3 nhi\u1ec1u c\u00e1ch \u0111\u1ec3 c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t laravel nh\u01b0ng \u0111\u1ec3 \u0111\u01a1n gi\u1ea3n ta s\u1ebd s\u1eed d\u1ee5ng composer (tham kh\u1ea3o lo\u1ea1t b\u00e0i h\u01b0\u1edbng d\u1eabn v\u1ec1 composer).\n\n\n\n\nB1: M\u1edf c\u1eeda s\u1ed1 cmd g\u00f5 l\u1ec7nh\n\n\n\n\n1\ncomposer create-project --prefer-dist laravel/laravel [ten_project_se_tao]\n\n\n\n\n\n\n\n\nB2: Sau khi \u0111\u1ee3i composer k\u00e9o project v\u1ec1 l\u00e0 xong, l\u00fac \u0111\u00f3 ta c\u00f3 th\u1ec3 ch\u1ea1y lu\u00f4n \u0111\u01b0\u1ee3c \u1ee9ng d\u1ee5ng tr\u00ean thanh \u0111\u1ecba ch\u1ec9 v\u00ed d\u1ee5:\n\n\n\n\n1\nlocalhost:8080/[ten_project_se_tao]/public/",
            "title": "Gi\u1edbi thi\u1ec7u, c\u00e0i \u0111\u1eb7t"
        },
        {
            "location": "/programming/laravel/1_gioithieu/#gioi-thieu",
            "text": "Laravel l\u00e0 1 framework PHP \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf d\u00e0nh cho vi\u1ec7c ph\u00e1t tri\u1ec3n c\u00e1c \u1ee9ng d\u1ee5ng web theo m\u00f4 h\u00ecnh MVC, v\u1edbi s\u1ef1 \u0111on gi\u1ea3n nh\u01b0ng v\u00f4 c\u00f9ng m\u1ea1nh m\u1ebd laravel \u0111\u00e3 tr\u1edf th\u00e0nh framework \u0111\u01b0\u1ee3c s\u1ef1 d\u1ee5ng r\u1ed9ng r\u00e3i nh\u1ea5t \u1edf th\u1eddi \u0111i\u1ec3m hi\u1ec7n t\u1ea1i, lo\u1ea1t b\u00e0i vi\u1ebft n\u00e0y s\u1ebd h\u01b0\u1edbng d\u1eabn c\u00e1ch s\u1eed d\u1ee5ng laravel cho ng\u01b0\u1eddi m\u1edbi b\u1eaft \u0111\u1ea7u.",
            "title": "Gi\u1edbi thi\u1ec7u"
        },
        {
            "location": "/programming/laravel/1_gioithieu/#yeu-cau-he-thong",
            "text": "Tr\u01b0\u1edbc khi c\u00e0i \u0111\u1eb7t l\u01b0u \u00fd xem tr\u01b0\u1edbc phi\u00ean b\u1ea3n laravel s\u1eed d\u1ee5ng v\u00ec m\u1ed7i phi\u00ean b\u1ea3n c\u00f3 th\u1ec3 c\u00f3 1 y\u00eau c\u1ea7u t\u1ed1i thi\u1ec3u kh\u00e1c nhau, nh\u01b0 trong b\u00e0i vi\u1ebft n\u00e0y \u0111ang s\u1eed d\u1ee5ng laravel 5.3 n\u00ean c\u00f3 y\u00eau c\u1ea7u h\u1ec7 th\u1ed1ng:  1\n2\n3\n4\n5\n6 PHP >= 5.6.4\nOpenSSL PHP Extension\nPDO PHP Extension\nMbstring PHP Extension\nTokenizer PHP Extension\nXML PHP Extension",
            "title": "Y\u00eau c\u1ea7u h\u1ec7 th\u1ed1ng"
        },
        {
            "location": "/programming/laravel/1_gioithieu/#cai-at",
            "text": "C\u00f3 nhi\u1ec1u c\u00e1ch \u0111\u1ec3 c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t laravel nh\u01b0ng \u0111\u1ec3 \u0111\u01a1n gi\u1ea3n ta s\u1ebd s\u1eed d\u1ee5ng composer (tham kh\u1ea3o lo\u1ea1t b\u00e0i h\u01b0\u1edbng d\u1eabn v\u1ec1 composer).   B1: M\u1edf c\u1eeda s\u1ed1 cmd g\u00f5 l\u1ec7nh   1 composer create-project --prefer-dist laravel/laravel [ten_project_se_tao]    B2: Sau khi \u0111\u1ee3i composer k\u00e9o project v\u1ec1 l\u00e0 xong, l\u00fac \u0111\u00f3 ta c\u00f3 th\u1ec3 ch\u1ea1y lu\u00f4n \u0111\u01b0\u1ee3c \u1ee9ng d\u1ee5ng tr\u00ean thanh \u0111\u1ecba ch\u1ec9 v\u00ed d\u1ee5:   1 localhost:8080/[ten_project_se_tao]/public/",
            "title": "C\u00e0i \u0111\u1eb7t"
        },
        {
            "location": "/programming/laravel/2_batdau/",
            "text": "Ng\u01b0\u1eddi m\u1edbi b\u1eaft \u0111\u1ea7u n\u00ean chu\u1ea9n b\u1ecb nh\u1eefng ki\u1ebfn th\u1ee9c g\u00ec tr\u01b0\u1edbc khi h\u1ecdc laravel:\n#\n\n\n\n\nKi\u1ebfn th\u1ee9c c\u01a1 b\u1ea3n Php\n\n\nL\u1eadp tr\u00ecnh h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng\n\n\nM\u00f4 h\u00ecnh MVC\n\n\nComposer: (tham kh\u1ea3o)\n\n\n\n\nH\u1ecdc laravel nh\u01b0 th\u1ebf n\u00e0o:\n#\n\n\n\n\nL\u00ean google th\u00ec c\u00f3 r\u1ea5t nhi\u1ec1u t\u00e0i li\u1ec7u \u0111\u1ec3 h\u1ecdc laravel nh\u01b0ng chu\u1ea9n nh\u1ea5t l\u00e0 v\u00e0o trang ch\u1ee7 c\u1ee7a laravel \u0111\u1ec3 h\u1ecdc \nhttps://laravel.com/docs/master\n\n\nNgo\u00e0i ra b\u00e0i vi\u1ebft n\u00e0y s\u1ebd cung c\u1ea5p tr\u00ecnh t\u1ef1 c\u00e1c ki\u1ebfn th\u1ee9c c\u01a1 b\u1ea3n nh\u1ea5t c\u1ea7n c\u00f3 c\u1ee7a laravel \u0111\u1ec3 c\u00f3 th\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c ngay trong d\u1ef1 \u00e1n\n\n\n\n\nC\u1ea5u tr\u00fac th\u01b0 m\u1ee5c c\u1ee7a m\u1ed9t project\n#\n\n\nProject s\u1eed d\u1ee5ng laravel s\u1ebd c\u1ea7n quan t\u00e2m \u0111\u1ebfn nh\u1eefng th\u01b0 m\u1ee5c sau \u0111\u00e2y:\n\n\n\n\nL\u01b0u \u00fd: c\u1ea5u tr\u00fac th\u01b0 m\u1ee5c h\u00ecnh tr\u00ean l\u00e0 m\u1eb7c \u0111\u1ecbnh c\u1ee7a laravel nh\u01b0ng do t\u00ednh ch\u1ea5t c\u1ee7a d\u1ef1 \u00e1n n\u00ean ta s\u1ebd s\u1eeda l\u1ea1i \u0111\u1ec3 vi\u1ec7c ph\u00e1t tri\u1ec3n m\u1ed9t modul tr\u1edf n\u00ean \u0111\u01a1n gi\u1ea3n h\u01a1n.\n\n\n\n\nChi ti\u1ebft c\u1ea5u tr\u00fac c\u1ee7a m\u1ed9t Modul \n\n\n\n\n\u1ede \u0111\u00e2y v\u00ed d\u1ee5 v\u1ec1 modul qu\u1ea3n tr\u1ecb \u0111\u1ed1i t\u01b0\u1ee3ng danh m\u1ee5c (list, listtype) l\u00e0m v\u00ed d\u1ee5\n\n\n\n\nmodul qu\u1ea3n tr\u1ecb danh m\u1ee5c (listtype) s\u1ebd n\u1eb1m trong ph\u1ea7n backend (ph\u00eda qu\u1ea3n tr\u1ecb ng\u01b0\u1eddi d\u00f9ng)\n\n\nTrong modul listtype s\u1ebd bao g\u1ed3m c\u00e1c th\u00e0nh ph\u1ea7n:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n- Assets: th\u01b0 m\u1ee5c l\u01b0u ngu\u1ed3n js, css, xml c\u1ee7a \u1ee9ng d\u1ee5ng\n- Controllers\n- Middleware\n- Models\n- Requests\n- Views\nrouter.php: file \u0111i\u1ec1u h\u01b0\u1edbng t\u1eeb url \u0111\u1ebfn c\u00e1c Controllers\n\n// C\u00e1c ph\u1ea7n controllers, middleware...: tham kh\u1ea3o ph\u00eda tr\u00ean",
            "title": "D\u00e0nh cho ng\u01b0\u1eddi m\u1edbi b\u1eaft \u0111\u1ea7u"
        },
        {
            "location": "/programming/laravel/2_batdau/#nguoi-moi-bat-au-nen-chuan-bi-nhung-kien-thuc-gi-truoc-khi-hoc-laravel",
            "text": "Ki\u1ebfn th\u1ee9c c\u01a1 b\u1ea3n Php  L\u1eadp tr\u00ecnh h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng  M\u00f4 h\u00ecnh MVC  Composer: (tham kh\u1ea3o)",
            "title": "Ng\u01b0\u1eddi m\u1edbi b\u1eaft \u0111\u1ea7u n\u00ean chu\u1ea9n b\u1ecb nh\u1eefng ki\u1ebfn th\u1ee9c g\u00ec tr\u01b0\u1edbc khi h\u1ecdc laravel:"
        },
        {
            "location": "/programming/laravel/2_batdau/#hoc-laravel-nhu-the-nao",
            "text": "L\u00ean google th\u00ec c\u00f3 r\u1ea5t nhi\u1ec1u t\u00e0i li\u1ec7u \u0111\u1ec3 h\u1ecdc laravel nh\u01b0ng chu\u1ea9n nh\u1ea5t l\u00e0 v\u00e0o trang ch\u1ee7 c\u1ee7a laravel \u0111\u1ec3 h\u1ecdc  https://laravel.com/docs/master  Ngo\u00e0i ra b\u00e0i vi\u1ebft n\u00e0y s\u1ebd cung c\u1ea5p tr\u00ecnh t\u1ef1 c\u00e1c ki\u1ebfn th\u1ee9c c\u01a1 b\u1ea3n nh\u1ea5t c\u1ea7n c\u00f3 c\u1ee7a laravel \u0111\u1ec3 c\u00f3 th\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c ngay trong d\u1ef1 \u00e1n",
            "title": "H\u1ecdc laravel nh\u01b0 th\u1ebf n\u00e0o:"
        },
        {
            "location": "/programming/laravel/2_batdau/#cau-truc-thu-muc-cua-mot-project",
            "text": "Project s\u1eed d\u1ee5ng laravel s\u1ebd c\u1ea7n quan t\u00e2m \u0111\u1ebfn nh\u1eefng th\u01b0 m\u1ee5c sau \u0111\u00e2y:   L\u01b0u \u00fd: c\u1ea5u tr\u00fac th\u01b0 m\u1ee5c h\u00ecnh tr\u00ean l\u00e0 m\u1eb7c \u0111\u1ecbnh c\u1ee7a laravel nh\u01b0ng do t\u00ednh ch\u1ea5t c\u1ee7a d\u1ef1 \u00e1n n\u00ean ta s\u1ebd s\u1eeda l\u1ea1i \u0111\u1ec3 vi\u1ec7c ph\u00e1t tri\u1ec3n m\u1ed9t modul tr\u1edf n\u00ean \u0111\u01a1n gi\u1ea3n h\u01a1n.   Chi ti\u1ebft c\u1ea5u tr\u00fac c\u1ee7a m\u1ed9t Modul    \u1ede \u0111\u00e2y v\u00ed d\u1ee5 v\u1ec1 modul qu\u1ea3n tr\u1ecb \u0111\u1ed1i t\u01b0\u1ee3ng danh m\u1ee5c (list, listtype) l\u00e0m v\u00ed d\u1ee5   modul qu\u1ea3n tr\u1ecb danh m\u1ee5c (listtype) s\u1ebd n\u1eb1m trong ph\u1ea7n backend (ph\u00eda qu\u1ea3n tr\u1ecb ng\u01b0\u1eddi d\u00f9ng)  Trong modul listtype s\u1ebd bao g\u1ed3m c\u00e1c th\u00e0nh ph\u1ea7n:  1\n2\n3\n4\n5\n6\n7\n8\n9 - Assets: th\u01b0 m\u1ee5c l\u01b0u ngu\u1ed3n js, css, xml c\u1ee7a \u1ee9ng d\u1ee5ng\n- Controllers\n- Middleware\n- Models\n- Requests\n- Views\nrouter.php: file \u0111i\u1ec1u h\u01b0\u1edbng t\u1eeb url \u0111\u1ebfn c\u00e1c Controllers\n\n// C\u00e1c ph\u1ea7n controllers, middleware...: tham kh\u1ea3o ph\u00eda tr\u00ean",
            "title": "C\u1ea5u tr\u00fac th\u01b0 m\u1ee5c c\u1ee7a m\u1ed9t project"
        },
        {
            "location": "/programming/laravel/3_composer/",
            "text": "H\u01b0\u1edbng d\u1eabn c\u00e0i \u0111\u1eb7t\n#\n\n\nGi\u1edbi thi\u1ec7u\n#\n\n\nComposer l\u00e0 m\u1ed9t c\u00f4ng c\u1ee5 qu\u1ea3n l\u00fd c\u00e1c th\u01b0 vi\u1ec7n trong PHP (Dependency Management), c\u00f4ng c\u1ee5 n\u00e0y gi\u00fap ta qu\u1ea3n l\u00fd \u0111\u01b0\u1ee3c c\u00e1c th\u01b0 vi\u1ec7n, framework kh\u00e1c d\u00f9ng trong project c\u1ee7a m\u00ecnh nh\u01b0: laravel, phpdocx\u2026 khi ta mu\u1ed1n th\u00eam m\u1edbi m\u1ed9t th\u01b0 vi\u1ec7n hay c\u1eadp nh\u1eadt phi\u00ean b\u1ea3n cho th\u01b0 vi\u1ec7n c\u0169 th\u00ec vi\u1ec7c s\u1eed d\u1ee5ng Composer s\u1ebd r\u1ea5t thu\u1eadn ti\u1ec7n v\u00e0 \u0111\u01a1n gi\u1ea3n. tham kh\u1ea3o th\u00eam Composer\n\n\n\n\nY\u00eau c\u1ea7u t\u1ed1i thi\u1ec3u h\u1ec7 th\u1ed1ng\n\n\n\n\n1\nPHP >= 5.3.2\n\n\n\n\n\n\nH\u01b0\u1edbng d\u1eabn c\u00e0i \u0111\u1eb7t\n#\n\n\n\n\n\n\nclick v\u00e0o link sau \u0111\u1ec3 t\u1ea3i: t\u1ea3i composer ho\u1eb7c v\u00e0o trang ch\u1ee7 Composer \u0111\u1ec3 download b\u1ed9 c\u00e0i\n\n\n\n\n\n\nM\u1edf file t\u1ea3i v\u1ec1 v\u00e0 c\u00e0i \u0111\u1eb7t nh\u01b0 1 ph\u1ea7n m\u1ec1m b\u00ecnh th\u01b0\u1eddng, l\u01b0u \u00fd: n\u1ebfu hi\u1ec3n th\u1ecb h\u00ecnh b\u00ean d\u01b0\u1edbi th\u00ec ch\u1ecdn v\u00e0o \u0111\u01b0\u1eddng d\u1eabn ch\u01b0a file php.exe trong folder PHP c\u1ee7a m\u00ecnh.\n\n\n\n\n\n\n\n\n\n\nsau khi c\u00e0i \u0111\u1eb7t xong, \u0111\u1ec3 ki\u1ec3m tra xem composer \u0111\u00e3 c\u00e0i \u0111\u1eb7t th\u00e0nh c\u00f4ng ch\u01b0a th\u00ec g\u00f5 l\u1ec7nh\n\n\n\n\n1\ncomposer -V\n\n\n\n\n\n\nN\u1ebfu k\u1ebft qu\u1ea3 tr\u1ea3 v\u1ec1 phi\u00ean b\u1ea3n c\u1ee7a composer c\u00f3 ngh\u0129a l\u00e0 \u0111\u00e3 c\u00e0i \u0111\u1eb7t th\u00e0nh c\u00f4ng\n\n\nH\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng\n#\n\n\nTrong ph\u1ea7n n\u00e0y s\u1ebd h\u01b0\u1edbng c\u00e1ch s\u1eed d\u1ee5ng composer theo t\u1eebng h\u00e0nh \u0111\u1ed9ng c\u1ee5 th\u1ec3:\n\n\n\n\nS\u1eed d\u1ee5ng composer \u0111\u1ec3 c\u00e0i \u0111\u1eb7t trong l\u1ea7n \u0111\u1ea7u kh\u1edfi t\u1ea1o m\u1ed9t project.\n\n\n\n\n1\ncomposer install\n\n\n\n\n\n\n\n\nS\u1eed d\u1ee5ng composer \u0111\u1ec3 th\u00eam m\u1edbi 1 th\u01b0 vi\u1ec7n v\u00e0o project c\u1ee7a m\u00ecnh:\n\n\n\n\n1\ncomposer require [ten_thu_vien_can_add]\n\n\n\n\n\n\n\n\nS\u1eed d\u1ee5ng composer \u0111\u1ec3 c\u1eadp nh\u1eadt phi\u00ean b\u1ea3n c\u00e1c th\u01b0 vi\u1ec7n c\u0169:\n\n\n\n\n1\ncomposer update\n\n\n\n\n\n\nL\u01b0u \u00fd:\n\n\n\n\n\n\nC\u00e1c l\u1ec7nh composer s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c thi b\u1eb1ng l\u1ec7nh cmd, v\u00e0 \u0111\u01b0\u1eddng d\u1eabn n\u1eb1m trong th\u01b0 m\u1ee5c project m\u00e0 m\u00ecnh mu\u1ed1n th\u1ef1c hi\u1ec7n\n\n\n\n\n\n\nTrong 1 project s\u1eed d\u1ee5ng composer s\u1ebd c\u00f3 2 file: \n\n\n\n\n\n\ncomposer.json: \u0110\u00e2y l\u00e0 file gi\u00fap composer bi\u1ebft \u0111\u01b0\u1ee3c h\u1ec7 th\u1ed1ng \u0111ang s\u1eed d\u1ee5ng c\u00e1c th\u01b0 vi\u1ec7n n\u00e0o \u0111\u1ec3 c\u00e0i \u0111\u1eb7t\n\n\ncomposer.lock: L\u00e0 file c\u1ed1 \u0111\u1ecbnh c\u00e1c phi\u00ean b\u1ea3n. gi\u00fap cho to\u00e0n b\u1ed9 team tr\u00e1nh \u0111\u01b0\u1ee3c tr\u01b0\u1eddng h\u1ee3p anh A s\u1eed d\u1ee5ng version 1 anh B l\u1ea1i s\u1eed d\u1ee5ng version 2 c\u1ee7a th\u01b0 vi\u1ec7n \u0111\u00f3.\n\n\n\n\nC\u00e1c th\u01b0 vi\u1ec7n \u0111\u01b0\u1ee3c compser qu\u1ea3n l\u00fd s\u1ebd \u0111\u01b0\u1ee3c n\u1eb1m trong th\u01b0 m\u1ee5c vendor",
            "title": "Composer"
        },
        {
            "location": "/programming/laravel/3_composer/#huong-dan-cai-at",
            "text": "",
            "title": "H\u01b0\u1edbng d\u1eabn c\u00e0i \u0111\u1eb7t"
        },
        {
            "location": "/programming/laravel/3_composer/#gioi-thieu",
            "text": "Composer l\u00e0 m\u1ed9t c\u00f4ng c\u1ee5 qu\u1ea3n l\u00fd c\u00e1c th\u01b0 vi\u1ec7n trong PHP (Dependency Management), c\u00f4ng c\u1ee5 n\u00e0y gi\u00fap ta qu\u1ea3n l\u00fd \u0111\u01b0\u1ee3c c\u00e1c th\u01b0 vi\u1ec7n, framework kh\u00e1c d\u00f9ng trong project c\u1ee7a m\u00ecnh nh\u01b0: laravel, phpdocx\u2026 khi ta mu\u1ed1n th\u00eam m\u1edbi m\u1ed9t th\u01b0 vi\u1ec7n hay c\u1eadp nh\u1eadt phi\u00ean b\u1ea3n cho th\u01b0 vi\u1ec7n c\u0169 th\u00ec vi\u1ec7c s\u1eed d\u1ee5ng Composer s\u1ebd r\u1ea5t thu\u1eadn ti\u1ec7n v\u00e0 \u0111\u01a1n gi\u1ea3n. tham kh\u1ea3o th\u00eam Composer   Y\u00eau c\u1ea7u t\u1ed1i thi\u1ec3u h\u1ec7 th\u1ed1ng   1 PHP >= 5.3.2",
            "title": "Gi\u1edbi thi\u1ec7u"
        },
        {
            "location": "/programming/laravel/3_composer/#huong-dan-cai-at_1",
            "text": "click v\u00e0o link sau \u0111\u1ec3 t\u1ea3i: t\u1ea3i composer ho\u1eb7c v\u00e0o trang ch\u1ee7 Composer \u0111\u1ec3 download b\u1ed9 c\u00e0i    M\u1edf file t\u1ea3i v\u1ec1 v\u00e0 c\u00e0i \u0111\u1eb7t nh\u01b0 1 ph\u1ea7n m\u1ec1m b\u00ecnh th\u01b0\u1eddng, l\u01b0u \u00fd: n\u1ebfu hi\u1ec3n th\u1ecb h\u00ecnh b\u00ean d\u01b0\u1edbi th\u00ec ch\u1ecdn v\u00e0o \u0111\u01b0\u1eddng d\u1eabn ch\u01b0a file php.exe trong folder PHP c\u1ee7a m\u00ecnh.      sau khi c\u00e0i \u0111\u1eb7t xong, \u0111\u1ec3 ki\u1ec3m tra xem composer \u0111\u00e3 c\u00e0i \u0111\u1eb7t th\u00e0nh c\u00f4ng ch\u01b0a th\u00ec g\u00f5 l\u1ec7nh   1 composer -V   N\u1ebfu k\u1ebft qu\u1ea3 tr\u1ea3 v\u1ec1 phi\u00ean b\u1ea3n c\u1ee7a composer c\u00f3 ngh\u0129a l\u00e0 \u0111\u00e3 c\u00e0i \u0111\u1eb7t th\u00e0nh c\u00f4ng",
            "title": "H\u01b0\u1edbng d\u1eabn c\u00e0i \u0111\u1eb7t"
        },
        {
            "location": "/programming/laravel/3_composer/#huong-dan-su-dung",
            "text": "Trong ph\u1ea7n n\u00e0y s\u1ebd h\u01b0\u1edbng c\u00e1ch s\u1eed d\u1ee5ng composer theo t\u1eebng h\u00e0nh \u0111\u1ed9ng c\u1ee5 th\u1ec3:   S\u1eed d\u1ee5ng composer \u0111\u1ec3 c\u00e0i \u0111\u1eb7t trong l\u1ea7n \u0111\u1ea7u kh\u1edfi t\u1ea1o m\u1ed9t project.   1 composer install    S\u1eed d\u1ee5ng composer \u0111\u1ec3 th\u00eam m\u1edbi 1 th\u01b0 vi\u1ec7n v\u00e0o project c\u1ee7a m\u00ecnh:   1 composer require [ten_thu_vien_can_add]    S\u1eed d\u1ee5ng composer \u0111\u1ec3 c\u1eadp nh\u1eadt phi\u00ean b\u1ea3n c\u00e1c th\u01b0 vi\u1ec7n c\u0169:   1 composer update   L\u01b0u \u00fd:    C\u00e1c l\u1ec7nh composer s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c thi b\u1eb1ng l\u1ec7nh cmd, v\u00e0 \u0111\u01b0\u1eddng d\u1eabn n\u1eb1m trong th\u01b0 m\u1ee5c project m\u00e0 m\u00ecnh mu\u1ed1n th\u1ef1c hi\u1ec7n    Trong 1 project s\u1eed d\u1ee5ng composer s\u1ebd c\u00f3 2 file:     composer.json: \u0110\u00e2y l\u00e0 file gi\u00fap composer bi\u1ebft \u0111\u01b0\u1ee3c h\u1ec7 th\u1ed1ng \u0111ang s\u1eed d\u1ee5ng c\u00e1c th\u01b0 vi\u1ec7n n\u00e0o \u0111\u1ec3 c\u00e0i \u0111\u1eb7t  composer.lock: L\u00e0 file c\u1ed1 \u0111\u1ecbnh c\u00e1c phi\u00ean b\u1ea3n. gi\u00fap cho to\u00e0n b\u1ed9 team tr\u00e1nh \u0111\u01b0\u1ee3c tr\u01b0\u1eddng h\u1ee3p anh A s\u1eed d\u1ee5ng version 1 anh B l\u1ea1i s\u1eed d\u1ee5ng version 2 c\u1ee7a th\u01b0 vi\u1ec7n \u0111\u00f3.   C\u00e1c th\u01b0 vi\u1ec7n \u0111\u01b0\u1ee3c compser qu\u1ea3n l\u00fd s\u1ebd \u0111\u01b0\u1ee3c n\u1eb1m trong th\u01b0 m\u1ee5c vendor",
            "title": "H\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng"
        },
        {
            "location": "/programming/angular/1_started/",
            "text": "Set up the Development Environment\n#\n\n\nNodejs\n#\n\n\nInstall \nNode.js\u00ae and npm\n  if they are not already on your machine.\n\n\n\n\nWarning\n\n\nVerify that you are running at least node 6.9.x and npm 3.x.x by running node -v and npm -v in a terminal/console window. Older versions produce errors, but newer versions are fine..\n\n\n\n\nAngular CLI\n#\n\n\nThe Angular CLI is a command line interface tool that can create a project, add files, and perform a variety of ongoing development tasks such as testing, bundling, and deployment.\n\n\nInstall:\n\n\n1\nnpm install -g @angular/cli\n\n\n\n\n\n\nCreate a new project\n#\n\n\n1\nng new my-app\n\n\n\n\n\n\nServe the application\n#\n\n\n1\n2\ncd my-app\nng serve --open\n\n\n\n\n\n\n\n\nNote\n\n\nUsing the \n--open\n (or just \n-o\n) option will automatically open your browser on \nhttp://localhost:4200/\n\n\n\n\nProject file review\n#\n\n\nThe src folder\n#\n\n\nYour app lives in the src folder. All Angular components, templates, styles, images, and anything else your app needs go here. Any files outside of this folder are meant to support building your app. \nLink\n\n\nThe root folder\n#\n\n\nThe \nsrc/\n folder is just one of the items inside the project's root folder. Other files help you build, test, maintain, document, and deploy the app. These files go in the root folder next to \nsrc/\n. \nLink",
            "title": "Getting Started"
        },
        {
            "location": "/programming/angular/1_started/#set-up-the-development-environment",
            "text": "",
            "title": "Set up the Development Environment"
        },
        {
            "location": "/programming/angular/1_started/#nodejs",
            "text": "Install  Node.js\u00ae and npm   if they are not already on your machine.   Warning  Verify that you are running at least node 6.9.x and npm 3.x.x by running node -v and npm -v in a terminal/console window. Older versions produce errors, but newer versions are fine..",
            "title": "Nodejs"
        },
        {
            "location": "/programming/angular/1_started/#angular-cli",
            "text": "The Angular CLI is a command line interface tool that can create a project, add files, and perform a variety of ongoing development tasks such as testing, bundling, and deployment.  Install:  1 npm install -g @angular/cli",
            "title": "Angular CLI"
        },
        {
            "location": "/programming/angular/1_started/#create-a-new-project",
            "text": "1 ng new my-app",
            "title": "Create a new project"
        },
        {
            "location": "/programming/angular/1_started/#serve-the-application",
            "text": "1\n2 cd my-app\nng serve --open    Note  Using the  --open  (or just  -o ) option will automatically open your browser on  http://localhost:4200/",
            "title": "Serve the application"
        },
        {
            "location": "/programming/angular/1_started/#project-file-review",
            "text": "",
            "title": "Project file review"
        },
        {
            "location": "/programming/angular/1_started/#the-src-folder",
            "text": "Your app lives in the src folder. All Angular components, templates, styles, images, and anything else your app needs go here. Any files outside of this folder are meant to support building your app.  Link",
            "title": "The src folder"
        },
        {
            "location": "/programming/angular/1_started/#the-root-folder",
            "text": "The  src/  folder is just one of the items inside the project's root folder. Other files help you build, test, maintain, document, and deploy the app. These files go in the root folder next to  src/ .  Link",
            "title": "The root folder"
        },
        {
            "location": "/programming/angular/2_architecture/",
            "text": "Modules\n#\n\n\nAngular apps are modular and Angular has its own modularity system called NgModules\n\n\nComponents\n#\n\n\nA component controls a patch of screen called a view\n\n\nTemplates\n#\n\n\nYou define a component's view with its companion template. A template is a form of HTML that tells Angular how to render the component\n\n\nMetadata\n#\n\n\nMetadata tells Angular how to process a class.\n\n\nData binding\n#\n\n\nWithout a framework, you would be responsible for pushing data values into the HTML controls and turning user responses into actions and value updates. Writing such push/pull logic by hand is tedious, error-prone, and a nightmare to read as any experienced jQuery programmer can attest.",
            "title": "Architecture"
        },
        {
            "location": "/programming/angular/2_architecture/#modules",
            "text": "Angular apps are modular and Angular has its own modularity system called NgModules",
            "title": "Modules"
        },
        {
            "location": "/programming/angular/2_architecture/#components",
            "text": "A component controls a patch of screen called a view",
            "title": "Components"
        },
        {
            "location": "/programming/angular/2_architecture/#templates",
            "text": "You define a component's view with its companion template. A template is a form of HTML that tells Angular how to render the component",
            "title": "Templates"
        },
        {
            "location": "/programming/angular/2_architecture/#metadata",
            "text": "Metadata tells Angular how to process a class.",
            "title": "Metadata"
        },
        {
            "location": "/programming/angular/2_architecture/#data-binding",
            "text": "Without a framework, you would be responsible for pushing data values into the HTML controls and turning user responses into actions and value updates. Writing such push/pull logic by hand is tedious, error-prone, and a nightmare to read as any experienced jQuery programmer can attest.",
            "title": "Data binding"
        },
        {
            "location": "/programming/angular/3_kientruc/",
            "text": "Ki\u1ebfn tr\u00fac Angular\n#\n\n\nC\u00f9ng xem x\u00e9t h\u00ecnh sau:\n\n\n\n\nModule\n#\n\n\nHi\u1ec3u 1 c\u00e1ch \u0111\u01a1n gi\u1ea3n Module s\u1ebd nh\u00f3m nh\u1eefng c\u00f4ng vi\u1ec7c gi\u1ed1ng nhau v\u00e0o th\u00e0nh 1 kh\u1ed1i \u0111\u1ec3 qu\u1ea3n l\u00fd, khi g\u1ecdi ch\u1ee9c n\u0103ng n\u00e0o trong kh\u1ed1i \u0111\u00f3 th\u00ec ta Import Module ch\u1ee9a ch\u1ee9c n\u0103ng \u0111\u00f3, Th\u01b0 vi\u1ec7n trong Angular c\u0169ng chia th\u00e0nh c\u00e1c Module, c\u00e1c th\u01b0 vi\u1ec7n b\u00ean ngo\u00e0i nh\u01b0 Devexpress.. c\u0169ng \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 c\u00e1c kh\u1ed1i Module ri\u00eang l\u1ebb. Tham kh\u1ea3o c\u00e1ch d\u00f9ng: \nhttps://angular.io/guide/ngmodule\n \n\n\nComponent\n#\n\n\nTrong m\u00f4 h\u00ecnh MVC th\u00ec Component s\u1ebd g\u1ea7n gi\u1ed1ng nh\u01b0 Controler, gi\u00fap x\u1eed l\u00fd logic v\u00e0 \u0111i\u1ec1u khi\u1ec3n ph\u1ea7n view. Trong d\u1ef1 \u00e1n c\u1ee5 th\u1ec3 Component gi\u00fap chia \u1ee9ng d\u1ee5ng th\u00e0nh c\u00e1c ph\u1ea7n \u0111\u1ec3 hi\u1ec3n th\u1ecb giao di\u1ec7n. Tham kh\u1ea3o: \nhttps://angular.io/guide/displaying-data\n\n\n\n\nVD: 1 Website th\u01b0\u1eddng bao g\u1ed3m c\u00e1c Component sau:\n\n\n\n\n\n\n\n\nHeader Component\n: Gi\u00fap x\u1eed l\u00fd hi\u1ec3n th\u1ecb ph\u1ea7n Header\n\n\nRoot Component\n: Khung bao c\u00e1c ph\u1ea7n Sitebar,Content\n\n\nSideBar Component\n: Gi\u00fap x\u1eed l\u00fd hi\u1ec3n th\u1ecb ph\u1ea7n thanh b\u00ean\n\n\nItem Component\n: Hi\u1ec3n th\u1ecb ph\u1ea7n n\u1ed9i dung\n\n\n\n\nTemplate\n#\n\n\nGi\u00fap cho \u1ee9ng d\u1ee5ng hi\u1ec3n th\u1ecb ra m\u00e3 HTML, t\u1ee9c l\u00e0 \u1edf ph\u1ea7n hi\u1ec3n th\u1ecb View ta c\u00f3 th\u1ec3 vi\u1ebft c\u00e1c bi\u1ebfn, c\u00e1c x\u1eed l\u00fd logic Template s\u1ebd render nh\u1eefng c\u00e2u l\u1ec7nh \u0111\u00f3 ra m\u00e3 HTML \u0111\u1ec3 hi\u1ec3n th\u1ecb. Tham kh\u1ea3o: n\u1eb1m trong t\u00e0i li\u1ec7u c\u1ee7a Component\n\n\nMetadata\n#\n\n\nS\u1ebd gi\u00fap cho Angular bi\u1ebft v\u00e0 x\u1eed l\u00fd Component n\u00e0y x\u1eed l\u00fd th\u1ebf n\u00e0o, hi\u1ec3n tr\u1ecb ph\u1ea7n trong view\n\n\nData Biding\n#\n\n\nL\u00e0 m\u1ed9t t\u00ednh n\u0103ng gi\u00fap Anguar x\u1eed l\u00fd, \u0111\u1ed3ng b\u1ed9 d\u1eef li\u1ec7u, c\u00e1c s\u1ef1 ki\u1ec7n tr\u00ean form gi\u1eefa Template v\u00e0 Component. Tham kh\u1ea3o: \nhttps://angular.io/guide/template-syntax\n\n\nService\n#\n\n\nDirectives Gi\u00fap Angular x\u1eed l\u00fd d\u1eef li\u1ec7u, l\u1ea5y d\u1eef li\u1ec7u t\u1eeb c\u00e1c Api, Share d\u1eef li\u1ec7u gi\u1eefa c\u00e1c Component..vv. Tham kh\u1ea3o: \nhttps://angular.io/tutorial/toh-pt4\n\n\nDirectives\n#\n\n\nL\u00e0 m\u1ed9t ph\u1ea7n m\u1edf r\u1ed9ng trong teamplate, gi\u00fap cho ng\u01b0\u1eddi l\u1eadp tr\u00ecnh c\u00f3 th\u1ec3 t\u1ea1o th\u00e0nh c\u00e1c tag m\u00e0 trong HTML kh\u00f4ng c\u00f3 v\u00e0 \u0111\u1ecbnh ngh\u0129a giao di\u1ec7n cho tag \u0111\u00f3 nh\u01b0 n\u00e0o. vd \n\n\nN\u00f3i t\u00f3m l\u1ea1i: Ki\u1ebfm th\u1ee9c tr\u1ecdng Angular r\u1ea5t nhi\u1ec1u, v\u00e0 \u0111\u00e2y ch\u1ec9 li\u1ec7t k\u00ea nh\u1eefng g\u00ec quan tr\u1ecdng nh\u1ea5t. N\u00ean n\u1eafm ch\u1eafc ki\u1ebfn th\u1ee9c ph\u1ea7n b\u00f4i \u0111\u1ecf v\u00ec s\u1ebd s\u1eed d\u1ee5ng r\u1ea5t nhi\u1ec1u trong d\u1ef1 \u00e1n.\n\n\nC\u1ea5u tr\u00fac th\u01b0 m\u1ee5c trong Angular\n#\n\n\n\n\nM\u00f4 h\u00ecnh ph\u00e1t tri\u1ec3n d\u1ef1 \u00e1n s\u1eed d\u1ee5ng Angular\n#",
            "title": "Ki\u1ebfn tr\u00fac"
        },
        {
            "location": "/programming/angular/3_kientruc/#kien-truc-angular",
            "text": "C\u00f9ng xem x\u00e9t h\u00ecnh sau:",
            "title": "Ki\u1ebfn tr\u00fac Angular"
        },
        {
            "location": "/programming/angular/3_kientruc/#module",
            "text": "Hi\u1ec3u 1 c\u00e1ch \u0111\u01a1n gi\u1ea3n Module s\u1ebd nh\u00f3m nh\u1eefng c\u00f4ng vi\u1ec7c gi\u1ed1ng nhau v\u00e0o th\u00e0nh 1 kh\u1ed1i \u0111\u1ec3 qu\u1ea3n l\u00fd, khi g\u1ecdi ch\u1ee9c n\u0103ng n\u00e0o trong kh\u1ed1i \u0111\u00f3 th\u00ec ta Import Module ch\u1ee9a ch\u1ee9c n\u0103ng \u0111\u00f3, Th\u01b0 vi\u1ec7n trong Angular c\u0169ng chia th\u00e0nh c\u00e1c Module, c\u00e1c th\u01b0 vi\u1ec7n b\u00ean ngo\u00e0i nh\u01b0 Devexpress.. c\u0169ng \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 c\u00e1c kh\u1ed1i Module ri\u00eang l\u1ebb. Tham kh\u1ea3o c\u00e1ch d\u00f9ng:  https://angular.io/guide/ngmodule",
            "title": "Module"
        },
        {
            "location": "/programming/angular/3_kientruc/#component",
            "text": "Trong m\u00f4 h\u00ecnh MVC th\u00ec Component s\u1ebd g\u1ea7n gi\u1ed1ng nh\u01b0 Controler, gi\u00fap x\u1eed l\u00fd logic v\u00e0 \u0111i\u1ec1u khi\u1ec3n ph\u1ea7n view. Trong d\u1ef1 \u00e1n c\u1ee5 th\u1ec3 Component gi\u00fap chia \u1ee9ng d\u1ee5ng th\u00e0nh c\u00e1c ph\u1ea7n \u0111\u1ec3 hi\u1ec3n th\u1ecb giao di\u1ec7n. Tham kh\u1ea3o:  https://angular.io/guide/displaying-data   VD: 1 Website th\u01b0\u1eddng bao g\u1ed3m c\u00e1c Component sau:     Header Component : Gi\u00fap x\u1eed l\u00fd hi\u1ec3n th\u1ecb ph\u1ea7n Header  Root Component : Khung bao c\u00e1c ph\u1ea7n Sitebar,Content  SideBar Component : Gi\u00fap x\u1eed l\u00fd hi\u1ec3n th\u1ecb ph\u1ea7n thanh b\u00ean  Item Component : Hi\u1ec3n th\u1ecb ph\u1ea7n n\u1ed9i dung",
            "title": "Component"
        },
        {
            "location": "/programming/angular/3_kientruc/#template",
            "text": "Gi\u00fap cho \u1ee9ng d\u1ee5ng hi\u1ec3n th\u1ecb ra m\u00e3 HTML, t\u1ee9c l\u00e0 \u1edf ph\u1ea7n hi\u1ec3n th\u1ecb View ta c\u00f3 th\u1ec3 vi\u1ebft c\u00e1c bi\u1ebfn, c\u00e1c x\u1eed l\u00fd logic Template s\u1ebd render nh\u1eefng c\u00e2u l\u1ec7nh \u0111\u00f3 ra m\u00e3 HTML \u0111\u1ec3 hi\u1ec3n th\u1ecb. Tham kh\u1ea3o: n\u1eb1m trong t\u00e0i li\u1ec7u c\u1ee7a Component",
            "title": "Template"
        },
        {
            "location": "/programming/angular/3_kientruc/#metadata",
            "text": "S\u1ebd gi\u00fap cho Angular bi\u1ebft v\u00e0 x\u1eed l\u00fd Component n\u00e0y x\u1eed l\u00fd th\u1ebf n\u00e0o, hi\u1ec3n tr\u1ecb ph\u1ea7n trong view",
            "title": "Metadata"
        },
        {
            "location": "/programming/angular/3_kientruc/#data-biding",
            "text": "L\u00e0 m\u1ed9t t\u00ednh n\u0103ng gi\u00fap Anguar x\u1eed l\u00fd, \u0111\u1ed3ng b\u1ed9 d\u1eef li\u1ec7u, c\u00e1c s\u1ef1 ki\u1ec7n tr\u00ean form gi\u1eefa Template v\u00e0 Component. Tham kh\u1ea3o:  https://angular.io/guide/template-syntax",
            "title": "Data Biding"
        },
        {
            "location": "/programming/angular/3_kientruc/#service",
            "text": "Directives Gi\u00fap Angular x\u1eed l\u00fd d\u1eef li\u1ec7u, l\u1ea5y d\u1eef li\u1ec7u t\u1eeb c\u00e1c Api, Share d\u1eef li\u1ec7u gi\u1eefa c\u00e1c Component..vv. Tham kh\u1ea3o:  https://angular.io/tutorial/toh-pt4",
            "title": "Service"
        },
        {
            "location": "/programming/angular/3_kientruc/#directives",
            "text": "L\u00e0 m\u1ed9t ph\u1ea7n m\u1edf r\u1ed9ng trong teamplate, gi\u00fap cho ng\u01b0\u1eddi l\u1eadp tr\u00ecnh c\u00f3 th\u1ec3 t\u1ea1o th\u00e0nh c\u00e1c tag m\u00e0 trong HTML kh\u00f4ng c\u00f3 v\u00e0 \u0111\u1ecbnh ngh\u0129a giao di\u1ec7n cho tag \u0111\u00f3 nh\u01b0 n\u00e0o. vd   N\u00f3i t\u00f3m l\u1ea1i: Ki\u1ebfm th\u1ee9c tr\u1ecdng Angular r\u1ea5t nhi\u1ec1u, v\u00e0 \u0111\u00e2y ch\u1ec9 li\u1ec7t k\u00ea nh\u1eefng g\u00ec quan tr\u1ecdng nh\u1ea5t. N\u00ean n\u1eafm ch\u1eafc ki\u1ebfn th\u1ee9c ph\u1ea7n b\u00f4i \u0111\u1ecf v\u00ec s\u1ebd s\u1eed d\u1ee5ng r\u1ea5t nhi\u1ec1u trong d\u1ef1 \u00e1n.",
            "title": "Directives"
        },
        {
            "location": "/programming/angular/3_kientruc/#cau-truc-thu-muc-trong-angular",
            "text": "",
            "title": "C\u1ea5u tr\u00fac th\u01b0 m\u1ee5c trong Angular"
        },
        {
            "location": "/programming/angular/3_kientruc/#mo-hinh-phat-trien-du-an-su-dung-angular",
            "text": "",
            "title": "M\u00f4 h\u00ecnh ph\u00e1t tri\u1ec3n d\u1ef1 \u00e1n s\u1eed d\u1ee5ng Angular"
        },
        {
            "location": "/programming/angular/4_caulenh/",
            "text": "Ch\u1ea1y \u1ee9ng d\u1ee5ng\n#\n\n\n1\nng server -o\n\n\n\n\n\n\nBuild \u1ee9ng d\u1ee5ng ra b\u1ea3n product\n#\n\n\n1\nng build \u2013prod\n\n\n\n\n\n\nT\u1ea1o module\n#\n\n\n1\n2\n3\nng g module [ten_module]\n\nng g module [ten_module] --routing    // \u0110\u1ec3 t\u1ea1o router trong module\n\n\n\n\n\n\nT\u1ea1o component\n#\n\n\n1\nng g component [ten_component]\n\n\n\n\n\n\nT\u1ea1o service\n#\n\n\n1\nng g service [ten_service]\n\n\n\n\n\n\nT\u1ea1o class\n#\n\n\n1\nng g class [ten_class]",
            "title": "C\u00e2u l\u1ec7nh th\u01b0\u1eddng d\u00f9ng"
        },
        {
            "location": "/programming/angular/4_caulenh/#chay-ung-dung",
            "text": "1 ng server -o",
            "title": "Ch\u1ea1y \u1ee9ng d\u1ee5ng"
        },
        {
            "location": "/programming/angular/4_caulenh/#build-ung-dung-ra-ban-product",
            "text": "1 ng build \u2013prod",
            "title": "Build \u1ee9ng d\u1ee5ng ra b\u1ea3n product"
        },
        {
            "location": "/programming/angular/4_caulenh/#tao-module",
            "text": "1\n2\n3 ng g module [ten_module]\n\nng g module [ten_module] --routing    // \u0110\u1ec3 t\u1ea1o router trong module",
            "title": "T\u1ea1o module"
        },
        {
            "location": "/programming/angular/4_caulenh/#tao-component",
            "text": "1 ng g component [ten_component]",
            "title": "T\u1ea1o component"
        },
        {
            "location": "/programming/angular/4_caulenh/#tao-service",
            "text": "1 ng g service [ten_service]",
            "title": "T\u1ea1o service"
        },
        {
            "location": "/programming/angular/4_caulenh/#tao-class",
            "text": "1 ng g class [ten_class]",
            "title": "T\u1ea1o class"
        },
        {
            "location": "/software_dev/trello/",
            "text": "1. Gi\u1edbi thi\u1ec7u v\u1ec1 trello\n#\n\n\nTrello l\u00e0 c\u00f4ng c\u1ee5 qu\u1ea3n l\u00fd c\u00f4ng vi\u1ec7c r\u1ea5t hi\u1ec7u qu\u1ea3 m\u00e0 nhi\u1ec1u t\u1ed5 ch\u1ee9c c\u00e1 nh\u00e2n \u0111ang s\u1eed  d\u1ee5ng.\nTrello g\u1ed3m c\u00f3 phi\u00ean b\u1ea3n mi\u1ec5n ph\u00ed v\u00e0 tr\u1ea3 ph\u00ed.\n\n\nTrello g\u1ed3m c\u00e1c th\u00e0nh ph\u1ea7n c\u01a1 b\u1ea3n sau:\n\n\n\n\nCard:\n L\u00e0 th\u1ebb th\u00f4ng tin c\u00f3 Ti\u00eau \u0111\u1ec1, M\u00f4 t\u1ea3 d\u00f9ng \u0111\u1ec3 l\u01b0u tr\u1eef c\u00f4ng vi\u1ec7c. M\u1ed9t Card c\u00f3 th\u1ec3 d\u00f9ng \u0111\u1ec3 ghi c\u00f4ng vi\u1ec7c, t\u00ednh n\u0103ng s\u1ea3n ph\u1ea9m, c\u00e2u h\u1ecfi, ghi ch\u00fa,\u2026 t\u00f9y c\u00e1ch s\u1eed d\u1ee5ng. M\u1ed7i Card s\u1ebd c\u00f3 danh s\u00e1ch \u0111\u1ec3 b\u1ea1n chia nh\u1eefng th\u00f4ng tin \u0111\u1ea7u vi\u1ec7c nh\u1ecf h\u01a1n. M\u1ed7i Card c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c b\u00ecnh lu\u1eadn, \u0111\u00ednh k\u00e8m c\u00e1c t\u1ec7p,\nh\u00ecnh \u1ea3nh tr\u00ean \u0111\u00f3 \u0111\u1ec3 ph\u1ee5c v\u1ee5 cho vi\u1ec7c trao \u0111\u1ed5i gi\u1eefa c\u00e1c th\u00e0nh vi\u00ean.\n\n\nList:\n L\u00e0 m\u1ed9t danh s\u00e1ch t\u1ed5ng h\u1ee3p c\u00e1c Card thu\u1ed9c chung m\u1ed9t t\u00ecnh tr\u1ea1ng\nho\u1eb7c m\u1ed9t t\u00ednh ch\u1ea5t kh\u00e1c nhau. V\u00ed d\u1ee5: List Doing bao g\u1ed3m nh\u1eefng card\n\u0111ang \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n. List Done ch\u1ee9a nh\u1eefng card \u0111\u00e3 ho\u00e0n th\u00e0nh.\n\n\nBoard :\n  L\u00e0 m\u1ed9t b\u1ea3ng, th\u01b0\u1eddng t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi m\u1ed9t d\u1ef1 \u00e1n ho\u1eb7c m\u1ed9t m\u1ea3ng\nc\u00f4ng vi\u1ec7c. Trong m\u1ed9t Board c\u00f3 th\u1ec3 c\u00f3 nhi\u1ec1u List chia theo t\u00ecnh tr\u1ea1ng c\u1ee7a\nnh\u1eefng \u0111\u1ea7u vi\u1ec7c c\u1ee7a d\u1ef1 \u00e1n \u0111\u00f3 \u0111\u1ec3 ti\u1ec7n theo d\u00f5i.\n\n\nTeam:\n t\u1ed5ng h\u1ee3p nh\u1eefng Board v\u00e0 th\u00e0nh vi\u00ean c\u1ee7a m\u1ed9t nh\u00f3m.\n\n\n\n\n2. H\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng\n#\n\n\n2.1. T\u1ea1o m\u1ed9t nh\u00f3m l\u00e0m vi\u1ec7c (Team)\n#\n\n\nClick v\u00e0o m\u1ee5c Create a new team s\u1ebd hi\u1ec3n th\u1ecb ra h\u1ed9p tho\u1ea1i sau:\n\n\n\n\nNh\u1eadp th\u00f4ng tin c\u1ee7a Team t\u1ea1i m\u1ee5c Name v\u00e0 th\u00f4ng tin m\u00f4 t\u1ea3 c\u1ee7a Team t\u1ea1i m\u1ee5c Description v\u00e0 nh\u1ea5n n\u00fat Creat.\nKhi t\u1ea1o xong m\u1ed9t Team ta c\u00f3 th\u1ec3 ch\u1ec9nh s\u1eeda Profile, t\u1ea1o c\u00e1c Board trong team \u0111\u00f3, add members v\u00e0 setting.\n\n\nGhi ch\u00fa: Trello h\u1ed7 tr\u1ee3 add members b\u1eb1ng nhi\u1ec1u c\u00e1ch t\u00ecm: B\u1eb1ng Account, t\u00ean, \u0111\u1ecba\nch\u1ec9 Email\u2026, do Trello \u0111\u00e3 t\u00edch h\u1ee3p v\u1edbi h\u1ec7 th\u1ed1ng Email c\u1ee7a Google n\u00ean \u0111\u1ec3\nt\u00ecm ng\u01b0\u1eddi d\u00f9ng trong tr\u01b0\u1eddng c\u1ea7n t\u00ecm b\u1eb1ng \u0111\u1ecba ch\u1ec9 Email \u0111\u1ea7y \u0111\u1ee7 s\u1ebd ch\u00ednh\nx\u00e1c. \n\n\n2.2. T\u1ea1o m\u1ed9t Board\n#\n\n\nNh\u01b0 t\u00f4i \u0111\u00e3 tr\u00ecnh b\u00e0y \u1edf tr\u00ean, Board l\u00e0 m\u1ed9t b\u1ea3ng t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi m\u1ed9t d\u1ef1 \u00e1n ho\u1eb7c m\u1ed9t m\u1ea3ng c\u00f4ng vi\u1ec7c v\u00e0 g\u1ed3m nhi\u1ec1u List.\n\n\n\u0110\u1ec3 t\u1ea1o m\u1ed9t Board trong m\u1ed9t team n\u00e0o \u0111\u00f3 ta click v\u00e0o \"Creat a new Board\" trong team \u0111\u00f3 v\u00e0 th\u1ef1c hi\u1ec7n c\u1ea5u h\u00ecnh c\u00e1c th\u00f4ng tin c\u1ee7a Board : \n\n\n\n\nT\u00ean c\u1ee7a Board\n\n\nAdd member cho Board. V\u1edbi nh\u1eefng member \u0111\u00e3 \u0111\u01b0\u1ee3c add l\u00e0 th\u00e0nh vi\u00ean c\u1ee7a Team ch\u1ee9a Board th\u00ec s\u1ebd m\u1eb7c \u0111\u1ecbnh l\u00e0 th\u00e0nh vi\u00ean trong Board.\n\n\n\n\n\u0110\u1ec3 add member ch\u1ecdn Invite -> Nh\u1eadp Email c\u1ee7a ng\u01b0\u1eddi c\u1ea7n t\u00ecm -> Ch\u1ecdn t\u00e0i kho\u1ea3n c\u1ea7n add.\n\n\n\n\n2.3. Close m\u1ed9t Board\n#\n\n\nKhi m\u1ed9t Board \u0111\u00e3 ho\u00e0n th\u00e0nh kh\u00f4ng d\u00f9ng \u0111\u1ebfn n\u1eefa th\u00ec ng\u01b0\u1eddi d\u00f9ng c\u00f3 th\u1ec3 \u0111\u00f3ng Board \u0111\u00f3 l\u1ea1i b\u1eb1ng c\u00e1ch ch\u1ecdn Close Board nh\u01b0 h\u00ecnh sau:\n\n\n\n2.4. M\u1edf l\u1ea1i m\u1ed9t Board \u0111\u00e3 \u0111\u00f3ng\n#\n\n\nClick chu\u1ed9t v\u00e0o n\u00fat Board \u1edf g\u00f3c tr\u00ean b\u00ean tr\u00e1i c\u1eeda s\u1ed5 Trello\n\n\n\n\nCh\u1ecdn m\u1ee5c See closed board -> Ch\u1ecdn Re-open t\u1ea1i Board c\u1ea7n m\u1edf l\u1ea1i\n\n\n\n\n2.5. T\u1ea1o m\u1ed9t danh s\u00e1ch c\u00e1c c\u00f4ng vi\u1ec7c (List)\n#\n\n\n\u0110\u1ec3 t\u1ea1o m\u1ed9t List ta click v\u00e0o Add List -> Nh\u1eadp t\u00ean c\u1ee7a List v\u00e0 nh\u1ea5n n\u00fat Save\n\n\n\n\nM\u1ed7i m\u1ed9t \u0111\u01a1n v\u1ecb, c\u00e1 nh\u00e2n c\u00f3 c\u00e1ch \u0111\u1eb7t t\u00ean kh\u00e1c nhau \u0111\u1ec3 qu\u1ea3n l\u00fd c\u00f4ng vi\u1ec7c t\u1ea1i c\u01a1 quan m\u00ecnh. Th\u00f4ng th\u01b0\u1eddng\nc\u00e1c list \u0111\u01b0\u1ee3c \u0111\u1eb7t t\u00ean nh\u01b0 sau:\n\n\n\n\nS\u1ebd th\u1ef1c hi\u1ec7n:\n L\u00e0 nh\u1eefng c\u00f4ng vi\u1ec7c c\u1ea7n th\u1ef1c hi\u1ec7n trong n\u0103m, kh\u00f4ng ph\u1ea3i trong th\u1eddi gian t\u1edbi.\n\n\nC\u00e2n th\u1ef1c hi\u1ec7n:\n L\u00e0 nh\u1eefng c\u00f4ng vi\u1ec7c c\u1ea7n th\u1ef1c hi\u1ec7n trong th\u1eddi gian t\u1edbi.\n\n\n\u0110ang th\u1ef1c hi\u1ec7n:\n L\u00e0 nh\u1eefng d\u1ef1 \u00e1n, c\u00f4ng vi\u1ec7c \u0111ang \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n v\u00e0 ch\u01b0a th\u1ef1c hi\u1ec7n xong.\n    Khi c\u00e1c c\u00f4ng vi\u1ec7c \u1edf ph\u1ea7n \u0111ang th\u1ef1c hi\u1ec7n \u0111\u00e3 th\u1ef1c hi\u1ec7n v\u00e0 test xong th\u00ec s\u1ebd \u0111\u01b0\u1ee3c k\u00e9o sang ph\u1ea7n \u0111\u00e3 th\u1ef1c hi\u1ec7n.\n\n\n\u0110\u00e3 th\u1ef1c hi\u1ec7n:\n L\u00e0 nh\u1eefng c\u00f4ng vi\u1ec7c \u0111\u00e3 ho\u00e0n th\u00e0nh v\u00e0 \u0111\u00e3 \u0111\u01b0\u1ee3c test.\n \n\n\n\n\nTrong m\u1ed9t List g\u1ed3m nhi\u1ec1u Card, m\u1ed7i Card l\u00e0 m\u1ed9t c\u00f4ng vi\u1ec7c ho\u1eb7c nh\u00f3m c\u00f4ng vi\u1ec7c c\u1ee5 th\u1ec3.\n\n\n2.6 T\u1ea1o vi\u1ec7c c\u1ee5 th\u1ec3 (Card)\n#\n\n\n\u0110\u1ec3 th\u00eam m\u1ed9t Card ch\u1ecdn Add Card\nNh\u1eadp t\u00ean c\u00f4ng vi\u1ec7c nh\u1ea5n n\u00fat \"Add\"\n\n\n2.6.1 Giao di\u1ec7n m\u1ed9t card nh\u01b0 sau\n#\n\n\n\n\n2.6.2 Add members\n#\n\n\n\u0110\u1ec3 Add member ta click v\u00e0o n\u00fat Members v\u00e0 nh\u1eadp \u0111\u1ecba ch\u1ec9 Email \u0111\u1ea7y \u0111\u1ee7 c\u1ee7a ng\u01b0\u1eddi c\u1ea7n t\u00ecm v\u00e0o \u00f4 Search Members, nh\u1ea5n Enter.\n\n\n1\n     Ch\u00fa \u00fd: Members c\u1ee7a card ch\u1ec9 \u0111\u01b0\u1ee3c l\u1ef1a ch\u1ecdn trong danh s\u00e1ch members c\u1ee7a Board ph\u00eda tr\u01b0\u1edbc\n\n\n\n\n\n\n2.6.3 \u0110\u1eb7t nh\u00e3n cho Card\n#\n\n\nM\u1ed7i card l\u00e0 1 c\u00f4ng vi\u1ec7c c\u1ee5 th\u1ec3, ng\u01b0\u1eddi d\u00f9ng c\u00f3 th\u1ec3 d\u00f9ng c\u00e1c nh\u00e3n \u0111\u1ec3 ph\u00e2n\nlo\u1ea1i c\u00f4ng vi\u1ec7c theo \u00fd mu\u1ed1n\n    C\u00e1ch th\u1ef1c hi\u1ec7n: Trong c\u1eeda s\u1ed5 card, ch\u1ecdn Labels, ch\u1ecdn m\u00e0u ph\u00f9 h\u1ee3p\n\n\n2.6.4 T\u1ea1o CheckList\n#\n\n\nCheck list l\u00e0 t\u1eadp h\u1ee3p c\u00e1c vi\u1ec7c nh\u1ecf trong 1 c\u00f4ng vi\u1ec7c (card), m\u1ed7i vi\u1ec7c nh\u1ecf trong\ncheck list \u0111\u01b0\u1ee3c t\u1ea1o ra cho ph\u00e9p ng\u01b0\u1eddi d\u00f9ng \u0111\u00e1nh d\u1ea5u \u0111\u00e3 ho\u00e0n th\u00e0nh ho\u1eb7c ch\u01b0a ho\u00e0n th\u00e0nh.\n\n\nC\u00e1ch th\u1ef1c hi\u1ec7n:\n\n\n\n\nClick v\u00e0o n\u00fat Check list\n\n\n\u0110i\u1ec1n t\u00ean check list v\u00e0o \u00f4 Title\n\n\nClick Add\n\n\n\n\n \n\n\n2.6.5 T\u1ea1o c\u00f4ng vi\u1ec7c trong Checklist\n#\n\n\n\n\nNh\u1eadp t\u00ean c\u00f4ng vi\u1ec7c trong ph\u1ea7n Add Item ph\u00eda d\u01b0\u1edbi c\u1ee7a CheckList \u0111\u00e3 t\u1ea1o v\u00e0 nh\u1ea5n Add\n\n \n\n\nKhi c\u00f4ng vi\u1ec7c ho\u00e0n th\u00e0nh t\u00edch v\u00e0o \u00f4 vu\u00f4ng \u0111\u1ec3 \u0111\u00e1nh d\u1ea5u c\u00f4ng vi\u1ec7c \u0111\u00e3 ho\u00e0n th\u00e0nh.\n\n\n\n\n\n\n2.6.6 \u0110\u1eb7t deadline cho card\n#\n\n\n\n\nClick v\u00e0o Due date\n\n\nCh\u1ecdn ng\u00e0y deadline\n\n\nClick Save\n\n\n\n\n2.6.7 \u0110\u00ednh k\u00e8m t\u00e0i li\u1ec7u cho Card\n#\n\n\nNg\u01b0\u1eddi d\u00f9ng c\u00f3 th\u1ec3 \u0111\u00ednh k\u00e8m t\u00e0i li\u1ec7u l\u00e0 c\u00e1c file text, \u1ea3nh, pdf\u2026 cho card\nb\u1eb1ng c\u00e1ch click v\u00e0o n\u00fat Attachment",
            "title": "Trello"
        },
        {
            "location": "/software_dev/trello/#1-gioi-thieu-ve-trello",
            "text": "Trello l\u00e0 c\u00f4ng c\u1ee5 qu\u1ea3n l\u00fd c\u00f4ng vi\u1ec7c r\u1ea5t hi\u1ec7u qu\u1ea3 m\u00e0 nhi\u1ec1u t\u1ed5 ch\u1ee9c c\u00e1 nh\u00e2n \u0111ang s\u1eed  d\u1ee5ng.\nTrello g\u1ed3m c\u00f3 phi\u00ean b\u1ea3n mi\u1ec5n ph\u00ed v\u00e0 tr\u1ea3 ph\u00ed.  Trello g\u1ed3m c\u00e1c th\u00e0nh ph\u1ea7n c\u01a1 b\u1ea3n sau:   Card:  L\u00e0 th\u1ebb th\u00f4ng tin c\u00f3 Ti\u00eau \u0111\u1ec1, M\u00f4 t\u1ea3 d\u00f9ng \u0111\u1ec3 l\u01b0u tr\u1eef c\u00f4ng vi\u1ec7c. M\u1ed9t Card c\u00f3 th\u1ec3 d\u00f9ng \u0111\u1ec3 ghi c\u00f4ng vi\u1ec7c, t\u00ednh n\u0103ng s\u1ea3n ph\u1ea9m, c\u00e2u h\u1ecfi, ghi ch\u00fa,\u2026 t\u00f9y c\u00e1ch s\u1eed d\u1ee5ng. M\u1ed7i Card s\u1ebd c\u00f3 danh s\u00e1ch \u0111\u1ec3 b\u1ea1n chia nh\u1eefng th\u00f4ng tin \u0111\u1ea7u vi\u1ec7c nh\u1ecf h\u01a1n. M\u1ed7i Card c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c b\u00ecnh lu\u1eadn, \u0111\u00ednh k\u00e8m c\u00e1c t\u1ec7p,\nh\u00ecnh \u1ea3nh tr\u00ean \u0111\u00f3 \u0111\u1ec3 ph\u1ee5c v\u1ee5 cho vi\u1ec7c trao \u0111\u1ed5i gi\u1eefa c\u00e1c th\u00e0nh vi\u00ean.  List:  L\u00e0 m\u1ed9t danh s\u00e1ch t\u1ed5ng h\u1ee3p c\u00e1c Card thu\u1ed9c chung m\u1ed9t t\u00ecnh tr\u1ea1ng\nho\u1eb7c m\u1ed9t t\u00ednh ch\u1ea5t kh\u00e1c nhau. V\u00ed d\u1ee5: List Doing bao g\u1ed3m nh\u1eefng card\n\u0111ang \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n. List Done ch\u1ee9a nh\u1eefng card \u0111\u00e3 ho\u00e0n th\u00e0nh.  Board :   L\u00e0 m\u1ed9t b\u1ea3ng, th\u01b0\u1eddng t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi m\u1ed9t d\u1ef1 \u00e1n ho\u1eb7c m\u1ed9t m\u1ea3ng\nc\u00f4ng vi\u1ec7c. Trong m\u1ed9t Board c\u00f3 th\u1ec3 c\u00f3 nhi\u1ec1u List chia theo t\u00ecnh tr\u1ea1ng c\u1ee7a\nnh\u1eefng \u0111\u1ea7u vi\u1ec7c c\u1ee7a d\u1ef1 \u00e1n \u0111\u00f3 \u0111\u1ec3 ti\u1ec7n theo d\u00f5i.  Team:  t\u1ed5ng h\u1ee3p nh\u1eefng Board v\u00e0 th\u00e0nh vi\u00ean c\u1ee7a m\u1ed9t nh\u00f3m.",
            "title": "1. Gi\u1edbi thi\u1ec7u v\u1ec1 trello"
        },
        {
            "location": "/software_dev/trello/#2-huong-dan-su-dung",
            "text": "",
            "title": "2. H\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng"
        },
        {
            "location": "/software_dev/trello/#21-tao-mot-nhom-lam-viec-team",
            "text": "Click v\u00e0o m\u1ee5c Create a new team s\u1ebd hi\u1ec3n th\u1ecb ra h\u1ed9p tho\u1ea1i sau:   Nh\u1eadp th\u00f4ng tin c\u1ee7a Team t\u1ea1i m\u1ee5c Name v\u00e0 th\u00f4ng tin m\u00f4 t\u1ea3 c\u1ee7a Team t\u1ea1i m\u1ee5c Description v\u00e0 nh\u1ea5n n\u00fat Creat.\nKhi t\u1ea1o xong m\u1ed9t Team ta c\u00f3 th\u1ec3 ch\u1ec9nh s\u1eeda Profile, t\u1ea1o c\u00e1c Board trong team \u0111\u00f3, add members v\u00e0 setting.  Ghi ch\u00fa: Trello h\u1ed7 tr\u1ee3 add members b\u1eb1ng nhi\u1ec1u c\u00e1ch t\u00ecm: B\u1eb1ng Account, t\u00ean, \u0111\u1ecba\nch\u1ec9 Email\u2026, do Trello \u0111\u00e3 t\u00edch h\u1ee3p v\u1edbi h\u1ec7 th\u1ed1ng Email c\u1ee7a Google n\u00ean \u0111\u1ec3\nt\u00ecm ng\u01b0\u1eddi d\u00f9ng trong tr\u01b0\u1eddng c\u1ea7n t\u00ecm b\u1eb1ng \u0111\u1ecba ch\u1ec9 Email \u0111\u1ea7y \u0111\u1ee7 s\u1ebd ch\u00ednh\nx\u00e1c.",
            "title": "2.1. T\u1ea1o m\u1ed9t nh\u00f3m l\u00e0m vi\u1ec7c (Team)"
        },
        {
            "location": "/software_dev/trello/#22-tao-mot-board",
            "text": "Nh\u01b0 t\u00f4i \u0111\u00e3 tr\u00ecnh b\u00e0y \u1edf tr\u00ean, Board l\u00e0 m\u1ed9t b\u1ea3ng t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi m\u1ed9t d\u1ef1 \u00e1n ho\u1eb7c m\u1ed9t m\u1ea3ng c\u00f4ng vi\u1ec7c v\u00e0 g\u1ed3m nhi\u1ec1u List.  \u0110\u1ec3 t\u1ea1o m\u1ed9t Board trong m\u1ed9t team n\u00e0o \u0111\u00f3 ta click v\u00e0o \"Creat a new Board\" trong team \u0111\u00f3 v\u00e0 th\u1ef1c hi\u1ec7n c\u1ea5u h\u00ecnh c\u00e1c th\u00f4ng tin c\u1ee7a Board :    T\u00ean c\u1ee7a Board  Add member cho Board. V\u1edbi nh\u1eefng member \u0111\u00e3 \u0111\u01b0\u1ee3c add l\u00e0 th\u00e0nh vi\u00ean c\u1ee7a Team ch\u1ee9a Board th\u00ec s\u1ebd m\u1eb7c \u0111\u1ecbnh l\u00e0 th\u00e0nh vi\u00ean trong Board.   \u0110\u1ec3 add member ch\u1ecdn Invite -> Nh\u1eadp Email c\u1ee7a ng\u01b0\u1eddi c\u1ea7n t\u00ecm -> Ch\u1ecdn t\u00e0i kho\u1ea3n c\u1ea7n add.",
            "title": "2.2. T\u1ea1o m\u1ed9t Board"
        },
        {
            "location": "/software_dev/trello/#23-close-mot-board",
            "text": "Khi m\u1ed9t Board \u0111\u00e3 ho\u00e0n th\u00e0nh kh\u00f4ng d\u00f9ng \u0111\u1ebfn n\u1eefa th\u00ec ng\u01b0\u1eddi d\u00f9ng c\u00f3 th\u1ec3 \u0111\u00f3ng Board \u0111\u00f3 l\u1ea1i b\u1eb1ng c\u00e1ch ch\u1ecdn Close Board nh\u01b0 h\u00ecnh sau:",
            "title": "2.3. Close m\u1ed9t Board"
        },
        {
            "location": "/software_dev/trello/#24-mo-lai-mot-board-a-ong",
            "text": "Click chu\u1ed9t v\u00e0o n\u00fat Board \u1edf g\u00f3c tr\u00ean b\u00ean tr\u00e1i c\u1eeda s\u1ed5 Trello   Ch\u1ecdn m\u1ee5c See closed board -> Ch\u1ecdn Re-open t\u1ea1i Board c\u1ea7n m\u1edf l\u1ea1i",
            "title": "2.4. M\u1edf l\u1ea1i m\u1ed9t Board \u0111\u00e3 \u0111\u00f3ng"
        },
        {
            "location": "/software_dev/trello/#25-tao-mot-danh-sach-cac-cong-viec-list",
            "text": "\u0110\u1ec3 t\u1ea1o m\u1ed9t List ta click v\u00e0o Add List -> Nh\u1eadp t\u00ean c\u1ee7a List v\u00e0 nh\u1ea5n n\u00fat Save   M\u1ed7i m\u1ed9t \u0111\u01a1n v\u1ecb, c\u00e1 nh\u00e2n c\u00f3 c\u00e1ch \u0111\u1eb7t t\u00ean kh\u00e1c nhau \u0111\u1ec3 qu\u1ea3n l\u00fd c\u00f4ng vi\u1ec7c t\u1ea1i c\u01a1 quan m\u00ecnh. Th\u00f4ng th\u01b0\u1eddng\nc\u00e1c list \u0111\u01b0\u1ee3c \u0111\u1eb7t t\u00ean nh\u01b0 sau:   S\u1ebd th\u1ef1c hi\u1ec7n:  L\u00e0 nh\u1eefng c\u00f4ng vi\u1ec7c c\u1ea7n th\u1ef1c hi\u1ec7n trong n\u0103m, kh\u00f4ng ph\u1ea3i trong th\u1eddi gian t\u1edbi.  C\u00e2n th\u1ef1c hi\u1ec7n:  L\u00e0 nh\u1eefng c\u00f4ng vi\u1ec7c c\u1ea7n th\u1ef1c hi\u1ec7n trong th\u1eddi gian t\u1edbi.  \u0110ang th\u1ef1c hi\u1ec7n:  L\u00e0 nh\u1eefng d\u1ef1 \u00e1n, c\u00f4ng vi\u1ec7c \u0111ang \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n v\u00e0 ch\u01b0a th\u1ef1c hi\u1ec7n xong.\n    Khi c\u00e1c c\u00f4ng vi\u1ec7c \u1edf ph\u1ea7n \u0111ang th\u1ef1c hi\u1ec7n \u0111\u00e3 th\u1ef1c hi\u1ec7n v\u00e0 test xong th\u00ec s\u1ebd \u0111\u01b0\u1ee3c k\u00e9o sang ph\u1ea7n \u0111\u00e3 th\u1ef1c hi\u1ec7n.  \u0110\u00e3 th\u1ef1c hi\u1ec7n:  L\u00e0 nh\u1eefng c\u00f4ng vi\u1ec7c \u0111\u00e3 ho\u00e0n th\u00e0nh v\u00e0 \u0111\u00e3 \u0111\u01b0\u1ee3c test.\n    Trong m\u1ed9t List g\u1ed3m nhi\u1ec1u Card, m\u1ed7i Card l\u00e0 m\u1ed9t c\u00f4ng vi\u1ec7c ho\u1eb7c nh\u00f3m c\u00f4ng vi\u1ec7c c\u1ee5 th\u1ec3.",
            "title": "2.5. T\u1ea1o m\u1ed9t danh s\u00e1ch c\u00e1c c\u00f4ng vi\u1ec7c (List)"
        },
        {
            "location": "/software_dev/trello/#26-tao-viec-cu-the-card",
            "text": "\u0110\u1ec3 th\u00eam m\u1ed9t Card ch\u1ecdn Add Card\nNh\u1eadp t\u00ean c\u00f4ng vi\u1ec7c nh\u1ea5n n\u00fat \"Add\"",
            "title": "2.6 T\u1ea1o vi\u1ec7c c\u1ee5 th\u1ec3 (Card)"
        },
        {
            "location": "/software_dev/trello/#261-giao-dien-mot-card-nhu-sau",
            "text": "",
            "title": "2.6.1 Giao di\u1ec7n m\u1ed9t card nh\u01b0 sau"
        },
        {
            "location": "/software_dev/trello/#262-add-members",
            "text": "\u0110\u1ec3 Add member ta click v\u00e0o n\u00fat Members v\u00e0 nh\u1eadp \u0111\u1ecba ch\u1ec9 Email \u0111\u1ea7y \u0111\u1ee7 c\u1ee7a ng\u01b0\u1eddi c\u1ea7n t\u00ecm v\u00e0o \u00f4 Search Members, nh\u1ea5n Enter.  1      Ch\u00fa \u00fd: Members c\u1ee7a card ch\u1ec9 \u0111\u01b0\u1ee3c l\u1ef1a ch\u1ecdn trong danh s\u00e1ch members c\u1ee7a Board ph\u00eda tr\u01b0\u1edbc",
            "title": "2.6.2 Add members"
        },
        {
            "location": "/software_dev/trello/#263-at-nhan-cho-card",
            "text": "M\u1ed7i card l\u00e0 1 c\u00f4ng vi\u1ec7c c\u1ee5 th\u1ec3, ng\u01b0\u1eddi d\u00f9ng c\u00f3 th\u1ec3 d\u00f9ng c\u00e1c nh\u00e3n \u0111\u1ec3 ph\u00e2n\nlo\u1ea1i c\u00f4ng vi\u1ec7c theo \u00fd mu\u1ed1n\n    C\u00e1ch th\u1ef1c hi\u1ec7n: Trong c\u1eeda s\u1ed5 card, ch\u1ecdn Labels, ch\u1ecdn m\u00e0u ph\u00f9 h\u1ee3p",
            "title": "2.6.3 \u0110\u1eb7t nh\u00e3n cho Card"
        },
        {
            "location": "/software_dev/trello/#264-tao-checklist",
            "text": "Check list l\u00e0 t\u1eadp h\u1ee3p c\u00e1c vi\u1ec7c nh\u1ecf trong 1 c\u00f4ng vi\u1ec7c (card), m\u1ed7i vi\u1ec7c nh\u1ecf trong\ncheck list \u0111\u01b0\u1ee3c t\u1ea1o ra cho ph\u00e9p ng\u01b0\u1eddi d\u00f9ng \u0111\u00e1nh d\u1ea5u \u0111\u00e3 ho\u00e0n th\u00e0nh ho\u1eb7c ch\u01b0a ho\u00e0n th\u00e0nh.  C\u00e1ch th\u1ef1c hi\u1ec7n:   Click v\u00e0o n\u00fat Check list  \u0110i\u1ec1n t\u00ean check list v\u00e0o \u00f4 Title  Click Add",
            "title": "2.6.4 T\u1ea1o CheckList"
        },
        {
            "location": "/software_dev/trello/#265-tao-cong-viec-trong-checklist",
            "text": "Nh\u1eadp t\u00ean c\u00f4ng vi\u1ec7c trong ph\u1ea7n Add Item ph\u00eda d\u01b0\u1edbi c\u1ee7a CheckList \u0111\u00e3 t\u1ea1o v\u00e0 nh\u1ea5n Add    Khi c\u00f4ng vi\u1ec7c ho\u00e0n th\u00e0nh t\u00edch v\u00e0o \u00f4 vu\u00f4ng \u0111\u1ec3 \u0111\u00e1nh d\u1ea5u c\u00f4ng vi\u1ec7c \u0111\u00e3 ho\u00e0n th\u00e0nh.",
            "title": "2.6.5 T\u1ea1o c\u00f4ng vi\u1ec7c trong Checklist"
        },
        {
            "location": "/software_dev/trello/#266-at-deadline-cho-card",
            "text": "Click v\u00e0o Due date  Ch\u1ecdn ng\u00e0y deadline  Click Save",
            "title": "2.6.6 \u0110\u1eb7t deadline cho card"
        },
        {
            "location": "/software_dev/trello/#267-inh-kem-tai-lieu-cho-card",
            "text": "Ng\u01b0\u1eddi d\u00f9ng c\u00f3 th\u1ec3 \u0111\u00ednh k\u00e8m t\u00e0i li\u1ec7u l\u00e0 c\u00e1c file text, \u1ea3nh, pdf\u2026 cho card\nb\u1eb1ng c\u00e1ch click v\u00e0o n\u00fat Attachment",
            "title": "2.6.7 \u0110\u00ednh k\u00e8m t\u00e0i li\u1ec7u cho Card"
        },
        {
            "location": "/software_dev/svn/",
            "text": "1. Gi\u1edbi thi\u1ec7u\n#\n\n\nTortoise SVN l\u00e0 m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh SVN Client n\u00f3 \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t t\u1ea1i c\u00e1c m\u00e1y t\u00ednh c\u1ee7a c\u00e1c th\u00e0nh vi\u00ean trong m\u1ed9t nh\u00f3m, gi\u00fap d\u1ec5 d\u00e0ng chia s\u1ebb d\u1eef li\u1ec7u l\u00ean SVN Server v\u00e0 l\u1ea5y d\u1eef li\u1ec7u v\u1ec1 t\u1eeb SVN Server.\n\n\n2. H\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng\n#\n\n\n2.1 Import d\u1eef li\u1ec7u t\u1eeb m\u00e1y client l\u00ean SVN Repository\n#\n\n\nB1: Nh\u1ea5n ph\u1ea3i chu\u1ed9t v\u00e0o th\u01b0 m\u1ee5c c\u1ea7n Import, ch\u1ecdn TortoiseSVN -> Import\n\n\n\n\nB2: M\u00e0n h\u00ecnh hi\u1ec7n ra nh\u01b0 sau\n\n\n\n\nB3: Ch\u1ecdn \u0111\u01b0\u1eddng d\u1eabn l\u01b0u d\u1eef li\u1ec7u \u1edf m\u00e1y ch\u1ee7 t\u1ea1i URL of repository -> Ch\u1ecdn OK\n\n\nC\u00e1ch 2: M\u1edf SVN\n\n\n\n\n\u0110\u1ec3 import d\u1eef li\u1ec7u t\u1eeb client l\u00ean SVN server, m\u1edf SVN -> Ch\u1ecdn th\u01b0 m\u1ee5c s\u1ebd l\u01b0u d\u1eef li\u1ec7u c\u1ea7n \u0111\u01b0a l\u00ean -> Nh\u1ea5n ph\u1ea3i chu\u1ed9t -> Add file (N\u1ebfu mu\u1ed1n th\u00eam m\u1ed9t file)  ho\u1eb7c ch\u1ecdn Add folder n\u1ebfu mu\u1ed1n import c\u1ea3 m\u1ed9t th\u01b0 m\u1ee5c.\n\n\n2.2 L\u1ea5y d\u1eef li\u1ec7u t\u1eeb SVN Repository v\u1ec1 m\u00e1y t\u00ednh (checkout)\n#\n\n\nNh\u1ea5n ph\u1ea3i chu\u1ed9t v\u00e0o th\u01b0 m\u1ee5c ho\u1eb7c file c\u1ea7n l\u1ea5y d\u1eef li\u1ec7u v\u1ec1 -> Checkout\n\n\n\nM\u00e0n h\u00ecnh xu\u1ea5t hi\u1ec7n nh\u01b0 sau:\n\n\n\n\nCheckout directory: N\u01a1i ch\u1ee9a d\u1eef li\u1ec7u s\u1ebd l\u1ea5y v\u1ec1 t\u1ea1i m\u00e1y client.\n\n\n2.3 Commit v\u00e0 Update\n#\n\n\nCheckout l\u00e0 h\u00e0nh \u0111\u1ed9ng l\u1ea5y to\u00e0n b\u1ed9 d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c chia s\u1ebb tr\u00ean SVN Repository xu\u1ed1ng m\u00e1y client l\u1ea7n \u0111\u1ea7u ti\u00ean. Sau \u0111\u00f3 d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c s\u1eeda \u0111\u1ed5i t\u1ea1i m\u00e1y client. Vi\u1ec7c \u0111\u01b0a d\u1eef li\u1ec7u \u0111\u00e3 thay \u0111\u1ed5i l\u00ean SVN Repository \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 Commit. V\u00e0 vi\u1ec7c c\u1eadp nh\u1eadp c\u00e1c d\u1eef li\u1ec7u \u0111\u00e3 thay \u0111\u1ed5i v\u1ec1 l\u00e0 h\u00e0nh \u0111\u1ed9ng Update.\n\n\nB\u00e2y gi\u1edd ch\u00fang ta s\u1ebd s\u1eeda (ho\u1eb7c th\u00eam) file tr\u00ean c\u00e1c th\u01b0 m\u1ee5c r\u1ed3i Commit l\u00ean.V\u00ed d\u1ee5 t\u00f4i thay \u0111\u1ed5i file TeamNote.txt v\u00e0 l\u01b0u l\u1ea1i, khi \u0111\u00f3 bi\u1ec3u t\u01b0\u1ee3ng SVN c\u1ee7a file n\u00e0y thay \u0111\u1ed5i, th\u00f4ng b\u00e1o r\u1eb1ng file n\u00e0y \u0111\u00e3 b\u1ecb s\u1eeda \u0111\u1ed5i.\n\n\n\n\n\u0110\u1ec3 Commit d\u1eef li\u1ec7u l\u00ean SVN Repository, nh\u1ea5n ph\u1ea3i chu\u1ed9t v\u00e0o file ho\u1eb7c th\u01b0 m\u1ee5c c\u1ea7n Commit, ch\u1ecdn SVN Commit..\n\n\n\n\nCheck ch\u1ecdn c\u00e1c file c\u1ea7n commit tr\u00ean danh s\u00e1ch.\n- M\u1eb7c \u0111\u1ecbnh Tortoise SVN t\u1ef1 \u0111\u1ed9ng check v\u00e0o c\u00e1c file c\u00f3 s\u1eeda \u0111\u1ed5i.\n- T\u00edch ch\u1ecdn file c\u1ea7n l\u01b0u s\u1ef1 thay \u0111\u1ed5i l\u00ean SVN Repository -> OK\n\n\n\n\nUpdate:\n\nTh\u00e0nh vi\u00ean kh\u00e1c trong nh\u00f3m c\u00f3 th\u1ec3 Update (c\u1eadp nh\u1eadp) c\u00e1c d\u1eef li\u1ec7u m\u1edbi nh\u1ea5t t\u1eeb SVN Repository\nCh\u1ecdn th\u01b0 m\u1ee5c c\u1ea7n update -> Nh\u1ea5n ph\u1ea3i chu\u1ed9t -> Update.\n\n\n\n\n2.4 Tr\u1ea3 l\u1ea1i d\u1eef li\u1ec7u tr\u01b0\u1edbc khi ch\u1ec9nh s\u1eeda \u2013 Ch\u1ee9c n\u0103ng revert\n#\n\n\nCh\u1ecdn file ho\u0103c th\u01b0 m\u1ee5c c\u1ea7n quay l\u1ea1i d\u1eef li\u1ec7u tr\u01b0\u1edbc khi ch\u1ec9nh s\u1eeda, ch\u1ecdn TortoiseSVN-> Revert\n\n\n\n\n2.5 M\u1ed9t s\u1ed1 l\u1ed7i th\u01b0\u1eddng g\u1eb7p khi d\u00f9ng svn\n#\n\n\nL\u1ed7i out of date\n \n\n\nL\u1ed7i n\u00e0y x\u1ea3y ra khi c\u00f9ng m\u1ed9t t\u00e0i li\u1ec7u c\u00f3 m\u1ed9t ai \u0111\u00f3 \u0111\u00e3 s\u1eeda v\u00e0 commit l\u00ean SVN v\u00e0 b\u1ea1n l\u1ea1i ti\u1ebfp t\u1ee5c commit l\u00ean SVN m\u00e0 ch\u01b0a update v\u1ec1.  Trong tr\u01b0\u1eddng h\u1ee3p \u0111\u00f3 b\u1ea1n ph\u1ea3i s\u1eed d\u1ee5ng ch\u1ee9c n\u0103ng Update tr\u01b0\u1edbc khi Commit l\u00ean.\n\n\n\n\nTrong tr\u01b0\u1eddng h\u1ee3p n\u00e0y SVN g\u1ee3i \u00fd ch\u00fang ta c\u1ea7n Update tr\u01b0\u1edbc khi Commit\n\n\n\n\nL\u1ed7i khi Update\n \nL\u1ed7i th\u01b0\u1eddng g\u1eb7p ph\u1ea3i khi update d\u1eef li\u1ec7u l\u00e0 l\u1ed7i Conflict : L\u1ed7i n\u00e0y x\u1ea3y ra khi c\u00f3 s\u1ef1 xung \u0111\u1ed9t t\u00e0i li\u1ec7u gi\u1eefa phi\u00ean b\u1ea3n tr\u00ean m\u00e1y v\u00e0 tr\u00ean server.",
            "title": "Svn"
        },
        {
            "location": "/software_dev/svn/#1-gioi-thieu",
            "text": "Tortoise SVN l\u00e0 m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh SVN Client n\u00f3 \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t t\u1ea1i c\u00e1c m\u00e1y t\u00ednh c\u1ee7a c\u00e1c th\u00e0nh vi\u00ean trong m\u1ed9t nh\u00f3m, gi\u00fap d\u1ec5 d\u00e0ng chia s\u1ebb d\u1eef li\u1ec7u l\u00ean SVN Server v\u00e0 l\u1ea5y d\u1eef li\u1ec7u v\u1ec1 t\u1eeb SVN Server.",
            "title": "1. Gi\u1edbi thi\u1ec7u"
        },
        {
            "location": "/software_dev/svn/#2-huong-dan-su-dung",
            "text": "",
            "title": "2. H\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng"
        },
        {
            "location": "/software_dev/svn/#21-import-du-lieu-tu-may-client-len-svn-repository",
            "text": "B1: Nh\u1ea5n ph\u1ea3i chu\u1ed9t v\u00e0o th\u01b0 m\u1ee5c c\u1ea7n Import, ch\u1ecdn TortoiseSVN -> Import   B2: M\u00e0n h\u00ecnh hi\u1ec7n ra nh\u01b0 sau   B3: Ch\u1ecdn \u0111\u01b0\u1eddng d\u1eabn l\u01b0u d\u1eef li\u1ec7u \u1edf m\u00e1y ch\u1ee7 t\u1ea1i URL of repository -> Ch\u1ecdn OK  C\u00e1ch 2: M\u1edf SVN   \u0110\u1ec3 import d\u1eef li\u1ec7u t\u1eeb client l\u00ean SVN server, m\u1edf SVN -> Ch\u1ecdn th\u01b0 m\u1ee5c s\u1ebd l\u01b0u d\u1eef li\u1ec7u c\u1ea7n \u0111\u01b0a l\u00ean -> Nh\u1ea5n ph\u1ea3i chu\u1ed9t -> Add file (N\u1ebfu mu\u1ed1n th\u00eam m\u1ed9t file)  ho\u1eb7c ch\u1ecdn Add folder n\u1ebfu mu\u1ed1n import c\u1ea3 m\u1ed9t th\u01b0 m\u1ee5c.",
            "title": "2.1 Import d\u1eef li\u1ec7u t\u1eeb m\u00e1y client l\u00ean SVN Repository"
        },
        {
            "location": "/software_dev/svn/#22-lay-du-lieu-tu-svn-repository-ve-may-tinh-checkout",
            "text": "Nh\u1ea5n ph\u1ea3i chu\u1ed9t v\u00e0o th\u01b0 m\u1ee5c ho\u1eb7c file c\u1ea7n l\u1ea5y d\u1eef li\u1ec7u v\u1ec1 -> Checkout  M\u00e0n h\u00ecnh xu\u1ea5t hi\u1ec7n nh\u01b0 sau:   Checkout directory: N\u01a1i ch\u1ee9a d\u1eef li\u1ec7u s\u1ebd l\u1ea5y v\u1ec1 t\u1ea1i m\u00e1y client.",
            "title": "2.2 L\u1ea5y d\u1eef li\u1ec7u t\u1eeb SVN Repository v\u1ec1 m\u00e1y t\u00ednh (checkout)"
        },
        {
            "location": "/software_dev/svn/#23-commit-va-update",
            "text": "Checkout l\u00e0 h\u00e0nh \u0111\u1ed9ng l\u1ea5y to\u00e0n b\u1ed9 d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c chia s\u1ebb tr\u00ean SVN Repository xu\u1ed1ng m\u00e1y client l\u1ea7n \u0111\u1ea7u ti\u00ean. Sau \u0111\u00f3 d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c s\u1eeda \u0111\u1ed5i t\u1ea1i m\u00e1y client. Vi\u1ec7c \u0111\u01b0a d\u1eef li\u1ec7u \u0111\u00e3 thay \u0111\u1ed5i l\u00ean SVN Repository \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 Commit. V\u00e0 vi\u1ec7c c\u1eadp nh\u1eadp c\u00e1c d\u1eef li\u1ec7u \u0111\u00e3 thay \u0111\u1ed5i v\u1ec1 l\u00e0 h\u00e0nh \u0111\u1ed9ng Update.  B\u00e2y gi\u1edd ch\u00fang ta s\u1ebd s\u1eeda (ho\u1eb7c th\u00eam) file tr\u00ean c\u00e1c th\u01b0 m\u1ee5c r\u1ed3i Commit l\u00ean.V\u00ed d\u1ee5 t\u00f4i thay \u0111\u1ed5i file TeamNote.txt v\u00e0 l\u01b0u l\u1ea1i, khi \u0111\u00f3 bi\u1ec3u t\u01b0\u1ee3ng SVN c\u1ee7a file n\u00e0y thay \u0111\u1ed5i, th\u00f4ng b\u00e1o r\u1eb1ng file n\u00e0y \u0111\u00e3 b\u1ecb s\u1eeda \u0111\u1ed5i.   \u0110\u1ec3 Commit d\u1eef li\u1ec7u l\u00ean SVN Repository, nh\u1ea5n ph\u1ea3i chu\u1ed9t v\u00e0o file ho\u1eb7c th\u01b0 m\u1ee5c c\u1ea7n Commit, ch\u1ecdn SVN Commit..   Check ch\u1ecdn c\u00e1c file c\u1ea7n commit tr\u00ean danh s\u00e1ch.\n- M\u1eb7c \u0111\u1ecbnh Tortoise SVN t\u1ef1 \u0111\u1ed9ng check v\u00e0o c\u00e1c file c\u00f3 s\u1eeda \u0111\u1ed5i.\n- T\u00edch ch\u1ecdn file c\u1ea7n l\u01b0u s\u1ef1 thay \u0111\u1ed5i l\u00ean SVN Repository -> OK   Update: \nTh\u00e0nh vi\u00ean kh\u00e1c trong nh\u00f3m c\u00f3 th\u1ec3 Update (c\u1eadp nh\u1eadp) c\u00e1c d\u1eef li\u1ec7u m\u1edbi nh\u1ea5t t\u1eeb SVN Repository\nCh\u1ecdn th\u01b0 m\u1ee5c c\u1ea7n update -> Nh\u1ea5n ph\u1ea3i chu\u1ed9t -> Update.",
            "title": "2.3 Commit v\u00e0 Update"
        },
        {
            "location": "/software_dev/svn/#24-tra-lai-du-lieu-truoc-khi-chinh-sua-chuc-nang-revert",
            "text": "Ch\u1ecdn file ho\u0103c th\u01b0 m\u1ee5c c\u1ea7n quay l\u1ea1i d\u1eef li\u1ec7u tr\u01b0\u1edbc khi ch\u1ec9nh s\u1eeda, ch\u1ecdn TortoiseSVN-> Revert",
            "title": "2.4 Tr\u1ea3 l\u1ea1i d\u1eef li\u1ec7u tr\u01b0\u1edbc khi ch\u1ec9nh s\u1eeda \u2013 Ch\u1ee9c n\u0103ng revert"
        },
        {
            "location": "/software_dev/svn/#25-mot-so-loi-thuong-gap-khi-dung-svn",
            "text": "L\u1ed7i out of date    L\u1ed7i n\u00e0y x\u1ea3y ra khi c\u00f9ng m\u1ed9t t\u00e0i li\u1ec7u c\u00f3 m\u1ed9t ai \u0111\u00f3 \u0111\u00e3 s\u1eeda v\u00e0 commit l\u00ean SVN v\u00e0 b\u1ea1n l\u1ea1i ti\u1ebfp t\u1ee5c commit l\u00ean SVN m\u00e0 ch\u01b0a update v\u1ec1.  Trong tr\u01b0\u1eddng h\u1ee3p \u0111\u00f3 b\u1ea1n ph\u1ea3i s\u1eed d\u1ee5ng ch\u1ee9c n\u0103ng Update tr\u01b0\u1edbc khi Commit l\u00ean.   Trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y SVN g\u1ee3i \u00fd ch\u00fang ta c\u1ea7n Update tr\u01b0\u1edbc khi Commit   L\u1ed7i khi Update  \nL\u1ed7i th\u01b0\u1eddng g\u1eb7p ph\u1ea3i khi update d\u1eef li\u1ec7u l\u00e0 l\u1ed7i Conflict : L\u1ed7i n\u00e0y x\u1ea3y ra khi c\u00f3 s\u1ef1 xung \u0111\u1ed9t t\u00e0i li\u1ec7u gi\u1eefa phi\u00ean b\u1ea3n tr\u00ean m\u00e1y v\u00e0 tr\u00ean server.",
            "title": "2.5 M\u1ed9t s\u1ed1 l\u1ed7i th\u01b0\u1eddng g\u1eb7p khi d\u00f9ng svn"
        },
        {
            "location": "/software_dev/Outlook/",
            "text": "H\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng\n#\n\n\nH\u01b0\u1edbng d\u1eabn c\u1ea5u h\u00ecnh Outlook 2007\n#\n\n\n\u0110\u1ec3 s\u1eed d\u1ee5ng Microsoft Office Outlook 2007 b\u1ea1n ph\u1ea3i c\u00e0i b\u1ed9 Microsoft Office 2007\n\nB\u01b0\u1edbc 1: M\u1edf Microsoft Office Outlook 2007\n\n\nB\u01b0\u1edbc 2: Ch\u1ecdn Tool -> Account Settings\u2026 \n\n\n\n\nXu\u1ea5t hi\u1ec7n m\u00e0n h\u00ecnh sau:\n\n\n\n\nB\u01b0\u1edbc 3: \u1ede tab  \u201cE-mail\u201d, nh\u1ea5n n\u00fat \u201cNew\u201d, xu\u1ea5t hi\u1ec7n m\u00e0n h\u00ecnh: \n\n\n\n\nB\u01b0\u1edbc 4: Click n\u00fat \u201cNext\u201d:\n\n\n\n\nB\u01b0\u1edbc 5: Kh\u00f4ng nh\u1eadp th\u00f4ng tin, ch\u1ec9 check v\u00e0o \u00f4 Manually configure server settings or additional server types v\u00e0 nh\u1ea5n \u201cNext\u201d:\n\n\n\n\nB\u01b0\u1edbc 6: Ch\u1ecdn Internet Email Ti\u1ebfp t\u1ee5c click n\u00fat \u201cNext\u201d, xu\u1ea5t hi\u1ec7n m\u00e0n h\u00ecnh sau: \n\n\n\n\nB\u01b0\u1edbc 7: Nh\u1eadp th\u00f4ng tin cho m\u00e0n h\u00ecnh \u1edf b\u01b0\u1edbc 6:\n* Your Name: Nh\u1eadp H\u1ecd v\u00e0 T\u00ean\n* E-mail Address: \u0110\u1ecba ch\u1ec9 email \u0111\u01b0\u1ee3c qu\u1ea3n tr\u1ecb c\u1ea5p. V\u00ed d\u1ee5: \nbichdn@efy.com.vn\n\n* Account Type: Ch\u1ecdn POP3\n* Incoming mail server: \u0110\u1ecba ch\u1ec9 m\u00e1y ch\u1ee7 g\u1eedi email ( pop.gmail.com)\n* Outgoing mail server (SMTP): \u0110\u1ecba ch\u1ec9 m\u00e1y ch\u1ee7 nh\u1eadn email ( smtp.gmail.com)\n* User Name: \u0110\u1ecba ch\u1ec9 email ( Ch\u00ednh l\u00e0 E-mail Address \u0111\u00e3 nh\u1eadp b\u00ean tr\u00ean) \n* Password: M\u1eadt kh\u1ea9u \u0111\u01b0\u1ee3c c\u1ea5p\n* Tick \u201cRemember Password\u201d:  N\u1ebfu mu\u1ed1n ghi nh\u1edb m\u1eadt kh\u1ea9u cho nh\u1eefng l\u1ea7n \u0111\u0103ng nh\u1eadp mail sau.\n\n\n1\n    L\u01b0u \u00fd: Kh\u00f4ng check v\u00e0o \u00f4 \u201cRequire logon using Source Password Authentication(SPA)\u201d\n\n\n\n\n\n\nB\u01b0\u1edbc 8: Click n\u00fat \u201cMore Settings\u2026\u201d:\n\n\n\n\nB\u01b0\u1edbc 9: Ch\u1ecdn tab \u201cOutgoing Server\u201d, hi\u1ec3n th\u1ecb m\u00e0n h\u00ecnh: \n\n\n\n\nB\u01b0\u1edbc 10: Check v\u00e0o \u00f4 \u201c My outgoing server (SMTP) requires authentication\u201d\n\n\nB\u01b0\u1edbc 11: Ch\u1ecdn tab \u201cAdvanced\u201d : \n\n\n\n\nB\u01b0\u1edbc 12: Thi\u1ebft l\u1eadp l\u1ea1i gi\u00e1 tr\u1ecb cho c\u00e1c tr\u01b0\u1eddng:\n\u2022   Check v\u00e0o \u00f4 \u201cThis server require an encrypted connection (SSL)\u201d -> Gi\u00e1 tr\u1ecb \u00f4 \u201cIncoming server (POP3)\u201d hi\u1ec3n th\u1ecb l\u00e0: 995\n\u2022   Thi\u1ebft l\u1eadp l\u1ea1i g\u00eda tr\u1ecb \u00f4 \u201cOutgoing server (SMTP)\u201d: 456\n\u2022   Trong selectbox \u201cUse the following type of encrypted connection\u201d: ch\u1ecdn ph\u01b0\u01a1ng th\u1ee9c SSL\n\n\n\nB\u01b0\u1edbc 13: Click n\u00fat \u201cOK\u201d\n\n\nB\u01b0\u1edbc 14: Click n\u00fat \u201cTest Account Settings\u201d: N\u1ebfu th\u1ea5y email test -> C\u00e0i \u0111\u1eb7t th\u00e0nh c\u00f4ng. \n\n\nB\u01b0\u1edbc 15: Quay l\u1ea1i v\u00e0 click n\u00fat \u201cNext\u201d, hi\u1ec3n th\u1ecb m\u00e0n h\u00ecnh: \n\n\n\n\nClick \u201cFinish\u201d \u0111\u1ec3 ho\u00e0n t\u1ea5t qu\u00e1 tr\u00ecnh thi\u1ebft l\u1eadp.\n\n\nH\u01b0\u1edbng d\u1eabn c\u00e1ch t\u00edch h\u1ee3p mail trong Gmail.com\n#\n\n\nB\u01b0\u1edbc 1: Truy c\u1eadp \u0111\u1ecba ch\u1ec9 gmail.com \n\n\nB\u01b0\u1edbc 2: \u0110\u0103ng nh\u1eadp v\u00e0o Gmail v\u1edbi t\u00e0i kho\u1ea3n mail v\u1eeba c\u1ea5u h\u00ecnh tr\u00ean Outlook\n\n\nB\u01b0\u1edbc 3: V\u00e0o m\u1ee5c \u201cC\u00e0i \u0111\u1eb7t\u201d v\u00e0 ch\u1ecdn tab \u201cChuy\u1ec3n ti\u1ebfp POP/IMAP\u201d, hi\u1ec3n th\u1ecb m\u00e0n h\u00ecnh: \n\n\n\n\nB\u01b0\u1edbc 4: Trong m\u1ee5c \u201cTr\u1ea1ng th\u00e1i: POP \u0111\u01b0\u1ee3c k\u00edch ho\u1ea1t\u201d: check v\u00e0o \u201cB\u1eadt ch\u1ee9c n\u0103ng t\u1ea3i POP cho t\u1ea5t c\u1ea3 c\u00e1c th\u01b0 th\u1eadm ch\u00ed c\u00e1c th\u01b0 \u0111\u00e3 \u0111\u01b0\u1ee3c t\u1ea3i xu\u1ed1ng\u201d\n\n\n\n\nB\u01b0\u1edbc 5: Click n\u00fat \u201cL\u01b0u thay \u0111\u1ed5i\u201d \u0111\u1ec3 ho\u00e0n t\u1ea5t qu\u00e1 tr\u00ecnh t\u00edch h\u1ee3p.\n\n\nH\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng mail trong c\u00f4ng vi\u1ec7c\n#\n\n\nVi\u1ec7c g\u1eedi \u2013 nh\u1eadn mail \u0111\u01b0\u1ee3c quy \u0111\u1ecbnh nh\u01b0 sau:\n\n* S\u1eed d\u1ee5ng ch\u01b0\u01a1ng tr\u00ecnh MS Outlook khi l\u00e0m vi\u1ec7c tr\u00ean m\u00e1y c\u00e1 nh\u00e2n. N\u1ed9i dung tr\u00ecnh b\u00e0y trong mail \u0111\u01b0\u1ee3c ph\u1ea3i \u0111\u1ecbnh d\u1ea1ng nh\u01b0 sau: Font Arial; Size 10; Paragraph: Before 0pt, After 0pt, Line spacing 1.5 line\n* Tr\u01b0\u1eddng h\u1ee3p d\u00f9ng m\u00e1y t\u00ednh kh\u00e1c ho\u1eb7c tr\u00ean tablet, smartphone th\u00ec c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng webmail ho\u1eb7c \u1ee9ng d\u1ee5ng h\u1ed7 tr\u1ee3 kh\u00e1c.\n* Tr\u01b0\u1eddng h\u1ee3p g\u1eedi mail mang t\u00ednh ch\u1ea5t giao vi\u1ec7c ho\u1eb7c xin \u00fd ki\u1ebfn th\u00ec ph\u1ea3i To \u0111\u00ednh danh t\u1edbi ng\u01b0\u1eddi \u0111\u00f3 v\u00e0 CC \u0111\u1ebfn ng\u01b0\u1eddi c\u00f3 li\u00ean quan.\n* Tr\u01b0\u1eddng h\u1ee3p g\u1eedi mail mang t\u00ednh ch\u1ea5t th\u00f4ng b\u00e1o th\u00ec c\u00f3 th\u1ec3 To \u0111\u1ebfn nh\u00f3m mail ho\u1eb7c nhi\u1ec1u ng\u01b0\u1eddi, nh\u1eefng ng\u01b0\u1eddi nh\u1eadn kh\u00f4ng c\u1ea7n ph\u1ea3i h\u1ed3i l\u1ea1i.",
            "title": "Outlook"
        },
        {
            "location": "/software_dev/Outlook/#huong-dan-su-dung",
            "text": "",
            "title": "H\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng"
        },
        {
            "location": "/software_dev/Outlook/#huong-dan-cau-hinh-outlook-2007",
            "text": "\u0110\u1ec3 s\u1eed d\u1ee5ng Microsoft Office Outlook 2007 b\u1ea1n ph\u1ea3i c\u00e0i b\u1ed9 Microsoft Office 2007 \nB\u01b0\u1edbc 1: M\u1edf Microsoft Office Outlook 2007  B\u01b0\u1edbc 2: Ch\u1ecdn Tool -> Account Settings\u2026    Xu\u1ea5t hi\u1ec7n m\u00e0n h\u00ecnh sau:   B\u01b0\u1edbc 3: \u1ede tab  \u201cE-mail\u201d, nh\u1ea5n n\u00fat \u201cNew\u201d, xu\u1ea5t hi\u1ec7n m\u00e0n h\u00ecnh:    B\u01b0\u1edbc 4: Click n\u00fat \u201cNext\u201d:   B\u01b0\u1edbc 5: Kh\u00f4ng nh\u1eadp th\u00f4ng tin, ch\u1ec9 check v\u00e0o \u00f4 Manually configure server settings or additional server types v\u00e0 nh\u1ea5n \u201cNext\u201d:   B\u01b0\u1edbc 6: Ch\u1ecdn Internet Email Ti\u1ebfp t\u1ee5c click n\u00fat \u201cNext\u201d, xu\u1ea5t hi\u1ec7n m\u00e0n h\u00ecnh sau:    B\u01b0\u1edbc 7: Nh\u1eadp th\u00f4ng tin cho m\u00e0n h\u00ecnh \u1edf b\u01b0\u1edbc 6:\n* Your Name: Nh\u1eadp H\u1ecd v\u00e0 T\u00ean\n* E-mail Address: \u0110\u1ecba ch\u1ec9 email \u0111\u01b0\u1ee3c qu\u1ea3n tr\u1ecb c\u1ea5p. V\u00ed d\u1ee5:  bichdn@efy.com.vn \n* Account Type: Ch\u1ecdn POP3\n* Incoming mail server: \u0110\u1ecba ch\u1ec9 m\u00e1y ch\u1ee7 g\u1eedi email ( pop.gmail.com)\n* Outgoing mail server (SMTP): \u0110\u1ecba ch\u1ec9 m\u00e1y ch\u1ee7 nh\u1eadn email ( smtp.gmail.com)\n* User Name: \u0110\u1ecba ch\u1ec9 email ( Ch\u00ednh l\u00e0 E-mail Address \u0111\u00e3 nh\u1eadp b\u00ean tr\u00ean) \n* Password: M\u1eadt kh\u1ea9u \u0111\u01b0\u1ee3c c\u1ea5p\n* Tick \u201cRemember Password\u201d:  N\u1ebfu mu\u1ed1n ghi nh\u1edb m\u1eadt kh\u1ea9u cho nh\u1eefng l\u1ea7n \u0111\u0103ng nh\u1eadp mail sau.  1     L\u01b0u \u00fd: Kh\u00f4ng check v\u00e0o \u00f4 \u201cRequire logon using Source Password Authentication(SPA)\u201d   B\u01b0\u1edbc 8: Click n\u00fat \u201cMore Settings\u2026\u201d:   B\u01b0\u1edbc 9: Ch\u1ecdn tab \u201cOutgoing Server\u201d, hi\u1ec3n th\u1ecb m\u00e0n h\u00ecnh:    B\u01b0\u1edbc 10: Check v\u00e0o \u00f4 \u201c My outgoing server (SMTP) requires authentication\u201d  B\u01b0\u1edbc 11: Ch\u1ecdn tab \u201cAdvanced\u201d :    B\u01b0\u1edbc 12: Thi\u1ebft l\u1eadp l\u1ea1i gi\u00e1 tr\u1ecb cho c\u00e1c tr\u01b0\u1eddng:\n\u2022   Check v\u00e0o \u00f4 \u201cThis server require an encrypted connection (SSL)\u201d -> Gi\u00e1 tr\u1ecb \u00f4 \u201cIncoming server (POP3)\u201d hi\u1ec3n th\u1ecb l\u00e0: 995\n\u2022   Thi\u1ebft l\u1eadp l\u1ea1i g\u00eda tr\u1ecb \u00f4 \u201cOutgoing server (SMTP)\u201d: 456\n\u2022   Trong selectbox \u201cUse the following type of encrypted connection\u201d: ch\u1ecdn ph\u01b0\u01a1ng th\u1ee9c SSL  B\u01b0\u1edbc 13: Click n\u00fat \u201cOK\u201d  B\u01b0\u1edbc 14: Click n\u00fat \u201cTest Account Settings\u201d: N\u1ebfu th\u1ea5y email test -> C\u00e0i \u0111\u1eb7t th\u00e0nh c\u00f4ng.   B\u01b0\u1edbc 15: Quay l\u1ea1i v\u00e0 click n\u00fat \u201cNext\u201d, hi\u1ec3n th\u1ecb m\u00e0n h\u00ecnh:    Click \u201cFinish\u201d \u0111\u1ec3 ho\u00e0n t\u1ea5t qu\u00e1 tr\u00ecnh thi\u1ebft l\u1eadp.",
            "title": "H\u01b0\u1edbng d\u1eabn c\u1ea5u h\u00ecnh Outlook 2007"
        },
        {
            "location": "/software_dev/Outlook/#huong-dan-cach-tich-hop-mail-trong-gmailcom",
            "text": "B\u01b0\u1edbc 1: Truy c\u1eadp \u0111\u1ecba ch\u1ec9 gmail.com   B\u01b0\u1edbc 2: \u0110\u0103ng nh\u1eadp v\u00e0o Gmail v\u1edbi t\u00e0i kho\u1ea3n mail v\u1eeba c\u1ea5u h\u00ecnh tr\u00ean Outlook  B\u01b0\u1edbc 3: V\u00e0o m\u1ee5c \u201cC\u00e0i \u0111\u1eb7t\u201d v\u00e0 ch\u1ecdn tab \u201cChuy\u1ec3n ti\u1ebfp POP/IMAP\u201d, hi\u1ec3n th\u1ecb m\u00e0n h\u00ecnh:    B\u01b0\u1edbc 4: Trong m\u1ee5c \u201cTr\u1ea1ng th\u00e1i: POP \u0111\u01b0\u1ee3c k\u00edch ho\u1ea1t\u201d: check v\u00e0o \u201cB\u1eadt ch\u1ee9c n\u0103ng t\u1ea3i POP cho t\u1ea5t c\u1ea3 c\u00e1c th\u01b0 th\u1eadm ch\u00ed c\u00e1c th\u01b0 \u0111\u00e3 \u0111\u01b0\u1ee3c t\u1ea3i xu\u1ed1ng\u201d   B\u01b0\u1edbc 5: Click n\u00fat \u201cL\u01b0u thay \u0111\u1ed5i\u201d \u0111\u1ec3 ho\u00e0n t\u1ea5t qu\u00e1 tr\u00ecnh t\u00edch h\u1ee3p.",
            "title": "H\u01b0\u1edbng d\u1eabn c\u00e1ch t\u00edch h\u1ee3p mail trong Gmail.com"
        },
        {
            "location": "/software_dev/Outlook/#huong-dan-su-dung-mail-trong-cong-viec",
            "text": "Vi\u1ec7c g\u1eedi \u2013 nh\u1eadn mail \u0111\u01b0\u1ee3c quy \u0111\u1ecbnh nh\u01b0 sau: \n* S\u1eed d\u1ee5ng ch\u01b0\u01a1ng tr\u00ecnh MS Outlook khi l\u00e0m vi\u1ec7c tr\u00ean m\u00e1y c\u00e1 nh\u00e2n. N\u1ed9i dung tr\u00ecnh b\u00e0y trong mail \u0111\u01b0\u1ee3c ph\u1ea3i \u0111\u1ecbnh d\u1ea1ng nh\u01b0 sau: Font Arial; Size 10; Paragraph: Before 0pt, After 0pt, Line spacing 1.5 line\n* Tr\u01b0\u1eddng h\u1ee3p d\u00f9ng m\u00e1y t\u00ednh kh\u00e1c ho\u1eb7c tr\u00ean tablet, smartphone th\u00ec c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng webmail ho\u1eb7c \u1ee9ng d\u1ee5ng h\u1ed7 tr\u1ee3 kh\u00e1c.\n* Tr\u01b0\u1eddng h\u1ee3p g\u1eedi mail mang t\u00ednh ch\u1ea5t giao vi\u1ec7c ho\u1eb7c xin \u00fd ki\u1ebfn th\u00ec ph\u1ea3i To \u0111\u00ednh danh t\u1edbi ng\u01b0\u1eddi \u0111\u00f3 v\u00e0 CC \u0111\u1ebfn ng\u01b0\u1eddi c\u00f3 li\u00ean quan.\n* Tr\u01b0\u1eddng h\u1ee3p g\u1eedi mail mang t\u00ednh ch\u1ea5t th\u00f4ng b\u00e1o th\u00ec c\u00f3 th\u1ec3 To \u0111\u1ebfn nh\u00f3m mail ho\u1eb7c nhi\u1ec1u ng\u01b0\u1eddi, nh\u1eefng ng\u01b0\u1eddi nh\u1eadn kh\u00f4ng c\u1ea7n ph\u1ea3i h\u1ed3i l\u1ea1i.",
            "title": "H\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng mail trong c\u00f4ng vi\u1ec7c"
        },
        {
            "location": "/software_dev/office/",
            "text": "Nguy\u00ean t\u1eafc\n#\n\n\n\n\nT\u1ea5t c\u1ea3 c\u00e1c v\u0103n b\u1ea3n, t\u00e0i li\u1ec7u c\u1ee7a C\u00f4ng ty vi\u1ebft \u0111\u1ec1u ph\u1ea3i c\u00f3 m\u1ed9t h\u00ecnh th\u1ee9c tr\u00ecnh b\u00e0y nh\u1ea5t qu\u00e1n, chuy\u00ean nghi\u1ec7p v\u00e0 d\u1ec5 thay \u0111\u1ed5i khi c\u1ea7n thi\u1ebft.\n\n\nVi\u1ec7c \u0111\u1ecbnh d\u1ea1ng v\u0103n b\u1ea3n ph\u1ea3i \u0111\u01a1n gi\u1ea3n, d\u1ec5 hi\u1ec3u \u0111\u1ec3 t\u1ea5t c\u1ea3 m\u1ecdi ng\u01b0\u1eddi \u0111\u1ec1u s\u1eed d\u1ee5ng \u0111\u01b0\u1ee3c.\n\n\nVi\u1ec7c \u0111\u1ecbnh d\u1ea1ng v\u0103n b\u1ea3n \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n tr\u00ean c\u01a1 s\u1edf th\u1ed1ng nh\u1ea5t s\u1eed d\u1ee5ng m\u1ed9t b\u1ed9 style chu\u1ea9n \u0111\u01b0\u1ee3c \u0111\u1eb7t trong t\u1eadp tin template chu\u1ea9n (Normal.dotm).\n\n\n\n\nH\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng\n#\n\n\nPh\u01b0\u01a1ng ph\u00e1p \u0111\u1ec3 Word s\u1eed d\u1ee5ng b\u1ed9 style chu\u1ea9n cho c\u00e1c t\u1eadp tin\n#\n\n\n\n\n\u0110\u0103ng nh\u1eadp SVN v\u00e0 l\u1ea5y t\u1ec7p tin Template v\u1ec1 m\u00e1y theo \u0111\u01b0\u1eddng link : ../SVN/PHATTRIEN-TRIENKHAI/NHAN VIEN/Templace ( \u0110\u1ecdc t\u00e0i li\u1ec7u h\u01b0\u1edbng d\u1eabn c\u00e1ch s\u1eed d\u1ee5ng SVN)\n\n\nT\u1ea1o m\u1ed9t th\u01b0 m\u1ee5c m\u1edbi \u0111\u1ec3 ch\u1ee9a t\u1eadp tin template chu\u1ea9n, v\u00ed d\u1ee5: D:\\EFY-TEMPLATE\n\n\nCopy t\u1eadp tin template chu\u1ea9n v\u00e0o th\u01b0 m\u1ee5c v\u1eeba t\u1ea1o\n\n\n\u0110\u1eb7t l\u1ea1i \u0111\u01b0\u1eddng d\u1eabn ng\u1ea7m \u0111\u1ecbnh \u0111\u1ebfn th\u01b0 m\u1ee5c ch\u1ee9a t\u1eadp tin template \u0111\u01b0\u1ee3c WORD s\u1eed d\u1ee5ng cho c\u00e1c t\u1eadp tin v\u0103n b\u1ea3n m\u1edbi b\u1eb1ng c\u00e1ch :\n    ** Ch\u1ecdn Word Options/ Advanced\n    Trong th\u1ebb General, click n\u00fat  \u201c File locations\u2026 \u201d v\u00e0 \u0111\u1eb7t l\u1ea1i gi\u00e1 tr\u1ecb c\u1ee7a m\u1ee5c \u201c User templates \u201d = D:\\EFY-TEMPLATE ( l\u00e0 th\u01b0 m\u1ee5c ch\u1ee9a t\u1eadp tin template chu\u1ea9n) \n    ** Click \u201c OK\u201d  v\u00e0 kh\u1edfi \u0111\u1ed9ng l\u1ea1i word\n\n\n\n\n\nH\u01b0\u1edbng d\u1eabn c\u1ee5 th\u1ec3 c\u00e1ch \u0111\u1ecbnh d\u1ea1ng v\u0103n b\u1ea3n\n#\n\n\n\n\n\n\n\n\nM\u1ee5c \u0111\u00edch \n\n\nT\u00ean Style s\u1eed d\u1ee5ng \n\n\n Ph\u00edm n\u00f3ng \n\n\n\n\n\n\n\n\n\n\n\u0110\u1ecbnh d\u1ea1ng cho \u0111o\u1ea1n v\u0103n b\u1ea3n ki\u1ec3u \u201cI. XX\u201d\n\n\nHeading 1\n\n\nCtrl+1\n\n\n\n\n\n\n\u0110\u1ecbnh d\u1ea1ng cho \u0111o\u1ea1n v\u0103n b\u1ea3n ki\u1ec3u \u201cI.1.XXX\n\n\nHeading 2\n\n\nctrl + 2\n\n\n\n\n\n\n\u0110\u1ecbnh d\u1ea1ng cho \u0111o\u1ea1n v\u0103n b\u1ea3n ki\u1ec3u \u201cI.1.1.XX\n\n\nHeading 3\n\n\nctrl + 3\n\n\n\n\n\n\n\u0110\u1ecbnh d\u1ea1ng ki\u1ec3u ch\u1eef b\u00ecnh th\u01b0\u1eddng\n\n\nNomal\n\n\nCtrl+ `\n\n\n\n\n\n\n\u0110\u1ecbnh d\u1ea1ng ki\u1ec3u ch\u1eef l\u00f9i v\u00e0o d\u1ea1ng: \u2022 xxxxxxxxx\n\n\nnormal\n\n\nAlt+1\n\n\n\n\n\n\n\u0110\u1ecbnh d\u1ea1ng ki\u1ec3u ch\u1eef l\u00f9i v\u00e0o c\u00f3 \u0111\u00e1nh s\u1ed1:1.xxxxxxxxx\n\n\nNormal\n\n\nAlt +2\n\n\n\n\n\n\n\u0110\u1ecbnh d\u1ea1ng ki\u1ec3u ch\u1eef trong m\u1ed9t b\u1ea3ng\n\n\ntable\n\n\nAtl+3\n\n\n\n\n\n\n\u0110\u1ecbnh d\u1ea1ng ki\u1ec3u ch\u1eef d\u1ea1ng ti\u00eau \u0111\u1ec1\n\n\ntitle\n\n\nAtl+`",
            "title": "Microsoft Office"
        },
        {
            "location": "/software_dev/office/#nguyen-tac",
            "text": "T\u1ea5t c\u1ea3 c\u00e1c v\u0103n b\u1ea3n, t\u00e0i li\u1ec7u c\u1ee7a C\u00f4ng ty vi\u1ebft \u0111\u1ec1u ph\u1ea3i c\u00f3 m\u1ed9t h\u00ecnh th\u1ee9c tr\u00ecnh b\u00e0y nh\u1ea5t qu\u00e1n, chuy\u00ean nghi\u1ec7p v\u00e0 d\u1ec5 thay \u0111\u1ed5i khi c\u1ea7n thi\u1ebft.  Vi\u1ec7c \u0111\u1ecbnh d\u1ea1ng v\u0103n b\u1ea3n ph\u1ea3i \u0111\u01a1n gi\u1ea3n, d\u1ec5 hi\u1ec3u \u0111\u1ec3 t\u1ea5t c\u1ea3 m\u1ecdi ng\u01b0\u1eddi \u0111\u1ec1u s\u1eed d\u1ee5ng \u0111\u01b0\u1ee3c.  Vi\u1ec7c \u0111\u1ecbnh d\u1ea1ng v\u0103n b\u1ea3n \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n tr\u00ean c\u01a1 s\u1edf th\u1ed1ng nh\u1ea5t s\u1eed d\u1ee5ng m\u1ed9t b\u1ed9 style chu\u1ea9n \u0111\u01b0\u1ee3c \u0111\u1eb7t trong t\u1eadp tin template chu\u1ea9n (Normal.dotm).",
            "title": "Nguy\u00ean t\u1eafc"
        },
        {
            "location": "/software_dev/office/#huong-dan-su-dung",
            "text": "",
            "title": "H\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng"
        },
        {
            "location": "/software_dev/office/#phuong-phap-e-word-su-dung-bo-style-chuan-cho-cac-tap-tin",
            "text": "\u0110\u0103ng nh\u1eadp SVN v\u00e0 l\u1ea5y t\u1ec7p tin Template v\u1ec1 m\u00e1y theo \u0111\u01b0\u1eddng link : ../SVN/PHATTRIEN-TRIENKHAI/NHAN VIEN/Templace ( \u0110\u1ecdc t\u00e0i li\u1ec7u h\u01b0\u1edbng d\u1eabn c\u00e1ch s\u1eed d\u1ee5ng SVN)  T\u1ea1o m\u1ed9t th\u01b0 m\u1ee5c m\u1edbi \u0111\u1ec3 ch\u1ee9a t\u1eadp tin template chu\u1ea9n, v\u00ed d\u1ee5: D:\\EFY-TEMPLATE  Copy t\u1eadp tin template chu\u1ea9n v\u00e0o th\u01b0 m\u1ee5c v\u1eeba t\u1ea1o  \u0110\u1eb7t l\u1ea1i \u0111\u01b0\u1eddng d\u1eabn ng\u1ea7m \u0111\u1ecbnh \u0111\u1ebfn th\u01b0 m\u1ee5c ch\u1ee9a t\u1eadp tin template \u0111\u01b0\u1ee3c WORD s\u1eed d\u1ee5ng cho c\u00e1c t\u1eadp tin v\u0103n b\u1ea3n m\u1edbi b\u1eb1ng c\u00e1ch :\n    ** Ch\u1ecdn Word Options/ Advanced\n    Trong th\u1ebb General, click n\u00fat  \u201c File locations\u2026 \u201d v\u00e0 \u0111\u1eb7t l\u1ea1i gi\u00e1 tr\u1ecb c\u1ee7a m\u1ee5c \u201c User templates \u201d = D:\\EFY-TEMPLATE ( l\u00e0 th\u01b0 m\u1ee5c ch\u1ee9a t\u1eadp tin template chu\u1ea9n) \n    ** Click \u201c OK\u201d  v\u00e0 kh\u1edfi \u0111\u1ed9ng l\u1ea1i word",
            "title": "Ph\u01b0\u01a1ng ph\u00e1p \u0111\u1ec3 Word s\u1eed d\u1ee5ng b\u1ed9 style chu\u1ea9n cho c\u00e1c t\u1eadp tin"
        },
        {
            "location": "/software_dev/office/#huong-dan-cu-the-cach-inh-dang-van-ban",
            "text": "M\u1ee5c \u0111\u00edch   T\u00ean Style s\u1eed d\u1ee5ng    Ph\u00edm n\u00f3ng       \u0110\u1ecbnh d\u1ea1ng cho \u0111o\u1ea1n v\u0103n b\u1ea3n ki\u1ec3u \u201cI. XX\u201d  Heading 1  Ctrl+1    \u0110\u1ecbnh d\u1ea1ng cho \u0111o\u1ea1n v\u0103n b\u1ea3n ki\u1ec3u \u201cI.1.XXX  Heading 2  ctrl + 2    \u0110\u1ecbnh d\u1ea1ng cho \u0111o\u1ea1n v\u0103n b\u1ea3n ki\u1ec3u \u201cI.1.1.XX  Heading 3  ctrl + 3    \u0110\u1ecbnh d\u1ea1ng ki\u1ec3u ch\u1eef b\u00ecnh th\u01b0\u1eddng  Nomal  Ctrl+ `    \u0110\u1ecbnh d\u1ea1ng ki\u1ec3u ch\u1eef l\u00f9i v\u00e0o d\u1ea1ng: \u2022 xxxxxxxxx  normal  Alt+1    \u0110\u1ecbnh d\u1ea1ng ki\u1ec3u ch\u1eef l\u00f9i v\u00e0o c\u00f3 \u0111\u00e1nh s\u1ed1:1.xxxxxxxxx  Normal  Alt +2    \u0110\u1ecbnh d\u1ea1ng ki\u1ec3u ch\u1eef trong m\u1ed9t b\u1ea3ng  table  Atl+3    \u0110\u1ecbnh d\u1ea1ng ki\u1ec3u ch\u1eef d\u1ea1ng ti\u00eau \u0111\u1ec1  title  Atl+`",
            "title": "H\u01b0\u1edbng d\u1eabn c\u1ee5 th\u1ec3 c\u00e1ch \u0111\u1ecbnh d\u1ea1ng v\u0103n b\u1ea3n"
        },
        {
            "location": "/software_dev/git/",
            "text": "Gi\u1edbi thi\u1ec7u\n#\n\n\nH\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng\n#",
            "title": "Getting Started"
        },
        {
            "location": "/software_dev/git/#gioi-thieu",
            "text": "",
            "title": "Gi\u1edbi thi\u1ec7u"
        },
        {
            "location": "/software_dev/git/#huong-dan-su-dung",
            "text": "",
            "title": "H\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng"
        },
        {
            "location": "/software_dev/git/",
            "text": "Gi\u1edbi thi\u1ec7u\n#\n\n\nH\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng\n#",
            "title": "Git Basics"
        },
        {
            "location": "/software_dev/git/#gioi-thieu",
            "text": "",
            "title": "Gi\u1edbi thi\u1ec7u"
        },
        {
            "location": "/software_dev/git/#huong-dan-su-dung",
            "text": "",
            "title": "H\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng"
        },
        {
            "location": "/software_dev/git/",
            "text": "Gi\u1edbi thi\u1ec7u\n#\n\n\nH\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng\n#",
            "title": "Git Branching"
        },
        {
            "location": "/software_dev/git/#gioi-thieu",
            "text": "",
            "title": "Gi\u1edbi thi\u1ec7u"
        },
        {
            "location": "/software_dev/git/#huong-dan-su-dung",
            "text": "",
            "title": "H\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng"
        },
        {
            "location": "/software_dev/git/command/",
            "text": "Create a new repository on the command line\n#\n\n\n1\n2\n3\n4\n5\ngit init\ngit add .\ngit commit -m \"first commit\"\ngit remote add origin https://github.com/toanph1505/test.git\ngit push -u origin master",
            "title": "Git Command"
        },
        {
            "location": "/software_dev/git/command/#create-a-new-repository-on-the-command-line",
            "text": "1\n2\n3\n4\n5 git init\ngit add .\ngit commit -m \"first commit\"\ngit remote add origin https://github.com/toanph1505/test.git\ngit push -u origin master",
            "title": "Create a new repository on the command line"
        }
    ]
}